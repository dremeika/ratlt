if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1, cljs.core._STAR_flush_on_newline_STAR_, cljs.core.constant$keyword$2, cljs.core._STAR_print_readably_STAR_, cljs.core.constant$keyword$3, cljs.core._STAR_print_meta_STAR_, cljs.core.constant$keyword$4, cljs.core._STAR_print_dup_STAR_, cljs.core.constant$keyword$5, cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__11191__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__11190 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11190) : cljs.core.into_array.call(null, G__11190);
      }());
    };
    var G__11191 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11192__i = 0, G__11192__a = new Array(arguments.length - 0);
        while (G__11192__i < G__11192__a.length) {
          G__11192__a[G__11192__i] = arguments[G__11192__i + 0];
          ++G__11192__i;
        }
        args = new cljs.core.IndexedSeq(G__11192__a, 0);
      }
      return G__11191__delegate.call(this, args);
    };
    G__11191.cljs$lang$maxFixedArity = 0;
    G__11191.cljs$lang$applyTo = function(arglist__11193) {
      var args = cljs.core.seq(arglist__11193);
      return G__11191__delegate(args);
    };
    G__11191.cljs$core$IFn$_invoke$arity$variadic = G__11191__delegate;
    return G__11191;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__11195 = x;
  return goog.isString(G__11195);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__11197 = x__$1;
    return goog.typeOf(G__11197);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3731__auto__ = ty;
    if (cljs.core.truth_(and__3731__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3731__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__11199 = obj;
    return goog.typeOf(G__11199);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__11201 = Symbol;
  return goog.typeOf(G__11201);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4630__auto___11203 = len;
  var i_11204 = 0;
  while (true) {
    if (i_11204 < n__4630__auto___11203) {
      new_arr[i_11204] = arr[i_11204];
      var G__11205 = i_11204 + 1;
      i_11204 = G__11205;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__11206 = i + 1;
      i = G__11206;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__11215__delegate = function(array, i, idxs) {
      var G__11212 = aget;
      var G__11213 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__11214 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11212, G__11213, G__11214) : cljs.core.apply.call(null, G__11212, G__11213, G__11214);
    };
    var G__11215 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__11216__i = 0, G__11216__a = new Array(arguments.length - 2);
        while (G__11216__i < G__11216__a.length) {
          G__11216__a[G__11216__i] = arguments[G__11216__i + 2];
          ++G__11216__i;
        }
        idxs = new cljs.core.IndexedSeq(G__11216__a, 0);
      }
      return G__11215__delegate.call(this, array, i, idxs);
    };
    G__11215.cljs$lang$maxFixedArity = 2;
    G__11215.cljs$lang$applyTo = function(arglist__11217) {
      var array = cljs.core.first(arglist__11217);
      arglist__11217 = cljs.core.next(arglist__11217);
      var i = cljs.core.first(arglist__11217);
      var idxs = cljs.core.rest(arglist__11217);
      return G__11215__delegate(array, i, idxs);
    };
    G__11215.cljs$core$IFn$_invoke$arity$variadic = G__11215__delegate;
    return G__11215;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__11218 = null;
        if (arguments.length > 2) {
          var G__11219__i = 0, G__11219__a = new Array(arguments.length - 2);
          while (G__11219__i < G__11219__a.length) {
            G__11219__a[G__11219__i] = arguments[G__11219__i + 2];
            ++G__11219__i;
          }
          G__11218 = new cljs.core.IndexedSeq(G__11219__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__11218);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__11228__delegate = function(array, idx, idx2, idxv) {
      var G__11224 = aset;
      var G__11225 = array[idx];
      var G__11226 = idx2;
      var G__11227 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11224, G__11225, G__11226, G__11227) : cljs.core.apply.call(null, G__11224, G__11225, G__11226, G__11227);
    };
    var G__11228 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__11229__i = 0, G__11229__a = new Array(arguments.length - 3);
        while (G__11229__i < G__11229__a.length) {
          G__11229__a[G__11229__i] = arguments[G__11229__i + 3];
          ++G__11229__i;
        }
        idxv = new cljs.core.IndexedSeq(G__11229__a, 0);
      }
      return G__11228__delegate.call(this, array, idx, idx2, idxv);
    };
    G__11228.cljs$lang$maxFixedArity = 3;
    G__11228.cljs$lang$applyTo = function(arglist__11230) {
      var array = cljs.core.first(arglist__11230);
      arglist__11230 = cljs.core.next(arglist__11230);
      var idx = cljs.core.first(arglist__11230);
      arglist__11230 = cljs.core.next(arglist__11230);
      var idx2 = cljs.core.first(arglist__11230);
      var idxv = cljs.core.rest(arglist__11230);
      return G__11228__delegate(array, idx, idx2, idxv);
    };
    G__11228.cljs$core$IFn$_invoke$arity$variadic = G__11228__delegate;
    return G__11228;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__11231 = null;
        if (arguments.length > 3) {
          var G__11232__i = 0, G__11232__a = new Array(arguments.length - 3);
          while (G__11232__i < G__11232__a.length) {
            G__11232__a[G__11232__i] = arguments[G__11232__i + 3];
            ++G__11232__i;
          }
          G__11231 = new cljs.core.IndexedSeq(G__11232__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__11231);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__11238 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__11239 = [];
    var G__11240 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11238, G__11239, G__11240) : cljs.core.reduce.call(null, G__11238, G__11239, G__11240);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__11241__i = 0, G__11241__a = new Array(arguments.length - 2);
      while (G__11241__i < G__11241__a.length) {
        G__11241__a[G__11241__i] = arguments[G__11241__i + 2];
        ++G__11241__i;
      }
      args = new cljs.core.IndexedSeq(G__11241__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__11242) {
    var obj = cljs.core.first(arglist__11242);
    arglist__11242 = cljs.core.next(arglist__11242);
    var s = cljs.core.first(arglist__11242);
    var args = cljs.core.rest(arglist__11242);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj11244 = {};
  return obj11244;
}();
cljs.core.IFn = function() {
  var obj11246 = {};
  return obj11246;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11292 = x__4387__auto__;
          return goog.typeOf(G__11292);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11294 = x__4387__auto__;
          return goog.typeOf(G__11294);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11296 = x__4387__auto__;
          return goog.typeOf(G__11296);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11298 = x__4387__auto__;
          return goog.typeOf(G__11298);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11300 = x__4387__auto__;
          return goog.typeOf(G__11300);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11302 = x__4387__auto__;
          return goog.typeOf(G__11302);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11304 = x__4387__auto__;
          return goog.typeOf(G__11304);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11306 = x__4387__auto__;
          return goog.typeOf(G__11306);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11308 = x__4387__auto__;
          return goog.typeOf(G__11308);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11310 = x__4387__auto__;
          return goog.typeOf(G__11310);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11312 = x__4387__auto__;
          return goog.typeOf(G__11312);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11314 = x__4387__auto__;
          return goog.typeOf(G__11314);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11316 = x__4387__auto__;
          return goog.typeOf(G__11316);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11318 = x__4387__auto__;
          return goog.typeOf(G__11318);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11320 = x__4387__auto__;
          return goog.typeOf(G__11320);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11322 = x__4387__auto__;
          return goog.typeOf(G__11322);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11324 = x__4387__auto__;
          return goog.typeOf(G__11324);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11326 = x__4387__auto__;
          return goog.typeOf(G__11326);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11328 = x__4387__auto__;
          return goog.typeOf(G__11328);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11330 = x__4387__auto__;
          return goog.typeOf(G__11330);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11332 = x__4387__auto__;
          return goog.typeOf(G__11332);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = cljs.core._invoke[function() {
          var G__11334 = x__4387__auto__;
          return goog.typeOf(G__11334);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._invoke["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj11336 = {};
  return obj11336;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3731__auto__ = value;
    if (and__3731__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4387__auto__ = value == null ? null : value;
    return function() {
      var or__3743__auto__ = cljs.core._clone[function() {
        var G__11340 = x__4387__auto__;
        return goog.typeOf(G__11340);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._clone["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj11342 = {};
  return obj11342;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._count[function() {
        var G__11346 = x__4387__auto__;
        return goog.typeOf(G__11346);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._count["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj11348 = {};
  return obj11348;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._empty[function() {
        var G__11352 = x__4387__auto__;
        return goog.typeOf(G__11352);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._empty["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj11354 = {};
  return obj11354;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._conj[function() {
        var G__11358 = x__4387__auto__;
        return goog.typeOf(G__11358);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._conj["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj11360 = {};
  return obj11360;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3731__auto__ = coll;
      if (and__3731__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4387__auto__ = coll == null ? null : coll;
      return function() {
        var or__3743__auto__ = cljs.core._nth[function() {
          var G__11366 = x__4387__auto__;
          return goog.typeOf(G__11366);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._nth["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3731__auto__ = coll;
      if (and__3731__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4387__auto__ = coll == null ? null : coll;
      return function() {
        var or__3743__auto__ = cljs.core._nth[function() {
          var G__11368 = x__4387__auto__;
          return goog.typeOf(G__11368);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._nth["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj11370 = {};
  return obj11370;
}();
cljs.core.ISeq = function() {
  var obj11372 = {};
  return obj11372;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._first[function() {
        var G__11376 = x__4387__auto__;
        return goog.typeOf(G__11376);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._first["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._rest[function() {
        var G__11380 = x__4387__auto__;
        return goog.typeOf(G__11380);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._rest["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj11382 = {};
  return obj11382;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._next[function() {
        var G__11386 = x__4387__auto__;
        return goog.typeOf(G__11386);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._next["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj11388 = {};
  return obj11388;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._lookup[function() {
          var G__11394 = x__4387__auto__;
          return goog.typeOf(G__11394);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._lookup["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._lookup[function() {
          var G__11396 = x__4387__auto__;
          return goog.typeOf(G__11396);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._lookup["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj11398 = {};
  return obj11398;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__11402 = x__4387__auto__;
        return goog.typeOf(G__11402);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._assoc[function() {
        var G__11406 = x__4387__auto__;
        return goog.typeOf(G__11406);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._assoc["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj11408 = {};
  return obj11408;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._dissoc[function() {
        var G__11412 = x__4387__auto__;
        return goog.typeOf(G__11412);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._dissoc["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj11414 = {};
  return obj11414;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._key[function() {
        var G__11418 = x__4387__auto__;
        return goog.typeOf(G__11418);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._key["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._val[function() {
        var G__11422 = x__4387__auto__;
        return goog.typeOf(G__11422);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._val["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj11424 = {};
  return obj11424;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._disjoin[function() {
        var G__11428 = x__4387__auto__;
        return goog.typeOf(G__11428);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._disjoin["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj11430 = {};
  return obj11430;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._peek[function() {
        var G__11434 = x__4387__auto__;
        return goog.typeOf(G__11434);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._peek["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._pop[function() {
        var G__11438 = x__4387__auto__;
        return goog.typeOf(G__11438);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._pop["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj11440 = {};
  return obj11440;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._assoc_n[function() {
        var G__11444 = x__4387__auto__;
        return goog.typeOf(G__11444);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj11446 = {};
  return obj11446;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._deref[function() {
        var G__11450 = x__4387__auto__;
        return goog.typeOf(G__11450);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._deref["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj11452 = {};
  return obj11452;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._deref_with_timeout[function() {
        var G__11456 = x__4387__auto__;
        return goog.typeOf(G__11456);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj11458 = {};
  return obj11458;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._meta[function() {
        var G__11462 = x__4387__auto__;
        return goog.typeOf(G__11462);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._meta["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj11464 = {};
  return obj11464;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._with_meta[function() {
        var G__11468 = x__4387__auto__;
        return goog.typeOf(G__11468);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._with_meta["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj11470 = {};
  return obj11470;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3731__auto__ = coll;
      if (and__3731__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4387__auto__ = coll == null ? null : coll;
      return function() {
        var or__3743__auto__ = cljs.core._reduce[function() {
          var G__11476 = x__4387__auto__;
          return goog.typeOf(G__11476);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._reduce["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3731__auto__ = coll;
      if (and__3731__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4387__auto__ = coll == null ? null : coll;
      return function() {
        var or__3743__auto__ = cljs.core._reduce[function() {
          var G__11478 = x__4387__auto__;
          return goog.typeOf(G__11478);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._reduce["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj11480 = {};
  return obj11480;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._kv_reduce[function() {
        var G__11484 = x__4387__auto__;
        return goog.typeOf(G__11484);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj11486 = {};
  return obj11486;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._equiv[function() {
        var G__11490 = x__4387__auto__;
        return goog.typeOf(G__11490);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._equiv["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj11492 = {};
  return obj11492;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._hash[function() {
        var G__11496 = x__4387__auto__;
        return goog.typeOf(G__11496);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._hash["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj11498 = {};
  return obj11498;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._seq[function() {
        var G__11502 = x__4387__auto__;
        return goog.typeOf(G__11502);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._seq["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj11504 = {};
  return obj11504;
}();
cljs.core.IList = function() {
  var obj11506 = {};
  return obj11506;
}();
cljs.core.IRecord = function() {
  var obj11508 = {};
  return obj11508;
}();
cljs.core.IReversible = function() {
  var obj11510 = {};
  return obj11510;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._rseq[function() {
        var G__11514 = x__4387__auto__;
        return goog.typeOf(G__11514);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._rseq["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj11516 = {};
  return obj11516;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._sorted_seq[function() {
        var G__11520 = x__4387__auto__;
        return goog.typeOf(G__11520);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._sorted_seq_from[function() {
        var G__11524 = x__4387__auto__;
        return goog.typeOf(G__11524);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._entry_key[function() {
        var G__11528 = x__4387__auto__;
        return goog.typeOf(G__11528);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._entry_key["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._comparator[function() {
        var G__11532 = x__4387__auto__;
        return goog.typeOf(G__11532);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._comparator["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj11534 = {};
  return obj11534;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3731__auto__ = writer;
    if (and__3731__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4387__auto__ = writer == null ? null : writer;
    return function() {
      var or__3743__auto__ = cljs.core._write[function() {
        var G__11538 = x__4387__auto__;
        return goog.typeOf(G__11538);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._write["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3731__auto__ = writer;
    if (and__3731__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4387__auto__ = writer == null ? null : writer;
    return function() {
      var or__3743__auto__ = cljs.core._flush[function() {
        var G__11542 = x__4387__auto__;
        return goog.typeOf(G__11542);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._flush["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj11544 = {};
  return obj11544;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._pr_writer[function() {
        var G__11548 = x__4387__auto__;
        return goog.typeOf(G__11548);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj11550 = {};
  return obj11550;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3731__auto__ = d;
    if (and__3731__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4387__auto__ = d == null ? null : d;
    return function() {
      var or__3743__auto__ = cljs.core._realized_QMARK_[function() {
        var G__11554 = x__4387__auto__;
        return goog.typeOf(G__11554);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj11556 = {};
  return obj11556;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3731__auto__ = this$;
    if (and__3731__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4387__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3743__auto__ = cljs.core._notify_watches[function() {
        var G__11560 = x__4387__auto__;
        return goog.typeOf(G__11560);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3731__auto__ = this$;
    if (and__3731__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4387__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3743__auto__ = cljs.core._add_watch[function() {
        var G__11564 = x__4387__auto__;
        return goog.typeOf(G__11564);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._add_watch["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3731__auto__ = this$;
    if (and__3731__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4387__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3743__auto__ = cljs.core._remove_watch[function() {
        var G__11568 = x__4387__auto__;
        return goog.typeOf(G__11568);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj11570 = {};
  return obj11570;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._as_transient[function() {
        var G__11574 = x__4387__auto__;
        return goog.typeOf(G__11574);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._as_transient["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj11576 = {};
  return obj11576;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._conj_BANG_[function() {
        var G__11580 = x__4387__auto__;
        return goog.typeOf(G__11580);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._persistent_BANG_[function() {
        var G__11584 = x__4387__auto__;
        return goog.typeOf(G__11584);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj11586 = {};
  return obj11586;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._assoc_BANG_[function() {
        var G__11590 = x__4387__auto__;
        return goog.typeOf(G__11590);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj11592 = {};
  return obj11592;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__11596 = x__4387__auto__;
        return goog.typeOf(G__11596);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj11598 = {};
  return obj11598;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__11602 = x__4387__auto__;
        return goog.typeOf(G__11602);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._pop_BANG_[function() {
        var G__11606 = x__4387__auto__;
        return goog.typeOf(G__11606);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj11608 = {};
  return obj11608;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3731__auto__ = tcoll;
    if (and__3731__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4387__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3743__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__11612 = x__4387__auto__;
        return goog.typeOf(G__11612);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj11614 = {};
  return obj11614;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._compare[function() {
        var G__11618 = x__4387__auto__;
        return goog.typeOf(G__11618);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._compare["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj11620 = {};
  return obj11620;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._drop_first[function() {
        var G__11624 = x__4387__auto__;
        return goog.typeOf(G__11624);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._drop_first["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj11626 = {};
  return obj11626;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._chunked_first[function() {
        var G__11630 = x__4387__auto__;
        return goog.typeOf(G__11630);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._chunked_rest[function() {
        var G__11634 = x__4387__auto__;
        return goog.typeOf(G__11634);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj11636 = {};
  return obj11636;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._chunked_next[function() {
        var G__11640 = x__4387__auto__;
        return goog.typeOf(G__11640);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj11642 = {};
  return obj11642;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._name[function() {
        var G__11646 = x__4387__auto__;
        return goog.typeOf(G__11646);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._name["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._namespace[function() {
        var G__11650 = x__4387__auto__;
        return goog.typeOf(G__11650);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._namespace["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj11652 = {};
  return obj11652;
}();
cljs.core.IReset = function() {
  var obj11654 = {};
  return obj11654;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._reset_BANG_[function() {
        var G__11658 = x__4387__auto__;
        return goog.typeOf(G__11658);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj11660 = {};
  return obj11660;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._swap_BANG_[function() {
          var G__11670 = x__4387__auto__;
          return goog.typeOf(G__11670);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._swap_BANG_[function() {
          var G__11672 = x__4387__auto__;
          return goog.typeOf(G__11672);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._swap_BANG_[function() {
          var G__11674 = x__4387__auto__;
          return goog.typeOf(G__11674);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3731__auto__ = o;
      if (and__3731__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4387__auto__ = o == null ? null : o;
      return function() {
        var or__3743__auto__ = cljs.core._swap_BANG_[function() {
          var G__11676 = x__4387__auto__;
          return goog.typeOf(G__11676);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj11678 = {};
  return obj11678;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3731__auto__ = o;
    if (and__3731__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4387__auto__ = o == null ? null : o;
    return function() {
      var or__3743__auto__ = cljs.core._vreset_BANG_[function() {
        var G__11682 = x__4387__auto__;
        return goog.typeOf(G__11682);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj11684 = {};
  return obj11684;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3731__auto__ = coll;
    if (and__3731__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4387__auto__ = coll == null ? null : coll;
    return function() {
      var or__3743__auto__ = cljs.core._iterator[function() {
        var G__11688 = x__4387__auto__;
        return goog.typeOf(G__11688);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._iterator["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__11691 = 4294967295;
  var G__11692 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11691, G__11692) : Math.imul.call(null, G__11691, G__11692);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__11695 = a;
    var G__11696 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11695, G__11696) : Math.imul.call(null, G__11695, G__11696);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__11697 = i + 2;
        var G__11698 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__11697;
        h1 = G__11698;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj11700 = {};
  return obj11700;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__11701 = i + 1;
          var G__11702 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__11701;
          hash = G__11702;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj11706 = {};
      return obj11706;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__11709 = o;
    if (G__11709) {
      var bit__4417__auto__ = G__11709.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4417__auto__ || G__11709.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__11710 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11710) : Math.floor.call(null, G__11710);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = cljs.core.not(a.ns);
      if (and__3731__auto__) {
        return b.ns;
      } else {
        return and__3731__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11717 = a.ns;
            var G__11718 = b.ns;
            return goog.array.defaultCompare(G__11717, G__11718);
          }();
          if (0 === nsc) {
            var G__11719 = a.name;
            var G__11720 = b.name;
            return goog.array.defaultCompare(G__11719, G__11720);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11721 = a.name;
        var G__11722 = b.name;
        return goog.array.defaultCompare(G__11721, G__11722);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4164__auto__ = self__._hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__11724 = null;
  var G__11724__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__11724__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__11724 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11724__2.call(this, self__, coll);
      case 3:
        return G__11724__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11724.cljs$core$IFn$_invoke$arity$2 = G__11724__2;
  G__11724.cljs$core$IFn$_invoke$arity$3 = G__11724__3;
  return G__11724;
}();
cljs.core.Symbol.prototype.apply = function(self__, args11723) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11723)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163840;
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__11728 = x;
  if (G__11728) {
    var bit__4424__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3743__auto__ = bit__4424__auto__;
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return G__11728.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__11728.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11728);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__11728);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__11730 = value;
  if (G__11730) {
    var bit__4424__auto__ = G__11730.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4424__auto__ || G__11730.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__11730.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11730);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__11730);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11732 = coll;
      if (G__11732) {
        var bit__4417__auto__ = G__11732.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4417__auto__ || G__11732.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11734 = coll;
      if (G__11734) {
        var bit__4417__auto__ = G__11734.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4417__auto__ || G__11734.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11736 = coll;
      if (G__11736) {
        var bit__4417__auto__ = G__11736.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4417__auto__ || G__11736.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__11738 = coll;
      if (G__11738) {
        var bit__4417__auto__ = G__11738.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4417__auto__ || G__11738.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__11743__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11744 = y;
            var G__11745 = cljs.core.first(more);
            var G__11746 = cljs.core.next(more);
            x = G__11744;
            y = G__11745;
            more = G__11746;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11743 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11747__i = 0, G__11747__a = new Array(arguments.length - 2);
        while (G__11747__i < G__11747__a.length) {
          G__11747__a[G__11747__i] = arguments[G__11747__i + 2];
          ++G__11747__i;
        }
        more = new cljs.core.IndexedSeq(G__11747__a, 0);
      }
      return G__11743__delegate.call(this, x, y, more);
    };
    G__11743.cljs$lang$maxFixedArity = 2;
    G__11743.cljs$lang$applyTo = function(arglist__11748) {
      var x = cljs.core.first(arglist__11748);
      arglist__11748 = cljs.core.next(arglist__11748);
      var y = cljs.core.first(arglist__11748);
      var more = cljs.core.rest(arglist__11748);
      return G__11743__delegate(x, y, more);
    };
    G__11743.cljs$core$IFn$_invoke$arity$variadic = G__11743__delegate;
    return G__11743;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__11749 = null;
        if (arguments.length > 2) {
          var G__11750__i = 0, G__11750__a = new Array(arguments.length - 2);
          while (G__11750__i < G__11750__a.length) {
            G__11750__a[G__11750__i] = arguments[G__11750__i + 2];
            ++G__11750__i;
          }
          G__11749 = new cljs.core.IndexedSeq(G__11750__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11749);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__11751 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11751) : cljs.core.es6_iterator_seq.call(null, G__11751);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11752 = n + 1;
      var G__11753 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11754 = cljs.core.next(coll__$1);
      n = G__11752;
      hash_code = G__11753;
      coll__$1 = G__11754;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__11755 = n + 1;
      var G__11756 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__11757 = cljs.core.next(coll__$1);
      n = G__11755;
      hash_code = G__11756;
      coll__$1 = G__11757;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__11758 = o;
  return goog.getUid(G__11758);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__11760 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11760) : cljs.core.deref.call(null, G__11760);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11767 = val;
            var G__11768 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11767, G__11768) : f.call(null, G__11767, G__11768);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11773 = nval;
            var G__11774 = n + 1;
            val = G__11773;
            n = G__11774;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11769 = val__$1;
          var G__11770 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11769, G__11770) : f.call(null, G__11769, G__11770);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11775 = nval;
          var G__11776 = n + 1;
          val__$1 = G__11775;
          n = G__11776;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11771 = val__$1;
          var G__11772 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11771, G__11772) : f.call(null, G__11771, G__11772);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11777 = nval;
          var G__11778 = n + 1;
          val__$1 = G__11777;
          n = G__11778;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__11785 = val;
            var G__11786 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11785, G__11786) : f.call(null, G__11785, G__11786);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__11791 = nval;
            var G__11792 = n + 1;
            val = G__11791;
            n = G__11792;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11787 = val__$1;
          var G__11788 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11787, G__11788) : f.call(null, G__11787, G__11788);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11793 = nval;
          var G__11794 = n + 1;
          val__$1 = G__11793;
          n = G__11794;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__11789 = val__$1;
          var G__11790 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11789, G__11790) : f.call(null, G__11789, G__11790);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11795 = nval;
          var G__11796 = n + 1;
          val__$1 = G__11795;
          n = G__11796;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__11798 = x;
  if (G__11798) {
    var bit__4424__auto__ = G__11798.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4424__auto__ || G__11798.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__11798.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11798);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__11798);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__11800 = x;
  if (G__11800) {
    var bit__4424__auto__ = G__11800.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4424__auto__ || G__11800.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__11800.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11800);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__11800);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11801 = coll__$1;
  var G__11802 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11801, G__11802) : cljs.core.equiv_sequential.call(null, G__11801, G__11802);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11803 = o;
  var G__11804 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11803, G__11804) : cljs.core.cons.call(null, G__11803, G__11804);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__11807 = coll__$1;
  var G__11808 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11807, G__11808) : cljs.core.equiv_sequential.call(null, G__11807, G__11808);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11809 = cljs.core.List.EMPTY;
  var G__11810 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11809, G__11810) : cljs.core.with_meta.call(null, G__11809, G__11810);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__11811 = f;
  var G__11812 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11811, G__11812) : cljs.core.seq_reduce.call(null, G__11811, G__11812);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__11813 = f;
  var G__11814 = start;
  var G__11815 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11813, G__11814, G__11815) : cljs.core.seq_reduce.call(null, G__11813, G__11814, G__11815);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__11816 = o;
  var G__11817 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11816, G__11817) : cljs.core.cons.call(null, G__11816, G__11817);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__11818 = sn;
      s = G__11818;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__11823__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__11824 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__11825 = cljs.core.first(xs);
          var G__11826 = cljs.core.next(xs);
          coll = G__11824;
          x = G__11825;
          xs = G__11826;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__11823 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__11827__i = 0, G__11827__a = new Array(arguments.length - 2);
        while (G__11827__i < G__11827__a.length) {
          G__11827__a[G__11827__i] = arguments[G__11827__i + 2];
          ++G__11827__i;
        }
        xs = new cljs.core.IndexedSeq(G__11827__a, 0);
      }
      return G__11823__delegate.call(this, coll, x, xs);
    };
    G__11823.cljs$lang$maxFixedArity = 2;
    G__11823.cljs$lang$applyTo = function(arglist__11828) {
      var coll = cljs.core.first(arglist__11828);
      arglist__11828 = cljs.core.next(arglist__11828);
      var x = cljs.core.first(arglist__11828);
      var xs = cljs.core.rest(arglist__11828);
      return G__11823__delegate(coll, x, xs);
    };
    G__11823.cljs$core$IFn$_invoke$arity$variadic = G__11823__delegate;
    return G__11823;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__11829 = null;
        if (arguments.length > 2) {
          var G__11830__i = 0, G__11830__a = new Array(arguments.length - 2);
          while (G__11830__i < G__11830__a.length) {
            G__11830__a[G__11830__i] = arguments[G__11830__i + 2];
            ++G__11830__i;
          }
          G__11829 = new cljs.core.IndexedSeq(G__11830__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__11829);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__11831 = cljs.core.next(s);
      var G__11832 = acc + 1;
      s = G__11831;
      acc = G__11832;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__11834 = coll;
      if (G__11834) {
        var bit__4417__auto__ = G__11834.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4417__auto__ || G__11834.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11835 = cljs.core.next(coll);
              var G__11836 = n - 1;
              coll = G__11835;
              n = G__11836;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__11837 = cljs.core.next(coll);
              var G__11838 = n - 1;
              var G__11839 = not_found;
              coll = G__11837;
              n = G__11838;
              not_found = G__11839;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__11844 = coll;
          if (G__11844) {
            var bit__4417__auto__ = G__11844.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4417__auto__ || G__11844.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11845 = coll;
                  if (G__11845) {
                    var bit__4424__auto__ = G__11845.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4424__auto__ || G__11845.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11845.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11845);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11845);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__11846 = coll;
          if (G__11846) {
            var bit__4417__auto__ = G__11846.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4417__auto__ || G__11846.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__11847 = coll;
                  if (G__11847) {
                    var bit__4424__auto__ = G__11847.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4424__auto__ || G__11847.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__11847.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11847);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11847);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__11848 = n__$1 - 1;
      var G__11849 = cljs.core.rest(xs);
      n__$1 = G__11848;
      xs = G__11849;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__11852 = o;
        if (G__11852) {
          var bit__4417__auto__ = G__11852.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4417__auto__ || G__11852.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__11853 = o;
        if (G__11853) {
          var bit__4417__auto__ = G__11853.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4417__auto__ || G__11853.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__11857__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__11858 = ret;
          var G__11859 = cljs.core.first(kvs);
          var G__11860 = cljs.core.second(kvs);
          var G__11861 = cljs.core.nnext(kvs);
          coll = G__11858;
          k = G__11859;
          v = G__11860;
          kvs = G__11861;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11857 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11862__i = 0, G__11862__a = new Array(arguments.length - 3);
        while (G__11862__i < G__11862__a.length) {
          G__11862__a[G__11862__i] = arguments[G__11862__i + 3];
          ++G__11862__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11862__a, 0);
      }
      return G__11857__delegate.call(this, coll, k, v, kvs);
    };
    G__11857.cljs$lang$maxFixedArity = 3;
    G__11857.cljs$lang$applyTo = function(arglist__11863) {
      var coll = cljs.core.first(arglist__11863);
      arglist__11863 = cljs.core.next(arglist__11863);
      var k = cljs.core.first(arglist__11863);
      arglist__11863 = cljs.core.next(arglist__11863);
      var v = cljs.core.first(arglist__11863);
      var kvs = cljs.core.rest(arglist__11863);
      return G__11857__delegate(coll, k, v, kvs);
    };
    G__11857.cljs$core$IFn$_invoke$arity$variadic = G__11857__delegate;
    return G__11857;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__11864 = null;
        if (arguments.length > 3) {
          var G__11865__i = 0, G__11865__a = new Array(arguments.length - 3);
          while (G__11865__i < G__11865__a.length) {
            G__11865__a[G__11865__i] = arguments[G__11865__i + 3];
            ++G__11865__i;
          }
          G__11864 = new cljs.core.IndexedSeq(G__11865__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__11864);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__11868__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11869 = ret;
            var G__11870 = cljs.core.first(ks);
            var G__11871 = cljs.core.next(ks);
            coll = G__11869;
            k = G__11870;
            ks = G__11871;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11868 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11872__i = 0, G__11872__a = new Array(arguments.length - 2);
        while (G__11872__i < G__11872__a.length) {
          G__11872__a[G__11872__i] = arguments[G__11872__i + 2];
          ++G__11872__i;
        }
        ks = new cljs.core.IndexedSeq(G__11872__a, 0);
      }
      return G__11868__delegate.call(this, coll, k, ks);
    };
    G__11868.cljs$lang$maxFixedArity = 2;
    G__11868.cljs$lang$applyTo = function(arglist__11873) {
      var coll = cljs.core.first(arglist__11873);
      arglist__11873 = cljs.core.next(arglist__11873);
      var k = cljs.core.first(arglist__11873);
      var ks = cljs.core.rest(arglist__11873);
      return G__11868__delegate(coll, k, ks);
    };
    G__11868.cljs$core$IFn$_invoke$arity$variadic = G__11868__delegate;
    return G__11868;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__11874 = null;
        if (arguments.length > 2) {
          var G__11875__i = 0, G__11875__a = new Array(arguments.length - 2);
          while (G__11875__i < G__11875__a.length) {
            G__11875__a[G__11875__i] = arguments[G__11875__i + 2];
            ++G__11875__i;
          }
          G__11874 = new cljs.core.IndexedSeq(G__11875__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11874);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3743__auto__ = function() {
    var G__11880 = f;
    return goog.isFunction(G__11880);
  }();
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    var G__11881 = f;
    if (G__11881) {
      var bit__4424__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3743__auto____$1 = bit__4424__auto__;
        if (cljs.core.truth_(or__3743__auto____$1)) {
          return or__3743__auto____$1;
        } else {
          return G__11881.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__11881.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11881);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11881);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__12347 = null;
  var G__12347__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12347__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11883 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11883) : self__.afn.call(null, G__11883);
  };
  var G__12347__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11884 = a;
    var G__11885 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11884, G__11885) : self__.afn.call(null, G__11884, G__11885);
  };
  var G__12347__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11886 = a;
    var G__11887 = b;
    var G__11888 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11886, G__11887, G__11888) : self__.afn.call(null, G__11886, G__11887, G__11888);
  };
  var G__12347__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11889 = a;
    var G__11890 = b;
    var G__11891 = c;
    var G__11892 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11889, G__11890, G__11891, G__11892) : self__.afn.call(null, G__11889, G__11890, G__11891, G__11892);
  };
  var G__12347__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11893 = a;
    var G__11894 = b;
    var G__11895 = c;
    var G__11896 = d;
    var G__11897 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11893, G__11894, G__11895, G__11896, G__11897) : self__.afn.call(null, G__11893, G__11894, G__11895, G__11896, G__11897);
  };
  var G__12347__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11898 = a;
    var G__11899 = b;
    var G__11900 = c;
    var G__11901 = d;
    var G__11902 = e;
    var G__11903 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11898, G__11899, G__11900, G__11901, G__11902, G__11903) : self__.afn.call(null, G__11898, G__11899, G__11900, G__11901, G__11902, G__11903);
  };
  var G__12347__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11904 = a;
    var G__11905 = b;
    var G__11906 = c;
    var G__11907 = d;
    var G__11908 = e;
    var G__11909 = f;
    var G__11910 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11904, G__11905, G__11906, G__11907, G__11908, G__11909, G__11910) : self__.afn.call(null, G__11904, G__11905, G__11906, G__11907, G__11908, G__11909, G__11910);
  };
  var G__12347__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11911 = a;
    var G__11912 = b;
    var G__11913 = c;
    var G__11914 = d;
    var G__11915 = e;
    var G__11916 = f;
    var G__11917 = g;
    var G__11918 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11911, G__11912, G__11913, G__11914, G__11915, G__11916, G__11917, G__11918) : self__.afn.call(null, G__11911, G__11912, G__11913, G__11914, G__11915, G__11916, G__11917, G__11918);
  };
  var G__12347__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11919 = a;
    var G__11920 = b;
    var G__11921 = c;
    var G__11922 = d;
    var G__11923 = e;
    var G__11924 = f;
    var G__11925 = g;
    var G__11926 = h;
    var G__11927 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11919, G__11920, G__11921, G__11922, G__11923, G__11924, G__11925, G__11926, G__11927) : self__.afn.call(null, G__11919, G__11920, G__11921, G__11922, G__11923, G__11924, G__11925, G__11926, G__11927);
  };
  var G__12347__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11928 = a;
    var G__11929 = b;
    var G__11930 = c;
    var G__11931 = d;
    var G__11932 = e;
    var G__11933 = f;
    var G__11934 = g;
    var G__11935 = h;
    var G__11936 = i;
    var G__11937 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11928, G__11929, G__11930, G__11931, G__11932, G__11933, G__11934, G__11935, G__11936, G__11937) : self__.afn.call(null, G__11928, G__11929, G__11930, G__11931, G__11932, G__11933, G__11934, G__11935, G__11936, G__11937);
  };
  var G__12347__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11938 = a;
    var G__11939 = b;
    var G__11940 = c;
    var G__11941 = d;
    var G__11942 = e;
    var G__11943 = f;
    var G__11944 = g;
    var G__11945 = h;
    var G__11946 = i;
    var G__11947 = j;
    var G__11948 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11938, G__11939, G__11940, G__11941, G__11942, G__11943, G__11944, G__11945, G__11946, G__11947, G__11948) : self__.afn.call(null, G__11938, G__11939, G__11940, G__11941, G__11942, G__11943, G__11944, G__11945, G__11946, G__11947, G__11948);
  };
  var G__12347__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11949 = a;
    var G__11950 = b;
    var G__11951 = c;
    var G__11952 = d;
    var G__11953 = e;
    var G__11954 = f;
    var G__11955 = g;
    var G__11956 = h;
    var G__11957 = i;
    var G__11958 = j;
    var G__11959 = k;
    var G__11960 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11949, G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960) : self__.afn.call(null, G__11949, G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960);
  };
  var G__12347__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11961 = a;
    var G__11962 = b;
    var G__11963 = c;
    var G__11964 = d;
    var G__11965 = e;
    var G__11966 = f;
    var G__11967 = g;
    var G__11968 = h;
    var G__11969 = i;
    var G__11970 = j;
    var G__11971 = k;
    var G__11972 = l;
    var G__11973 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11961, G__11962, G__11963, G__11964, G__11965, G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973) : self__.afn.call(null, G__11961, G__11962, G__11963, G__11964, G__11965, G__11966, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973);
  };
  var G__12347__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11974 = a;
    var G__11975 = b;
    var G__11976 = c;
    var G__11977 = d;
    var G__11978 = e;
    var G__11979 = f;
    var G__11980 = g;
    var G__11981 = h;
    var G__11982 = i;
    var G__11983 = j;
    var G__11984 = k;
    var G__11985 = l;
    var G__11986 = m;
    var G__11987 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983, G__11984, G__11985, G__11986, G__11987) : self__.afn.call(null, G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983, G__11984, G__11985, G__11986, G__11987);
  };
  var G__12347__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11988 = a;
    var G__11989 = b;
    var G__11990 = c;
    var G__11991 = d;
    var G__11992 = e;
    var G__11993 = f;
    var G__11994 = g;
    var G__11995 = h;
    var G__11996 = i;
    var G__11997 = j;
    var G__11998 = k;
    var G__11999 = l;
    var G__12000 = m;
    var G__12001 = n;
    var G__12002 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11988, G__11989, G__11990, G__11991, G__11992, G__11993, G__11994, G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002) : self__.afn.call(null, G__11988, G__11989, G__11990, G__11991, G__11992, G__11993, G__11994, G__11995, G__11996, G__11997, G__11998, G__11999, G__12000, G__12001, G__12002);
  };
  var G__12347__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12003 = a;
    var G__12004 = b;
    var G__12005 = c;
    var G__12006 = d;
    var G__12007 = e;
    var G__12008 = f;
    var G__12009 = g;
    var G__12010 = h;
    var G__12011 = i;
    var G__12012 = j;
    var G__12013 = k;
    var G__12014 = l;
    var G__12015 = m;
    var G__12016 = n;
    var G__12017 = o;
    var G__12018 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12003, G__12004, G__12005, G__12006, G__12007, G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018) : self__.afn.call(null, G__12003, G__12004, G__12005, G__12006, G__12007, G__12008, G__12009, G__12010, G__12011, G__12012, G__12013, G__12014, G__12015, G__12016, G__12017, G__12018);
  };
  var G__12347__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12019 = a;
    var G__12020 = b;
    var G__12021 = c;
    var G__12022 = d;
    var G__12023 = e;
    var G__12024 = f;
    var G__12025 = g;
    var G__12026 = h;
    var G__12027 = i;
    var G__12028 = j;
    var G__12029 = k;
    var G__12030 = l;
    var G__12031 = m;
    var G__12032 = n;
    var G__12033 = o;
    var G__12034 = p;
    var G__12035 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12019, G__12020, G__12021, G__12022, G__12023, G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033, G__12034, G__12035) : self__.afn.call(null, G__12019, G__12020, G__12021, G__12022, G__12023, G__12024, G__12025, G__12026, G__12027, G__12028, G__12029, G__12030, G__12031, G__12032, G__12033, G__12034, G__12035);
  };
  var G__12347__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12036 = a;
    var G__12037 = b;
    var G__12038 = c;
    var G__12039 = d;
    var G__12040 = e;
    var G__12041 = f;
    var G__12042 = g;
    var G__12043 = h;
    var G__12044 = i;
    var G__12045 = j;
    var G__12046 = k;
    var G__12047 = l;
    var G__12048 = m;
    var G__12049 = n;
    var G__12050 = o;
    var G__12051 = p;
    var G__12052 = q;
    var G__12053 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12036, G__12037, G__12038, G__12039, G__12040, G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048, G__12049, G__12050, G__12051, G__12052, G__12053) : self__.afn.call(null, G__12036, G__12037, G__12038, G__12039, G__12040, G__12041, G__12042, G__12043, G__12044, G__12045, G__12046, G__12047, G__12048, G__12049, G__12050, G__12051, G__12052, G__12053);
  };
  var G__12347__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12054 = a;
    var G__12055 = b;
    var G__12056 = c;
    var G__12057 = d;
    var G__12058 = e;
    var G__12059 = f;
    var G__12060 = g;
    var G__12061 = h;
    var G__12062 = i;
    var G__12063 = j;
    var G__12064 = k;
    var G__12065 = l;
    var G__12066 = m;
    var G__12067 = n;
    var G__12068 = o;
    var G__12069 = p;
    var G__12070 = q;
    var G__12071 = r;
    var G__12072 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12054, G__12055, G__12056, G__12057, G__12058, G__12059, G__12060, G__12061, G__12062, G__12063, G__12064, G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072) : self__.afn.call(null, G__12054, G__12055, G__12056, G__12057, G__12058, G__12059, G__12060, G__12061, G__12062, G__12063, G__12064, G__12065, G__12066, G__12067, G__12068, G__12069, G__12070, G__12071, G__12072);
  };
  var G__12347__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12073 = a;
    var G__12074 = b;
    var G__12075 = c;
    var G__12076 = d;
    var G__12077 = e;
    var G__12078 = f;
    var G__12079 = g;
    var G__12080 = h;
    var G__12081 = i;
    var G__12082 = j;
    var G__12083 = k;
    var G__12084 = l;
    var G__12085 = m;
    var G__12086 = n;
    var G__12087 = o;
    var G__12088 = p;
    var G__12089 = q;
    var G__12090 = r;
    var G__12091 = s;
    var G__12092 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12073, G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, G__12091, G__12092) : self__.afn.call(null, G__12073, G__12074, G__12075, G__12076, G__12077, G__12078, G__12079, G__12080, G__12081, G__12082, G__12083, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089, G__12090, 
    G__12091, G__12092);
  };
  var G__12347__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12093 = self__.afn;
    var G__12094 = a;
    var G__12095 = b;
    var G__12096 = c;
    var G__12097 = d;
    var G__12098 = e;
    var G__12099 = f;
    var G__12100 = g;
    var G__12101 = h;
    var G__12102 = i;
    var G__12103 = j;
    var G__12104 = k;
    var G__12105 = l;
    var G__12106 = m;
    var G__12107 = n;
    var G__12108 = o;
    var G__12109 = p;
    var G__12110 = q;
    var G__12111 = r;
    var G__12112 = s;
    var G__12113 = t;
    var G__12114 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, G__12108, G__12109, G__12110, G__12111, G__12112, G__12113, G__12114) : cljs.core.apply.call(null, G__12093, G__12094, G__12095, G__12096, G__12097, G__12098, G__12099, G__12100, G__12101, G__12102, G__12103, G__12104, G__12105, G__12106, G__12107, 
    G__12108, G__12109, G__12110, G__12111, G__12112, G__12113, G__12114);
  };
  G__12347 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12347__1.call(this, self__);
      case 2:
        return G__12347__2.call(this, self__, a);
      case 3:
        return G__12347__3.call(this, self__, a, b);
      case 4:
        return G__12347__4.call(this, self__, a, b, c);
      case 5:
        return G__12347__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12347__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12347__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12347__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12347__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12347__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12347__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12347__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12347__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12347__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12347__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12347__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12347__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12347__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12347__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12347__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12347__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12347__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12347.cljs$core$IFn$_invoke$arity$1 = G__12347__1;
  G__12347.cljs$core$IFn$_invoke$arity$2 = G__12347__2;
  G__12347.cljs$core$IFn$_invoke$arity$3 = G__12347__3;
  G__12347.cljs$core$IFn$_invoke$arity$4 = G__12347__4;
  G__12347.cljs$core$IFn$_invoke$arity$5 = G__12347__5;
  G__12347.cljs$core$IFn$_invoke$arity$6 = G__12347__6;
  G__12347.cljs$core$IFn$_invoke$arity$7 = G__12347__7;
  G__12347.cljs$core$IFn$_invoke$arity$8 = G__12347__8;
  G__12347.cljs$core$IFn$_invoke$arity$9 = G__12347__9;
  G__12347.cljs$core$IFn$_invoke$arity$10 = G__12347__10;
  G__12347.cljs$core$IFn$_invoke$arity$11 = G__12347__11;
  G__12347.cljs$core$IFn$_invoke$arity$12 = G__12347__12;
  G__12347.cljs$core$IFn$_invoke$arity$13 = G__12347__13;
  G__12347.cljs$core$IFn$_invoke$arity$14 = G__12347__14;
  G__12347.cljs$core$IFn$_invoke$arity$15 = G__12347__15;
  G__12347.cljs$core$IFn$_invoke$arity$16 = G__12347__16;
  G__12347.cljs$core$IFn$_invoke$arity$17 = G__12347__17;
  G__12347.cljs$core$IFn$_invoke$arity$18 = G__12347__18;
  G__12347.cljs$core$IFn$_invoke$arity$19 = G__12347__19;
  G__12347.cljs$core$IFn$_invoke$arity$20 = G__12347__20;
  G__12347.cljs$core$IFn$_invoke$arity$21 = G__12347__21;
  G__12347.cljs$core$IFn$_invoke$arity$22 = G__12347__22;
  return G__12347;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11882) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11882)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__12115 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12115) : self__.afn.call(null, G__12115);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__12116 = a;
  var G__12117 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12116, G__12117) : self__.afn.call(null, G__12116, G__12117);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__12118 = a;
  var G__12119 = b;
  var G__12120 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12118, G__12119, G__12120) : self__.afn.call(null, G__12118, G__12119, G__12120);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__12121 = a;
  var G__12122 = b;
  var G__12123 = c;
  var G__12124 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12121, G__12122, G__12123, G__12124) : self__.afn.call(null, G__12121, G__12122, G__12123, G__12124);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__12125 = a;
  var G__12126 = b;
  var G__12127 = c;
  var G__12128 = d;
  var G__12129 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12125, G__12126, G__12127, G__12128, G__12129) : self__.afn.call(null, G__12125, G__12126, G__12127, G__12128, G__12129);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__12130 = a;
  var G__12131 = b;
  var G__12132 = c;
  var G__12133 = d;
  var G__12134 = e;
  var G__12135 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12130, G__12131, G__12132, G__12133, G__12134, G__12135) : self__.afn.call(null, G__12130, G__12131, G__12132, G__12133, G__12134, G__12135);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__12136 = a;
  var G__12137 = b;
  var G__12138 = c;
  var G__12139 = d;
  var G__12140 = e;
  var G__12141 = f;
  var G__12142 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12136, G__12137, G__12138, G__12139, G__12140, G__12141, G__12142) : self__.afn.call(null, G__12136, G__12137, G__12138, G__12139, G__12140, G__12141, G__12142);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__12143 = a;
  var G__12144 = b;
  var G__12145 = c;
  var G__12146 = d;
  var G__12147 = e;
  var G__12148 = f;
  var G__12149 = g;
  var G__12150 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150) : self__.afn.call(null, G__12143, G__12144, G__12145, G__12146, G__12147, G__12148, G__12149, G__12150);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__12151 = a;
  var G__12152 = b;
  var G__12153 = c;
  var G__12154 = d;
  var G__12155 = e;
  var G__12156 = f;
  var G__12157 = g;
  var G__12158 = h;
  var G__12159 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159) : self__.afn.call(null, G__12151, G__12152, G__12153, G__12154, G__12155, G__12156, G__12157, G__12158, G__12159);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__12160 = a;
  var G__12161 = b;
  var G__12162 = c;
  var G__12163 = d;
  var G__12164 = e;
  var G__12165 = f;
  var G__12166 = g;
  var G__12167 = h;
  var G__12168 = i;
  var G__12169 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12160, G__12161, G__12162, G__12163, G__12164, G__12165, G__12166, G__12167, G__12168, G__12169) : self__.afn.call(null, G__12160, G__12161, G__12162, G__12163, G__12164, G__12165, G__12166, G__12167, G__12168, G__12169);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__12170 = a;
  var G__12171 = b;
  var G__12172 = c;
  var G__12173 = d;
  var G__12174 = e;
  var G__12175 = f;
  var G__12176 = g;
  var G__12177 = h;
  var G__12178 = i;
  var G__12179 = j;
  var G__12180 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12170, G__12171, G__12172, G__12173, G__12174, G__12175, G__12176, G__12177, G__12178, G__12179, G__12180) : self__.afn.call(null, G__12170, G__12171, G__12172, G__12173, G__12174, G__12175, G__12176, G__12177, G__12178, G__12179, G__12180);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__12181 = a;
  var G__12182 = b;
  var G__12183 = c;
  var G__12184 = d;
  var G__12185 = e;
  var G__12186 = f;
  var G__12187 = g;
  var G__12188 = h;
  var G__12189 = i;
  var G__12190 = j;
  var G__12191 = k;
  var G__12192 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12181, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190, G__12191, G__12192) : self__.afn.call(null, G__12181, G__12182, G__12183, G__12184, G__12185, G__12186, G__12187, G__12188, G__12189, G__12190, G__12191, G__12192);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__12193 = a;
  var G__12194 = b;
  var G__12195 = c;
  var G__12196 = d;
  var G__12197 = e;
  var G__12198 = f;
  var G__12199 = g;
  var G__12200 = h;
  var G__12201 = i;
  var G__12202 = j;
  var G__12203 = k;
  var G__12204 = l;
  var G__12205 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12193, G__12194, G__12195, G__12196, G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205) : self__.afn.call(null, G__12193, G__12194, G__12195, G__12196, G__12197, G__12198, G__12199, G__12200, G__12201, G__12202, G__12203, G__12204, G__12205);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__12206 = a;
  var G__12207 = b;
  var G__12208 = c;
  var G__12209 = d;
  var G__12210 = e;
  var G__12211 = f;
  var G__12212 = g;
  var G__12213 = h;
  var G__12214 = i;
  var G__12215 = j;
  var G__12216 = k;
  var G__12217 = l;
  var G__12218 = m;
  var G__12219 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216, G__12217, G__12218, G__12219) : self__.afn.call(null, G__12206, G__12207, G__12208, G__12209, G__12210, G__12211, G__12212, G__12213, G__12214, G__12215, G__12216, G__12217, G__12218, G__12219);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__12220 = a;
  var G__12221 = b;
  var G__12222 = c;
  var G__12223 = d;
  var G__12224 = e;
  var G__12225 = f;
  var G__12226 = g;
  var G__12227 = h;
  var G__12228 = i;
  var G__12229 = j;
  var G__12230 = k;
  var G__12231 = l;
  var G__12232 = m;
  var G__12233 = n;
  var G__12234 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234) : self__.afn.call(null, G__12220, G__12221, G__12222, G__12223, G__12224, G__12225, G__12226, G__12227, G__12228, G__12229, G__12230, G__12231, G__12232, G__12233, G__12234);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__12235 = a;
  var G__12236 = b;
  var G__12237 = c;
  var G__12238 = d;
  var G__12239 = e;
  var G__12240 = f;
  var G__12241 = g;
  var G__12242 = h;
  var G__12243 = i;
  var G__12244 = j;
  var G__12245 = k;
  var G__12246 = l;
  var G__12247 = m;
  var G__12248 = n;
  var G__12249 = o;
  var G__12250 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12235, G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250) : self__.afn.call(null, G__12235, G__12236, G__12237, G__12238, G__12239, G__12240, G__12241, G__12242, G__12243, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249, G__12250);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__12251 = a;
  var G__12252 = b;
  var G__12253 = c;
  var G__12254 = d;
  var G__12255 = e;
  var G__12256 = f;
  var G__12257 = g;
  var G__12258 = h;
  var G__12259 = i;
  var G__12260 = j;
  var G__12261 = k;
  var G__12262 = l;
  var G__12263 = m;
  var G__12264 = n;
  var G__12265 = o;
  var G__12266 = p;
  var G__12267 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12251, G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265, G__12266, G__12267) : self__.afn.call(null, G__12251, G__12252, G__12253, G__12254, G__12255, G__12256, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264, G__12265, G__12266, G__12267);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__12268 = a;
  var G__12269 = b;
  var G__12270 = c;
  var G__12271 = d;
  var G__12272 = e;
  var G__12273 = f;
  var G__12274 = g;
  var G__12275 = h;
  var G__12276 = i;
  var G__12277 = j;
  var G__12278 = k;
  var G__12279 = l;
  var G__12280 = m;
  var G__12281 = n;
  var G__12282 = o;
  var G__12283 = p;
  var G__12284 = q;
  var G__12285 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280, G__12281, G__12282, G__12283, G__12284, G__12285) : self__.afn.call(null, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280, G__12281, G__12282, G__12283, G__12284, G__12285);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__12286 = a;
  var G__12287 = b;
  var G__12288 = c;
  var G__12289 = d;
  var G__12290 = e;
  var G__12291 = f;
  var G__12292 = g;
  var G__12293 = h;
  var G__12294 = i;
  var G__12295 = j;
  var G__12296 = k;
  var G__12297 = l;
  var G__12298 = m;
  var G__12299 = n;
  var G__12300 = o;
  var G__12301 = p;
  var G__12302 = q;
  var G__12303 = r;
  var G__12304 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294, G__12295, G__12296, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304) : self__.afn.call(null, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294, G__12295, G__12296, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__12305 = a;
  var G__12306 = b;
  var G__12307 = c;
  var G__12308 = d;
  var G__12309 = e;
  var G__12310 = f;
  var G__12311 = g;
  var G__12312 = h;
  var G__12313 = i;
  var G__12314 = j;
  var G__12315 = k;
  var G__12316 = l;
  var G__12317 = m;
  var G__12318 = n;
  var G__12319 = o;
  var G__12320 = p;
  var G__12321 = q;
  var G__12322 = r;
  var G__12323 = s;
  var G__12324 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12305, G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322, G__12323, G__12324) : self__.afn.call(null, G__12305, G__12306, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319, G__12320, G__12321, G__12322, G__12323, 
  G__12324);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12325 = self__.afn;
  var G__12326 = a;
  var G__12327 = b;
  var G__12328 = c;
  var G__12329 = d;
  var G__12330 = e;
  var G__12331 = f;
  var G__12332 = g;
  var G__12333 = h;
  var G__12334 = i;
  var G__12335 = j;
  var G__12336 = k;
  var G__12337 = l;
  var G__12338 = m;
  var G__12339 = n;
  var G__12340 = o;
  var G__12341 = p;
  var G__12342 = q;
  var G__12343 = r;
  var G__12344 = s;
  var G__12345 = t;
  var G__12346 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346) : cljs.core.apply.call(null, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332, G__12333, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, 
  G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__12351 = o;
    if (G__12351) {
      var bit__4424__auto__ = G__12351.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4424__auto__ || G__12351.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12351.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12351);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__12351);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3731__auto__ = !(o == null);
    if (and__3731__auto__) {
      var G__12355 = o;
      if (G__12355) {
        var bit__4424__auto__ = G__12355.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4424__auto__ || G__12355.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__12355.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12355);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__12355);
      }
    } else {
      return and__3731__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__12358__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12359 = ret;
            var G__12360 = cljs.core.first(ks);
            var G__12361 = cljs.core.next(ks);
            coll = G__12359;
            k = G__12360;
            ks = G__12361;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12358 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12362__i = 0, G__12362__a = new Array(arguments.length - 2);
        while (G__12362__i < G__12362__a.length) {
          G__12362__a[G__12362__i] = arguments[G__12362__i + 2];
          ++G__12362__i;
        }
        ks = new cljs.core.IndexedSeq(G__12362__a, 0);
      }
      return G__12358__delegate.call(this, coll, k, ks);
    };
    G__12358.cljs$lang$maxFixedArity = 2;
    G__12358.cljs$lang$applyTo = function(arglist__12363) {
      var coll = cljs.core.first(arglist__12363);
      arglist__12363 = cljs.core.next(arglist__12363);
      var k = cljs.core.first(arglist__12363);
      var ks = cljs.core.rest(arglist__12363);
      return G__12358__delegate(coll, k, ks);
    };
    G__12358.cljs$core$IFn$_invoke$arity$variadic = G__12358__delegate;
    return G__12358;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__12364 = null;
        if (arguments.length > 2) {
          var G__12365__i = 0, G__12365__a = new Array(arguments.length - 2);
          while (G__12365__i < G__12365__a.length) {
            G__12365__a[G__12365__i] = arguments[G__12365__i + 2];
            ++G__12365__i;
          }
          G__12364 = new cljs.core.IndexedSeq(G__12365__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12364);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12367 = x;
    if (G__12367) {
      var bit__4424__auto__ = G__12367.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4424__auto__ || G__12367.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__12367.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12367);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__12367);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12369 = x;
    if (G__12369) {
      var bit__4424__auto__ = G__12369.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4424__auto__ || G__12369.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__12369.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12369);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__12369);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12371 = x;
  if (G__12371) {
    var bit__4424__auto__ = G__12371.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4424__auto__ || G__12371.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__12371.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12371);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__12371);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12373 = x;
  if (G__12373) {
    var bit__4424__auto__ = G__12373.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4424__auto__ || G__12373.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__12373.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12373);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__12373);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__12375 = x;
  if (G__12375) {
    var bit__4424__auto__ = G__12375.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4424__auto__ || G__12375.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__12375.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12375);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__12375);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12377 = x;
  if (G__12377) {
    var bit__4424__auto__ = G__12377.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4424__auto__ || G__12377.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__12377.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12377);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__12377);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__12379 = x;
    if (G__12379) {
      var bit__4424__auto__ = G__12379.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4424__auto__ || G__12379.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__12379.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12379);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__12379);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12381 = x;
  if (G__12381) {
    var bit__4424__auto__ = G__12381.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4424__auto__ || G__12381.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__12381.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12381);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__12381);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12383 = x;
  if (G__12383) {
    var bit__4417__auto__ = G__12383.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4417__auto__ || G__12383.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj12389 = {};
    return obj12389;
  };
  var js_obj__1 = function() {
    var G__12392__delegate = function(keyvals) {
      var G__12390 = goog.object.create;
      var G__12391 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12390, G__12391) : cljs.core.apply.call(null, G__12390, G__12391);
    };
    var G__12392 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__12393__i = 0, G__12393__a = new Array(arguments.length - 0);
        while (G__12393__i < G__12393__a.length) {
          G__12393__a[G__12393__i] = arguments[G__12393__i + 0];
          ++G__12393__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__12393__a, 0);
      }
      return G__12392__delegate.call(this, keyvals);
    };
    G__12392.cljs$lang$maxFixedArity = 0;
    G__12392.cljs$lang$applyTo = function(arglist__12394) {
      var keyvals = cljs.core.seq(arglist__12394);
      return G__12392__delegate(keyvals);
    };
    G__12392.cljs$core$IFn$_invoke$arity$variadic = G__12392__delegate;
    return G__12392;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__12395 = null;
        if (arguments.length > 0) {
          var G__12396__i = 0, G__12396__a = new Array(arguments.length - 0);
          while (G__12396__i < G__12396__a.length) {
            G__12396__a[G__12396__i] = arguments[G__12396__i + 0];
            ++G__12396__i;
          }
          G__12395 = new cljs.core.IndexedSeq(G__12396__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12395);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__12399_12401 = obj;
  var G__12400_12402 = function(G__12399_12401, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__12399_12401, keys);
  goog.object.forEach(G__12399_12401, G__12400_12402);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12403 = i__$1 + 1;
      var G__12404 = j__$1 + 1;
      var G__12405 = len__$1 - 1;
      i__$1 = G__12403;
      j__$1 = G__12404;
      len__$1 = G__12405;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__12406 = i__$1 - 1;
      var G__12407 = j__$1 - 1;
      var G__12408 = len__$1 - 1;
      i__$1 = G__12406;
      j__$1 = G__12407;
      len__$1 = G__12408;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj12410 = {};
  return obj12410;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__12412 = s;
    if (G__12412) {
      var bit__4424__auto__ = G__12412.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4424__auto__ || G__12412.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__12412.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12412);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12412);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12414 = s;
  if (G__12414) {
    var bit__4424__auto__ = G__12414.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4424__auto__ || G__12414.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__12414.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12414);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__12414);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3743__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3743__auto__) {
    return or__3743__auto__;
  } else {
    var G__12418 = f;
    if (G__12418) {
      var bit__4424__auto__ = G__12418.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4424__auto__ || G__12418.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__12418.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12418);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__12418);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__12431 = n;
    return isNaN(G__12431);
  }()) && !(n === Infinity) && function() {
    var G__12432 = n;
    return parseFloat(G__12432);
  }() === function() {
    var G__12433 = n;
    var G__12434 = 10;
    return parseInt(G__12433, G__12434);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__12435__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__12436 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__12437 = etc;
              s = G__12436;
              xs = G__12437;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__12435 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12438__i = 0, G__12438__a = new Array(arguments.length - 2);
        while (G__12438__i < G__12438__a.length) {
          G__12438__a[G__12438__i] = arguments[G__12438__i + 2];
          ++G__12438__i;
        }
        more = new cljs.core.IndexedSeq(G__12438__a, 0);
      }
      return G__12435__delegate.call(this, x, y, more);
    };
    G__12435.cljs$lang$maxFixedArity = 2;
    G__12435.cljs$lang$applyTo = function(arglist__12439) {
      var x = cljs.core.first(arglist__12439);
      arglist__12439 = cljs.core.next(arglist__12439);
      var y = cljs.core.first(arglist__12439);
      var more = cljs.core.rest(arglist__12439);
      return G__12435__delegate(x, y, more);
    };
    G__12435.cljs$core$IFn$_invoke$arity$variadic = G__12435__delegate;
    return G__12435;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__12440 = null;
        if (arguments.length > 2) {
          var G__12441__i = 0, G__12441__a = new Array(arguments.length - 2);
          while (G__12441__i < G__12441__a.length) {
            G__12441__a[G__12441__i] = arguments[G__12441__i + 2];
            ++G__12441__i;
          }
          G__12440 = new cljs.core.IndexedSeq(G__12441__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12440);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__12445 = x;
            if (G__12445) {
              var bit__4417__auto__ = G__12445.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4417__auto__ || G__12445.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__12446 = x;
            var G__12447 = y;
            return goog.array.defaultCompare(G__12446, G__12447);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__12452 = xs;
        var G__12453 = ys;
        var G__12454 = len;
        var G__12455 = n + 1;
        xs = G__12452;
        ys = G__12453;
        len = G__12454;
        n = G__12455;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__12460 = x;
        var G__12461 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12460, G__12461) : f.call(null, G__12460, G__12461);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__12462 = y;
            var G__12463 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12462, G__12463) : f.call(null, G__12462, G__12463);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__12469 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12469) : cljs.core.to_array.call(null, G__12469);
      }();
      var G__12470_12472 = a;
      var G__12471_12473 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__12470_12472, G__12471_12473);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__12479 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12479) : keyfn.call(null, G__12479);
      }(), function() {
        var G__12480 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12480) : keyfn.call(null, G__12480);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__12486 = f;
      var G__12487 = cljs.core.first(s);
      var G__12488 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12486, G__12487, G__12488) : cljs.core.reduce.call(null, G__12486, G__12487, G__12488);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__12489 = val__$1;
          var G__12490 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12489, G__12490) : f.call(null, G__12489, G__12490);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12491 = nval;
          var G__12492 = cljs.core.next(coll__$1);
          val__$1 = G__12491;
          coll__$1 = G__12492;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__12496 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12496) : cljs.core.to_array.call(null, G__12496);
  }();
  var G__12497_12499 = a;
  goog.array.shuffle(G__12497_12499);
  var G__12498 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12498) : cljs.core.vec.call(null, G__12498);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__12502 = coll;
      if (G__12502) {
        var bit__4417__auto__ = G__12502.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4417__auto__ || G__12502.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__12503 = coll;
      if (G__12503) {
        var bit__4417__auto__ = G__12503.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4417__auto__ || G__12503.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__12512 = null;
      var G__12512__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__12512__1 = function(x) {
        var G__12509 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12509) : cf.call(null, G__12509);
      };
      var G__12512__2 = function(x, y) {
        var G__12510 = x;
        var G__12511 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12510, G__12511) : f.call(null, G__12510, G__12511);
      };
      G__12512 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__12512__0.call(this);
          case 1:
            return G__12512__1.call(this, x);
          case 2:
            return G__12512__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12512.cljs$core$IFn$_invoke$arity$0 = G__12512__0;
      G__12512.cljs$core$IFn$_invoke$arity$1 = G__12512__1;
      G__12512.cljs$core$IFn$_invoke$arity$2 = G__12512__2;
      return G__12512;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__12519 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12519) : xform.call(null, G__12519);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__12520 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12520) : f__$1.call(null, G__12520);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__12521__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__12521 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12522__i = 0, G__12522__a = new Array(arguments.length - 2);
        while (G__12522__i < G__12522__a.length) {
          G__12522__a[G__12522__i] = arguments[G__12522__i + 2];
          ++G__12522__i;
        }
        more = new cljs.core.IndexedSeq(G__12522__a, 0);
      }
      return G__12521__delegate.call(this, x, y, more);
    };
    G__12521.cljs$lang$maxFixedArity = 2;
    G__12521.cljs$lang$applyTo = function(arglist__12523) {
      var x = cljs.core.first(arglist__12523);
      arglist__12523 = cljs.core.next(arglist__12523);
      var y = cljs.core.first(arglist__12523);
      var more = cljs.core.rest(arglist__12523);
      return G__12521__delegate(x, y, more);
    };
    G__12521.cljs$core$IFn$_invoke$arity$variadic = G__12521__delegate;
    return G__12521;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__12524 = null;
        if (arguments.length > 2) {
          var G__12525__i = 0, G__12525__a = new Array(arguments.length - 2);
          while (G__12525__i < G__12525__a.length) {
            G__12525__a[G__12525__i] = arguments[G__12525__i + 2];
            ++G__12525__i;
          }
          G__12524 = new cljs.core.IndexedSeq(G__12525__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12524);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__12526__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__12526 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12527__i = 0, G__12527__a = new Array(arguments.length - 2);
        while (G__12527__i < G__12527__a.length) {
          G__12527__a[G__12527__i] = arguments[G__12527__i + 2];
          ++G__12527__i;
        }
        more = new cljs.core.IndexedSeq(G__12527__a, 0);
      }
      return G__12526__delegate.call(this, x, y, more);
    };
    G__12526.cljs$lang$maxFixedArity = 2;
    G__12526.cljs$lang$applyTo = function(arglist__12528) {
      var x = cljs.core.first(arglist__12528);
      arglist__12528 = cljs.core.next(arglist__12528);
      var y = cljs.core.first(arglist__12528);
      var more = cljs.core.rest(arglist__12528);
      return G__12526__delegate(x, y, more);
    };
    G__12526.cljs$core$IFn$_invoke$arity$variadic = G__12526__delegate;
    return G__12526;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__12529 = null;
        if (arguments.length > 2) {
          var G__12530__i = 0, G__12530__a = new Array(arguments.length - 2);
          while (G__12530__i < G__12530__a.length) {
            G__12530__a[G__12530__i] = arguments[G__12530__i + 2];
            ++G__12530__i;
          }
          G__12529 = new cljs.core.IndexedSeq(G__12530__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12529);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__12531__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__12531 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12532__i = 0, G__12532__a = new Array(arguments.length - 2);
        while (G__12532__i < G__12532__a.length) {
          G__12532__a[G__12532__i] = arguments[G__12532__i + 2];
          ++G__12532__i;
        }
        more = new cljs.core.IndexedSeq(G__12532__a, 0);
      }
      return G__12531__delegate.call(this, x, y, more);
    };
    G__12531.cljs$lang$maxFixedArity = 2;
    G__12531.cljs$lang$applyTo = function(arglist__12533) {
      var x = cljs.core.first(arglist__12533);
      arglist__12533 = cljs.core.next(arglist__12533);
      var y = cljs.core.first(arglist__12533);
      var more = cljs.core.rest(arglist__12533);
      return G__12531__delegate(x, y, more);
    };
    G__12531.cljs$core$IFn$_invoke$arity$variadic = G__12531__delegate;
    return G__12531;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__12534 = null;
        if (arguments.length > 2) {
          var G__12535__i = 0, G__12535__a = new Array(arguments.length - 2);
          while (G__12535__i < G__12535__a.length) {
            G__12535__a[G__12535__i] = arguments[G__12535__i + 2];
            ++G__12535__i;
          }
          G__12534 = new cljs.core.IndexedSeq(G__12535__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12534);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__12540__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12540 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12541__i = 0, G__12541__a = new Array(arguments.length - 2);
        while (G__12541__i < G__12541__a.length) {
          G__12541__a[G__12541__i] = arguments[G__12541__i + 2];
          ++G__12541__i;
        }
        more = new cljs.core.IndexedSeq(G__12541__a, 0);
      }
      return G__12540__delegate.call(this, x, y, more);
    };
    G__12540.cljs$lang$maxFixedArity = 2;
    G__12540.cljs$lang$applyTo = function(arglist__12542) {
      var x = cljs.core.first(arglist__12542);
      arglist__12542 = cljs.core.next(arglist__12542);
      var y = cljs.core.first(arglist__12542);
      var more = cljs.core.rest(arglist__12542);
      return G__12540__delegate(x, y, more);
    };
    G__12540.cljs$core$IFn$_invoke$arity$variadic = G__12540__delegate;
    return G__12540;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__12543 = null;
        if (arguments.length > 2) {
          var G__12544__i = 0, G__12544__a = new Array(arguments.length - 2);
          while (G__12544__i < G__12544__a.length) {
            G__12544__a[G__12544__i] = arguments[G__12544__i + 2];
            ++G__12544__i;
          }
          G__12543 = new cljs.core.IndexedSeq(G__12544__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12543);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__12545__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__12546 = y;
            var G__12547 = cljs.core.first(more);
            var G__12548 = cljs.core.next(more);
            x = G__12546;
            y = G__12547;
            more = G__12548;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12545 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12549__i = 0, G__12549__a = new Array(arguments.length - 2);
        while (G__12549__i < G__12549__a.length) {
          G__12549__a[G__12549__i] = arguments[G__12549__i + 2];
          ++G__12549__i;
        }
        more = new cljs.core.IndexedSeq(G__12549__a, 0);
      }
      return G__12545__delegate.call(this, x, y, more);
    };
    G__12545.cljs$lang$maxFixedArity = 2;
    G__12545.cljs$lang$applyTo = function(arglist__12550) {
      var x = cljs.core.first(arglist__12550);
      arglist__12550 = cljs.core.next(arglist__12550);
      var y = cljs.core.first(arglist__12550);
      var more = cljs.core.rest(arglist__12550);
      return G__12545__delegate(x, y, more);
    };
    G__12545.cljs$core$IFn$_invoke$arity$variadic = G__12545__delegate;
    return G__12545;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__12551 = null;
        if (arguments.length > 2) {
          var G__12552__i = 0, G__12552__a = new Array(arguments.length - 2);
          while (G__12552__i < G__12552__a.length) {
            G__12552__a[G__12552__i] = arguments[G__12552__i + 2];
            ++G__12552__i;
          }
          G__12551 = new cljs.core.IndexedSeq(G__12552__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12551);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__12553__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__12554 = y;
            var G__12555 = cljs.core.first(more);
            var G__12556 = cljs.core.next(more);
            x = G__12554;
            y = G__12555;
            more = G__12556;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12553 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12557__i = 0, G__12557__a = new Array(arguments.length - 2);
        while (G__12557__i < G__12557__a.length) {
          G__12557__a[G__12557__i] = arguments[G__12557__i + 2];
          ++G__12557__i;
        }
        more = new cljs.core.IndexedSeq(G__12557__a, 0);
      }
      return G__12553__delegate.call(this, x, y, more);
    };
    G__12553.cljs$lang$maxFixedArity = 2;
    G__12553.cljs$lang$applyTo = function(arglist__12558) {
      var x = cljs.core.first(arglist__12558);
      arglist__12558 = cljs.core.next(arglist__12558);
      var y = cljs.core.first(arglist__12558);
      var more = cljs.core.rest(arglist__12558);
      return G__12553__delegate(x, y, more);
    };
    G__12553.cljs$core$IFn$_invoke$arity$variadic = G__12553__delegate;
    return G__12553;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__12559 = null;
        if (arguments.length > 2) {
          var G__12560__i = 0, G__12560__a = new Array(arguments.length - 2);
          while (G__12560__i < G__12560__a.length) {
            G__12560__a[G__12560__i] = arguments[G__12560__i + 2];
            ++G__12560__i;
          }
          G__12559 = new cljs.core.IndexedSeq(G__12560__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12559);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__12561__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__12562 = y;
            var G__12563 = cljs.core.first(more);
            var G__12564 = cljs.core.next(more);
            x = G__12562;
            y = G__12563;
            more = G__12564;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12561 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12565__i = 0, G__12565__a = new Array(arguments.length - 2);
        while (G__12565__i < G__12565__a.length) {
          G__12565__a[G__12565__i] = arguments[G__12565__i + 2];
          ++G__12565__i;
        }
        more = new cljs.core.IndexedSeq(G__12565__a, 0);
      }
      return G__12561__delegate.call(this, x, y, more);
    };
    G__12561.cljs$lang$maxFixedArity = 2;
    G__12561.cljs$lang$applyTo = function(arglist__12566) {
      var x = cljs.core.first(arglist__12566);
      arglist__12566 = cljs.core.next(arglist__12566);
      var y = cljs.core.first(arglist__12566);
      var more = cljs.core.rest(arglist__12566);
      return G__12561__delegate(x, y, more);
    };
    G__12561.cljs$core$IFn$_invoke$arity$variadic = G__12561__delegate;
    return G__12561;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__12567 = null;
        if (arguments.length > 2) {
          var G__12568__i = 0, G__12568__a = new Array(arguments.length - 2);
          while (G__12568__i < G__12568__a.length) {
            G__12568__a[G__12568__i] = arguments[G__12568__i + 2];
            ++G__12568__i;
          }
          G__12567 = new cljs.core.IndexedSeq(G__12568__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12567);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__12569__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__12570 = y;
            var G__12571 = cljs.core.first(more);
            var G__12572 = cljs.core.next(more);
            x = G__12570;
            y = G__12571;
            more = G__12572;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12569 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12573__i = 0, G__12573__a = new Array(arguments.length - 2);
        while (G__12573__i < G__12573__a.length) {
          G__12573__a[G__12573__i] = arguments[G__12573__i + 2];
          ++G__12573__i;
        }
        more = new cljs.core.IndexedSeq(G__12573__a, 0);
      }
      return G__12569__delegate.call(this, x, y, more);
    };
    G__12569.cljs$lang$maxFixedArity = 2;
    G__12569.cljs$lang$applyTo = function(arglist__12574) {
      var x = cljs.core.first(arglist__12574);
      arglist__12574 = cljs.core.next(arglist__12574);
      var y = cljs.core.first(arglist__12574);
      var more = cljs.core.rest(arglist__12574);
      return G__12569__delegate(x, y, more);
    };
    G__12569.cljs$core$IFn$_invoke$arity$variadic = G__12569__delegate;
    return G__12569;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__12575 = null;
        if (arguments.length > 2) {
          var G__12576__i = 0, G__12576__a = new Array(arguments.length - 2);
          while (G__12576__i < G__12576__a.length) {
            G__12576__a[G__12576__i] = arguments[G__12576__i + 2];
            ++G__12576__i;
          }
          G__12575 = new cljs.core.IndexedSeq(G__12576__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12575);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4060__auto__ = x;
    var y__4061__auto__ = y;
    return x__4060__auto__ > y__4061__auto__ ? x__4060__auto__ : y__4061__auto__;
  };
  var max__3 = function() {
    var G__12577__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4060__auto__ = x;
        var y__4061__auto__ = y;
        return x__4060__auto__ > y__4061__auto__ ? x__4060__auto__ : y__4061__auto__;
      }(), more);
    };
    var G__12577 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12578__i = 0, G__12578__a = new Array(arguments.length - 2);
        while (G__12578__i < G__12578__a.length) {
          G__12578__a[G__12578__i] = arguments[G__12578__i + 2];
          ++G__12578__i;
        }
        more = new cljs.core.IndexedSeq(G__12578__a, 0);
      }
      return G__12577__delegate.call(this, x, y, more);
    };
    G__12577.cljs$lang$maxFixedArity = 2;
    G__12577.cljs$lang$applyTo = function(arglist__12579) {
      var x = cljs.core.first(arglist__12579);
      arglist__12579 = cljs.core.next(arglist__12579);
      var y = cljs.core.first(arglist__12579);
      var more = cljs.core.rest(arglist__12579);
      return G__12577__delegate(x, y, more);
    };
    G__12577.cljs$core$IFn$_invoke$arity$variadic = G__12577__delegate;
    return G__12577;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__12580 = null;
        if (arguments.length > 2) {
          var G__12581__i = 0, G__12581__a = new Array(arguments.length - 2);
          while (G__12581__i < G__12581__a.length) {
            G__12581__a[G__12581__i] = arguments[G__12581__i + 2];
            ++G__12581__i;
          }
          G__12580 = new cljs.core.IndexedSeq(G__12581__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12580);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4067__auto__ = x;
    var y__4068__auto__ = y;
    return x__4067__auto__ < y__4068__auto__ ? x__4067__auto__ : y__4068__auto__;
  };
  var min__3 = function() {
    var G__12582__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4067__auto__ = x;
        var y__4068__auto__ = y;
        return x__4067__auto__ < y__4068__auto__ ? x__4067__auto__ : y__4068__auto__;
      }(), more);
    };
    var G__12582 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12583__i = 0, G__12583__a = new Array(arguments.length - 2);
        while (G__12583__i < G__12583__a.length) {
          G__12583__a[G__12583__i] = arguments[G__12583__i + 2];
          ++G__12583__i;
        }
        more = new cljs.core.IndexedSeq(G__12583__a, 0);
      }
      return G__12582__delegate.call(this, x, y, more);
    };
    G__12582.cljs$lang$maxFixedArity = 2;
    G__12582.cljs$lang$applyTo = function(arglist__12584) {
      var x = cljs.core.first(arglist__12584);
      arglist__12584 = cljs.core.next(arglist__12584);
      var y = cljs.core.first(arglist__12584);
      var more = cljs.core.rest(arglist__12584);
      return G__12582__delegate(x, y, more);
    };
    G__12582.cljs$core$IFn$_invoke$arity$variadic = G__12582__delegate;
    return G__12582;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__12585 = null;
        if (arguments.length > 2) {
          var G__12586__i = 0, G__12586__a = new Array(arguments.length - 2);
          while (G__12586__i < G__12586__a.length) {
            G__12586__a[G__12586__i] = arguments[G__12586__i + 2];
            ++G__12586__i;
          }
          G__12585 = new cljs.core.IndexedSeq(G__12586__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12585);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__12587__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__12587 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12588__i = 0, G__12588__a = new Array(arguments.length - 2);
        while (G__12588__i < G__12588__a.length) {
          G__12588__a[G__12588__i] = arguments[G__12588__i + 2];
          ++G__12588__i;
        }
        more = new cljs.core.IndexedSeq(G__12588__a, 0);
      }
      return G__12587__delegate.call(this, x, y, more);
    };
    G__12587.cljs$lang$maxFixedArity = 2;
    G__12587.cljs$lang$applyTo = function(arglist__12589) {
      var x = cljs.core.first(arglist__12589);
      arglist__12589 = cljs.core.next(arglist__12589);
      var y = cljs.core.first(arglist__12589);
      var more = cljs.core.rest(arglist__12589);
      return G__12587__delegate(x, y, more);
    };
    G__12587.cljs$core$IFn$_invoke$arity$variadic = G__12587__delegate;
    return G__12587;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__12590 = null;
        if (arguments.length > 2) {
          var G__12591__i = 0, G__12591__a = new Array(arguments.length - 2);
          while (G__12591__i < G__12591__a.length) {
            G__12591__a[G__12591__i] = arguments[G__12591__i + 2];
            ++G__12591__i;
          }
          G__12590 = new cljs.core.IndexedSeq(G__12591__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12590);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__12592__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__12592 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12593__i = 0, G__12593__a = new Array(arguments.length - 2);
        while (G__12593__i < G__12593__a.length) {
          G__12593__a[G__12593__i] = arguments[G__12593__i + 2];
          ++G__12593__i;
        }
        more = new cljs.core.IndexedSeq(G__12593__a, 0);
      }
      return G__12592__delegate.call(this, x, y, more);
    };
    G__12592.cljs$lang$maxFixedArity = 2;
    G__12592.cljs$lang$applyTo = function(arglist__12594) {
      var x = cljs.core.first(arglist__12594);
      arglist__12594 = cljs.core.next(arglist__12594);
      var y = cljs.core.first(arglist__12594);
      var more = cljs.core.rest(arglist__12594);
      return G__12592__delegate(x, y, more);
    };
    G__12592.cljs$core$IFn$_invoke$arity$variadic = G__12592__delegate;
    return G__12592;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__12595 = null;
        if (arguments.length > 2) {
          var G__12596__i = 0, G__12596__a = new Array(arguments.length - 2);
          while (G__12596__i < G__12596__a.length) {
            G__12596__a[G__12596__i] = arguments[G__12596__i + 2];
            ++G__12596__i;
          }
          G__12595 = new cljs.core.IndexedSeq(G__12596__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12595);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__12601__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__12601 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12602__i = 0, G__12602__a = new Array(arguments.length - 2);
        while (G__12602__i < G__12602__a.length) {
          G__12602__a[G__12602__i] = arguments[G__12602__i + 2];
          ++G__12602__i;
        }
        more = new cljs.core.IndexedSeq(G__12602__a, 0);
      }
      return G__12601__delegate.call(this, x, y, more);
    };
    G__12601.cljs$lang$maxFixedArity = 2;
    G__12601.cljs$lang$applyTo = function(arglist__12603) {
      var x = cljs.core.first(arglist__12603);
      arglist__12603 = cljs.core.next(arglist__12603);
      var y = cljs.core.first(arglist__12603);
      var more = cljs.core.rest(arglist__12603);
      return G__12601__delegate(x, y, more);
    };
    G__12601.cljs$core$IFn$_invoke$arity$variadic = G__12601__delegate;
    return G__12601;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__12604 = null;
        if (arguments.length > 2) {
          var G__12605__i = 0, G__12605__a = new Array(arguments.length - 2);
          while (G__12605__i < G__12605__a.length) {
            G__12605__a[G__12605__i] = arguments[G__12605__i + 2];
            ++G__12605__i;
          }
          G__12604 = new cljs.core.IndexedSeq(G__12605__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12604);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__12606__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__12606 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12607__i = 0, G__12607__a = new Array(arguments.length - 2);
        while (G__12607__i < G__12607__a.length) {
          G__12607__a[G__12607__i] = arguments[G__12607__i + 2];
          ++G__12607__i;
        }
        more = new cljs.core.IndexedSeq(G__12607__a, 0);
      }
      return G__12606__delegate.call(this, x, y, more);
    };
    G__12606.cljs$lang$maxFixedArity = 2;
    G__12606.cljs$lang$applyTo = function(arglist__12608) {
      var x = cljs.core.first(arglist__12608);
      arglist__12608 = cljs.core.next(arglist__12608);
      var y = cljs.core.first(arglist__12608);
      var more = cljs.core.rest(arglist__12608);
      return G__12606__delegate(x, y, more);
    };
    G__12606.cljs$core$IFn$_invoke$arity$variadic = G__12606__delegate;
    return G__12606;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__12609 = null;
        if (arguments.length > 2) {
          var G__12610__i = 0, G__12610__a = new Array(arguments.length - 2);
          while (G__12610__i < G__12610__a.length) {
            G__12610__a[G__12610__i] = arguments[G__12610__i + 2];
            ++G__12610__i;
          }
          G__12609 = new cljs.core.IndexedSeq(G__12610__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12609);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__12611__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__12611 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12612__i = 0, G__12612__a = new Array(arguments.length - 2);
        while (G__12612__i < G__12612__a.length) {
          G__12612__a[G__12612__i] = arguments[G__12612__i + 2];
          ++G__12612__i;
        }
        more = new cljs.core.IndexedSeq(G__12612__a, 0);
      }
      return G__12611__delegate.call(this, x, y, more);
    };
    G__12611.cljs$lang$maxFixedArity = 2;
    G__12611.cljs$lang$applyTo = function(arglist__12613) {
      var x = cljs.core.first(arglist__12613);
      arglist__12613 = cljs.core.next(arglist__12613);
      var y = cljs.core.first(arglist__12613);
      var more = cljs.core.rest(arglist__12613);
      return G__12611__delegate(x, y, more);
    };
    G__12611.cljs$core$IFn$_invoke$arity$variadic = G__12611__delegate;
    return G__12611;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__12614 = null;
        if (arguments.length > 2) {
          var G__12615__i = 0, G__12615__a = new Array(arguments.length - 2);
          while (G__12615__i < G__12615__a.length) {
            G__12615__a[G__12615__i] = arguments[G__12615__i + 2];
            ++G__12615__i;
          }
          G__12614 = new cljs.core.IndexedSeq(G__12615__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12614);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__12618 = x;
  var G__12619 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12618, G__12619) : cljs.core.mod.call(null, G__12618, G__12619);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__12620__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__12620 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12621__i = 0, G__12621__a = new Array(arguments.length - 2);
        while (G__12621__i < G__12621__a.length) {
          G__12621__a[G__12621__i] = arguments[G__12621__i + 2];
          ++G__12621__i;
        }
        more = new cljs.core.IndexedSeq(G__12621__a, 0);
      }
      return G__12620__delegate.call(this, x, y, more);
    };
    G__12620.cljs$lang$maxFixedArity = 2;
    G__12620.cljs$lang$applyTo = function(arglist__12622) {
      var x = cljs.core.first(arglist__12622);
      arglist__12622 = cljs.core.next(arglist__12622);
      var y = cljs.core.first(arglist__12622);
      var more = cljs.core.rest(arglist__12622);
      return G__12620__delegate(x, y, more);
    };
    G__12620.cljs$core$IFn$_invoke$arity$variadic = G__12620__delegate;
    return G__12620;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__12623 = null;
        if (arguments.length > 2) {
          var G__12624__i = 0, G__12624__a = new Array(arguments.length - 2);
          while (G__12624__i < G__12624__a.length) {
            G__12624__a[G__12624__i] = arguments[G__12624__i + 2];
            ++G__12624__i;
          }
          G__12623 = new cljs.core.IndexedSeq(G__12624__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12623);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__12625__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__12625 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12626__i = 0, G__12626__a = new Array(arguments.length - 2);
        while (G__12626__i < G__12626__a.length) {
          G__12626__a[G__12626__i] = arguments[G__12626__i + 2];
          ++G__12626__i;
        }
        more = new cljs.core.IndexedSeq(G__12626__a, 0);
      }
      return G__12625__delegate.call(this, x, y, more);
    };
    G__12625.cljs$lang$maxFixedArity = 2;
    G__12625.cljs$lang$applyTo = function(arglist__12627) {
      var x = cljs.core.first(arglist__12627);
      arglist__12627 = cljs.core.next(arglist__12627);
      var y = cljs.core.first(arglist__12627);
      var more = cljs.core.rest(arglist__12627);
      return G__12625__delegate(x, y, more);
    };
    G__12625.cljs$core$IFn$_invoke$arity$variadic = G__12625__delegate;
    return G__12625;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__12628 = null;
        if (arguments.length > 2) {
          var G__12629__i = 0, G__12629__a = new Array(arguments.length - 2);
          while (G__12629__i < G__12629__a.length) {
            G__12629__a[G__12629__i] = arguments[G__12629__i + 2];
            ++G__12629__i;
          }
          G__12628 = new cljs.core.IndexedSeq(G__12629__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12628);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__12632 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12632) : Math.floor.call(null, G__12632);
  } else {
    var G__12633 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12633) : Math.ceil.call(null, G__12633);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__12638__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12639 = y;
            var G__12640 = cljs.core.first(more);
            var G__12641 = cljs.core.next(more);
            x = G__12639;
            y = G__12640;
            more = G__12641;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12638 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12642__i = 0, G__12642__a = new Array(arguments.length - 2);
        while (G__12642__i < G__12642__a.length) {
          G__12642__a[G__12642__i] = arguments[G__12642__i + 2];
          ++G__12642__i;
        }
        more = new cljs.core.IndexedSeq(G__12642__a, 0);
      }
      return G__12638__delegate.call(this, x, y, more);
    };
    G__12638.cljs$lang$maxFixedArity = 2;
    G__12638.cljs$lang$applyTo = function(arglist__12643) {
      var x = cljs.core.first(arglist__12643);
      arglist__12643 = cljs.core.next(arglist__12643);
      var y = cljs.core.first(arglist__12643);
      var more = cljs.core.rest(arglist__12643);
      return G__12638__delegate(x, y, more);
    };
    G__12638.cljs$core$IFn$_invoke$arity$variadic = G__12638__delegate;
    return G__12638;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__12644 = null;
        if (arguments.length > 2) {
          var G__12645__i = 0, G__12645__a = new Array(arguments.length - 2);
          while (G__12645__i < G__12645__a.length) {
            G__12645__a[G__12645__i] = arguments[G__12645__i + 2];
            ++G__12645__i;
          }
          G__12644 = new cljs.core.IndexedSeq(G__12645__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12644);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__12646 = n__$1 - 1;
      var G__12647 = cljs.core.next(xs);
      n__$1 = G__12646;
      xs = G__12647;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__12651 = x;
      return goog.string.buildString(G__12651);
    }
  };
  var str__2 = function() {
    var G__12652__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__12653 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__12654 = cljs.core.next(more);
          sb = G__12653;
          more = G__12654;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__12652 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__12655__i = 0, G__12655__a = new Array(arguments.length - 1);
        while (G__12655__i < G__12655__a.length) {
          G__12655__a[G__12655__i] = arguments[G__12655__i + 1];
          ++G__12655__i;
        }
        ys = new cljs.core.IndexedSeq(G__12655__a, 0);
      }
      return G__12652__delegate.call(this, x, ys);
    };
    G__12652.cljs$lang$maxFixedArity = 1;
    G__12652.cljs$lang$applyTo = function(arglist__12656) {
      var x = cljs.core.first(arglist__12656);
      var ys = cljs.core.rest(arglist__12656);
      return G__12652__delegate(x, ys);
    };
    G__12652.cljs$core$IFn$_invoke$arity$variadic = G__12652__delegate;
    return G__12652;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__12657 = null;
        if (arguments.length > 1) {
          var G__12658__i = 0, G__12658__a = new Array(arguments.length - 1);
          while (G__12658__i < G__12658__a.length) {
            G__12658__a[G__12658__i] = arguments[G__12658__i + 1];
            ++G__12658__i;
          }
          G__12657 = new cljs.core.IndexedSeq(G__12658__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12657);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__12659 = cljs.core.next(xs);
            var G__12660 = cljs.core.next(ys);
            xs = G__12659;
            ys = G__12660;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__12661 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__12662 = cljs.core.next(s);
        res = G__12661;
        s = G__12662;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__12667 = (h + (cljs.core.hash(function() {
        var G__12665 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12665) : cljs.core.key.call(null, G__12665);
      }()) ^ cljs.core.hash(function() {
        var G__12666 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12666) : cljs.core.val.call(null, G__12666);
      }()))) % 4503599627370496;
      var G__12668 = cljs.core.next(s);
      h = G__12667;
      s = G__12668;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__12669 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__12670 = cljs.core.next(s__$1);
      h = G__12669;
      s__$1 = G__12670;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12681_12691 = cljs.core.seq(fn_map);
  var chunk__12682_12692 = null;
  var count__12683_12693 = 0;
  var i__12684_12694 = 0;
  while (true) {
    if (i__12684_12694 < count__12683_12693) {
      var vec__12685_12695 = chunk__12682_12692.cljs$core$IIndexed$_nth$arity$2(null, i__12684_12694);
      var key_name_12696 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12685_12695, 0, null);
      var f_12697 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12685_12695, 1, null);
      var str_name_12698 = function() {
        var G__12686 = key_name_12696;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12686) : cljs.core.name.call(null, G__12686);
      }();
      obj[str_name_12698] = f_12697;
      var G__12699 = seq__12681_12691;
      var G__12700 = chunk__12682_12692;
      var G__12701 = count__12683_12693;
      var G__12702 = i__12684_12694 + 1;
      seq__12681_12691 = G__12699;
      chunk__12682_12692 = G__12700;
      count__12683_12693 = G__12701;
      i__12684_12694 = G__12702;
      continue;
    } else {
      var temp__4126__auto___12703 = cljs.core.seq(seq__12681_12691);
      if (temp__4126__auto___12703) {
        var seq__12681_12704__$1 = temp__4126__auto___12703;
        if (cljs.core.chunked_seq_QMARK_(seq__12681_12704__$1)) {
          var c__4530__auto___12705 = function() {
            var G__12687 = seq__12681_12704__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12687) : cljs.core.chunk_first.call(null, G__12687);
          }();
          var G__12706 = function() {
            var G__12688 = seq__12681_12704__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12688) : cljs.core.chunk_rest.call(null, G__12688);
          }();
          var G__12707 = c__4530__auto___12705;
          var G__12708 = cljs.core.count(c__4530__auto___12705);
          var G__12709 = 0;
          seq__12681_12691 = G__12706;
          chunk__12682_12692 = G__12707;
          count__12683_12693 = G__12708;
          i__12684_12694 = G__12709;
          continue;
        } else {
          var vec__12689_12710 = cljs.core.first(seq__12681_12704__$1);
          var key_name_12711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12689_12710, 0, null);
          var f_12712 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12689_12710, 1, null);
          var str_name_12713 = function() {
            var G__12690 = key_name_12711;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12690) : cljs.core.name.call(null, G__12690);
          }();
          obj[str_name_12713] = f_12712;
          var G__12714 = cljs.core.next(seq__12681_12704__$1);
          var G__12715 = null;
          var G__12716 = 0;
          var G__12717 = 0;
          seq__12681_12691 = G__12714;
          chunk__12682_12692 = G__12715;
          count__12683_12693 = G__12716;
          i__12684_12694 = G__12717;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12719 = coll;
  if (G__12719) {
    var bit__4424__auto__ = G__12719.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4424__auto__ || G__12719.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__12719.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12719);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__12719);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__12720 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__12720;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__12721 = i - 1;
        var G__12722 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__12721;
        r = G__12722;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__12723__i = 0, G__12723__a = new Array(arguments.length - 0);
      while (G__12723__i < G__12723__a.length) {
        G__12723__a[G__12723__i] = arguments[G__12723__i + 0];
        ++G__12723__i;
      }
      xs = new cljs.core.IndexedSeq(G__12723__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12724) {
    var xs = cljs.core.seq(arglist__12724);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3743__auto__ = coll == null;
    if (or__3743__auto__) {
      return or__3743__auto__;
    } else {
      var G__12728 = coll;
      if (G__12728) {
        var bit__4417__auto__ = G__12728.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4417__auto__ || G__12728.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12730 = x;
  if (G__12730) {
    var bit__4424__auto__ = G__12730.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4424__auto__ || G__12730.cljs$core$IList$) {
      return true;
    } else {
      if (!G__12730.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12730);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__12730);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = cljs.core.not(a.ns);
      if (and__3731__auto__) {
        return b.ns;
      } else {
        return and__3731__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12737 = a.ns;
            var G__12738 = b.ns;
            return goog.array.defaultCompare(G__12737, G__12738);
          }();
          if (0 === nsc) {
            var G__12739 = a.name;
            var G__12740 = b.name;
            return goog.array.defaultCompare(G__12739, G__12740);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12741 = a.name;
        var G__12742 = b.name;
        return goog.array.defaultCompare(G__12741, G__12742);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4164__auto__ = self__._hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12744 = null;
  var G__12744__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__12744__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__12744 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12744__2.call(this, self__, coll);
      case 3:
        return G__12744__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12744.cljs$core$IFn$_invoke$arity$2 = G__12744__2;
  G__12744.cljs$core$IFn$_invoke$arity$3 = G__12744__3;
  return G__12744;
}();
cljs.core.Keyword.prototype.apply = function(self__, args12743) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12743)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__12746 = x;
    if (G__12746) {
      var bit__4417__auto__ = G__12746.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4417__auto__ || G__12746.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__12748 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12748) : cljs.core.name.call(null, G__12748);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__12749 = ls.sval();
        ls = G__12749;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__12751 = s;
    if (G__12751) {
      var bit__4417__auto__ = G__12751.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4417__auto__ || G__12751.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__12752 = cljs.core.next(s__$1);
      s__$1 = G__12752;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_12753 = 0;
  var xs_12754 = cljs.core.seq(coll);
  while (true) {
    if (xs_12754) {
      ret[i_12753] = cljs.core.to_array(cljs.core.first(xs_12754));
      var G__12755 = i_12753 + 1;
      var G__12756 = cljs.core.next(xs_12754);
      i_12753 = G__12755;
      xs_12754 = G__12756;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12759 = i + 1;
          var G__12760 = cljs.core.next(s__$1);
          i = G__12759;
          s__$1 = G__12760;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4630__auto___12761 = size;
      var i_12762 = 0;
      while (true) {
        if (i_12762 < n__4630__auto___12761) {
          a[i_12762] = init_val_or_seq;
          var G__12763 = i_12762 + 1;
          i_12762 = G__12763;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12766 = i + 1;
          var G__12767 = cljs.core.next(s__$1);
          i = G__12766;
          s__$1 = G__12767;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4630__auto___12768 = size;
      var i_12769 = 0;
      while (true) {
        if (i_12769 < n__4630__auto___12768) {
          a[i_12769] = init_val_or_seq;
          var G__12770 = i_12769 + 1;
          i_12769 = G__12770;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12773 = i + 1;
          var G__12774 = cljs.core.next(s__$1);
          i = G__12773;
          s__$1 = G__12774;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4630__auto___12775 = size;
      var i_12776 = 0;
      while (true) {
        if (i_12776 < n__4630__auto___12775) {
          a[i_12776] = init_val_or_seq;
          var G__12777 = i_12776 + 1;
          i_12776 = G__12777;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__12780 = i + 1;
          var G__12781 = cljs.core.next(s__$1);
          i = G__12780;
          s__$1 = G__12781;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4630__auto___12782 = size;
      var i_12783 = 0;
      while (true) {
        if (i_12783 < n__4630__auto___12782) {
          a[i_12783] = init_val_or_seq;
          var G__12784 = i_12783 + 1;
          i_12783 = G__12784;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__12785 = cljs.core.next(s__$1);
        var G__12786 = i - 1;
        var G__12787 = sum + 1;
        s__$1 = G__12785;
        i = G__12786;
        sum = G__12787;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__12807__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__12807 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__12808__i = 0, G__12808__a = new Array(arguments.length - 2);
        while (G__12808__i < G__12808__a.length) {
          G__12808__a[G__12808__i] = arguments[G__12808__i + 2];
          ++G__12808__i;
        }
        zs = new cljs.core.IndexedSeq(G__12808__a, 0);
      }
      return G__12807__delegate.call(this, x, y, zs);
    };
    G__12807.cljs$lang$maxFixedArity = 2;
    G__12807.cljs$lang$applyTo = function(arglist__12809) {
      var x = cljs.core.first(arglist__12809);
      arglist__12809 = cljs.core.next(arglist__12809);
      var y = cljs.core.first(arglist__12809);
      var zs = cljs.core.rest(arglist__12809);
      return G__12807__delegate(x, y, zs);
    };
    G__12807.cljs$core$IFn$_invoke$arity$variadic = G__12807__delegate;
    return G__12807;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__12810 = null;
        if (arguments.length > 2) {
          var G__12811__i = 0, G__12811__a = new Array(arguments.length - 2);
          while (G__12811__i < G__12811__a.length) {
            G__12811__a[G__12811__i] = arguments[G__12811__i + 2];
            ++G__12811__i;
          }
          G__12810 = new cljs.core.IndexedSeq(G__12811__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12810);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__12812__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__12812 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12813__i = 0, G__12813__a = new Array(arguments.length - 4);
        while (G__12813__i < G__12813__a.length) {
          G__12813__a[G__12813__i] = arguments[G__12813__i + 4];
          ++G__12813__i;
        }
        more = new cljs.core.IndexedSeq(G__12813__a, 0);
      }
      return G__12812__delegate.call(this, a, b, c, d, more);
    };
    G__12812.cljs$lang$maxFixedArity = 4;
    G__12812.cljs$lang$applyTo = function(arglist__12814) {
      var a = cljs.core.first(arglist__12814);
      arglist__12814 = cljs.core.next(arglist__12814);
      var b = cljs.core.first(arglist__12814);
      arglist__12814 = cljs.core.next(arglist__12814);
      var c = cljs.core.first(arglist__12814);
      arglist__12814 = cljs.core.next(arglist__12814);
      var d = cljs.core.first(arglist__12814);
      var more = cljs.core.rest(arglist__12814);
      return G__12812__delegate(a, b, c, d, more);
    };
    G__12812.cljs$core$IFn$_invoke$arity$variadic = G__12812__delegate;
    return G__12812;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__12815 = null;
        if (arguments.length > 4) {
          var G__12816__i = 0, G__12816__a = new Array(arguments.length - 4);
          while (G__12816__i < G__12816__a.length) {
            G__12816__a[G__12816__i] = arguments[G__12816__i + 4];
            ++G__12816__i;
          }
          G__12815 = new cljs.core.IndexedSeq(G__12816__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__12815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__12817__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12818 = ntcoll;
          var G__12819 = cljs.core.first(vals);
          var G__12820 = cljs.core.next(vals);
          tcoll = G__12818;
          val = G__12819;
          vals = G__12820;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12817 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12821__i = 0, G__12821__a = new Array(arguments.length - 2);
        while (G__12821__i < G__12821__a.length) {
          G__12821__a[G__12821__i] = arguments[G__12821__i + 2];
          ++G__12821__i;
        }
        vals = new cljs.core.IndexedSeq(G__12821__a, 0);
      }
      return G__12817__delegate.call(this, tcoll, val, vals);
    };
    G__12817.cljs$lang$maxFixedArity = 2;
    G__12817.cljs$lang$applyTo = function(arglist__12822) {
      var tcoll = cljs.core.first(arglist__12822);
      arglist__12822 = cljs.core.next(arglist__12822);
      var val = cljs.core.first(arglist__12822);
      var vals = cljs.core.rest(arglist__12822);
      return G__12817__delegate(tcoll, val, vals);
    };
    G__12817.cljs$core$IFn$_invoke$arity$variadic = G__12817__delegate;
    return G__12817;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__12823 = null;
        if (arguments.length > 2) {
          var G__12824__i = 0, G__12824__a = new Array(arguments.length - 2);
          while (G__12824__i < G__12824__a.length) {
            G__12824__a[G__12824__i] = arguments[G__12824__i + 2];
            ++G__12824__i;
          }
          G__12823 = new cljs.core.IndexedSeq(G__12824__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12823);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__12825__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__12826 = ntcoll;
          var G__12827 = cljs.core.first(kvs);
          var G__12828 = cljs.core.second(kvs);
          var G__12829 = cljs.core.nnext(kvs);
          tcoll = G__12826;
          key = G__12827;
          val = G__12828;
          kvs = G__12829;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12825 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12830__i = 0, G__12830__a = new Array(arguments.length - 3);
        while (G__12830__i < G__12830__a.length) {
          G__12830__a[G__12830__i] = arguments[G__12830__i + 3];
          ++G__12830__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12830__a, 0);
      }
      return G__12825__delegate.call(this, tcoll, key, val, kvs);
    };
    G__12825.cljs$lang$maxFixedArity = 3;
    G__12825.cljs$lang$applyTo = function(arglist__12831) {
      var tcoll = cljs.core.first(arglist__12831);
      arglist__12831 = cljs.core.next(arglist__12831);
      var key = cljs.core.first(arglist__12831);
      arglist__12831 = cljs.core.next(arglist__12831);
      var val = cljs.core.first(arglist__12831);
      var kvs = cljs.core.rest(arglist__12831);
      return G__12825__delegate(tcoll, key, val, kvs);
    };
    G__12825.cljs$core$IFn$_invoke$arity$variadic = G__12825__delegate;
    return G__12825;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__12832 = null;
        if (arguments.length > 3) {
          var G__12833__i = 0, G__12833__a = new Array(arguments.length - 3);
          while (G__12833__i < G__12833__a.length) {
            G__12833__a[G__12833__i] = arguments[G__12833__i + 3];
            ++G__12833__i;
          }
          G__12832 = new cljs.core.IndexedSeq(G__12833__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__12832);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__12834__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__12835 = ntcoll;
          var G__12836 = cljs.core.first(ks);
          var G__12837 = cljs.core.next(ks);
          tcoll = G__12835;
          key = G__12836;
          ks = G__12837;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12834 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12838__i = 0, G__12838__a = new Array(arguments.length - 2);
        while (G__12838__i < G__12838__a.length) {
          G__12838__a[G__12838__i] = arguments[G__12838__i + 2];
          ++G__12838__i;
        }
        ks = new cljs.core.IndexedSeq(G__12838__a, 0);
      }
      return G__12834__delegate.call(this, tcoll, key, ks);
    };
    G__12834.cljs$lang$maxFixedArity = 2;
    G__12834.cljs$lang$applyTo = function(arglist__12839) {
      var tcoll = cljs.core.first(arglist__12839);
      arglist__12839 = cljs.core.next(arglist__12839);
      var key = cljs.core.first(arglist__12839);
      var ks = cljs.core.rest(arglist__12839);
      return G__12834__delegate(tcoll, key, ks);
    };
    G__12834.cljs$core$IFn$_invoke$arity$variadic = G__12834__delegate;
    return G__12834;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__12840 = null;
        if (arguments.length > 2) {
          var G__12841__i = 0, G__12841__a = new Array(arguments.length - 2);
          while (G__12841__i < G__12841__a.length) {
            G__12841__a[G__12841__i] = arguments[G__12841__i + 2];
            ++G__12841__i;
          }
          G__12840 = new cljs.core.IndexedSeq(G__12841__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__12840);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__12842__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12843 = ntcoll;
          var G__12844 = cljs.core.first(vals);
          var G__12845 = cljs.core.next(vals);
          tcoll = G__12843;
          val = G__12844;
          vals = G__12845;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12842 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12846__i = 0, G__12846__a = new Array(arguments.length - 2);
        while (G__12846__i < G__12846__a.length) {
          G__12846__a[G__12846__i] = arguments[G__12846__i + 2];
          ++G__12846__i;
        }
        vals = new cljs.core.IndexedSeq(G__12846__a, 0);
      }
      return G__12842__delegate.call(this, tcoll, val, vals);
    };
    G__12842.cljs$lang$maxFixedArity = 2;
    G__12842.cljs$lang$applyTo = function(arglist__12847) {
      var tcoll = cljs.core.first(arglist__12847);
      arglist__12847 = cljs.core.next(arglist__12847);
      var val = cljs.core.first(arglist__12847);
      var vals = cljs.core.rest(arglist__12847);
      return G__12842__delegate(tcoll, val, vals);
    };
    G__12842.cljs$core$IFn$_invoke$arity$variadic = G__12842__delegate;
    return G__12842;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__12848 = null;
        if (arguments.length > 2) {
          var G__12849__i = 0, G__12849__a = new Array(arguments.length - 2);
          while (G__12849__i < G__12849__a.length) {
            G__12849__a[G__12849__i] = arguments[G__12849__i + 2];
            ++G__12849__i;
          }
          G__12848 = new cljs.core.IndexedSeq(G__12849__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12848);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4674 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4674);
      } else {
        var G__13060 = a4674;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13060) : f.call(null, G__13060);
      }
    } else {
      var b4675 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4674, b4675);
        } else {
          var G__13061 = a4674;
          var G__13062 = b4675;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13061, G__13062) : f.call(null, G__13061, G__13062);
        }
      } else {
        var c4676 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4674, b4675, c4676);
          } else {
            var G__13063 = a4674;
            var G__13064 = b4675;
            var G__13065 = c4676;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13063, G__13064, G__13065) : f.call(null, G__13063, G__13064, G__13065);
          }
        } else {
          var d4677 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4674, b4675, c4676, d4677);
            } else {
              var G__13066 = a4674;
              var G__13067 = b4675;
              var G__13068 = c4676;
              var G__13069 = d4677;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13066, G__13067, G__13068, G__13069) : f.call(null, G__13066, G__13067, G__13068, G__13069);
            }
          } else {
            var e4678 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4674, b4675, c4676, d4677, e4678);
              } else {
                var G__13070 = a4674;
                var G__13071 = b4675;
                var G__13072 = c4676;
                var G__13073 = d4677;
                var G__13074 = e4678;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13070, G__13071, G__13072, G__13073, G__13074) : f.call(null, G__13070, G__13071, G__13072, G__13073, G__13074);
              }
            } else {
              var f4679 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4674, b4675, c4676, d4677, e4678, f4679);
                } else {
                  var G__13075 = a4674;
                  var G__13076 = b4675;
                  var G__13077 = c4676;
                  var G__13078 = d4677;
                  var G__13079 = e4678;
                  var G__13080 = f4679;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13075, G__13076, G__13077, G__13078, G__13079, G__13080) : f.call(null, G__13075, G__13076, G__13077, G__13078, G__13079, G__13080);
                }
              } else {
                var g4680 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4674, b4675, c4676, d4677, e4678, f4679, g4680);
                  } else {
                    var G__13081 = a4674;
                    var G__13082 = b4675;
                    var G__13083 = c4676;
                    var G__13084 = d4677;
                    var G__13085 = e4678;
                    var G__13086 = f4679;
                    var G__13087 = g4680;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13081, G__13082, G__13083, G__13084, G__13085, G__13086, G__13087) : f.call(null, G__13081, G__13082, G__13083, G__13084, G__13085, G__13086, G__13087);
                  }
                } else {
                  var h4681 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681);
                    } else {
                      var G__13088 = a4674;
                      var G__13089 = b4675;
                      var G__13090 = c4676;
                      var G__13091 = d4677;
                      var G__13092 = e4678;
                      var G__13093 = f4679;
                      var G__13094 = g4680;
                      var G__13095 = h4681;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13088, G__13089, G__13090, G__13091, G__13092, G__13093, G__13094, G__13095) : f.call(null, G__13088, G__13089, G__13090, G__13091, G__13092, G__13093, G__13094, G__13095);
                    }
                  } else {
                    var i4682 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682);
                      } else {
                        var G__13096 = a4674;
                        var G__13097 = b4675;
                        var G__13098 = c4676;
                        var G__13099 = d4677;
                        var G__13100 = e4678;
                        var G__13101 = f4679;
                        var G__13102 = g4680;
                        var G__13103 = h4681;
                        var G__13104 = i4682;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104) : f.call(null, G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104);
                      }
                    } else {
                      var j4683 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683);
                        } else {
                          var G__13105 = a4674;
                          var G__13106 = b4675;
                          var G__13107 = c4676;
                          var G__13108 = d4677;
                          var G__13109 = e4678;
                          var G__13110 = f4679;
                          var G__13111 = g4680;
                          var G__13112 = h4681;
                          var G__13113 = i4682;
                          var G__13114 = j4683;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13105, G__13106, G__13107, G__13108, G__13109, G__13110, G__13111, G__13112, G__13113, G__13114) : f.call(null, G__13105, G__13106, G__13107, G__13108, G__13109, G__13110, G__13111, G__13112, G__13113, G__13114);
                        }
                      } else {
                        var k4684 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684);
                          } else {
                            var G__13115 = a4674;
                            var G__13116 = b4675;
                            var G__13117 = c4676;
                            var G__13118 = d4677;
                            var G__13119 = e4678;
                            var G__13120 = f4679;
                            var G__13121 = g4680;
                            var G__13122 = h4681;
                            var G__13123 = i4682;
                            var G__13124 = j4683;
                            var G__13125 = k4684;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13115, G__13116, G__13117, G__13118, G__13119, G__13120, G__13121, G__13122, G__13123, G__13124, G__13125) : f.call(null, G__13115, G__13116, G__13117, G__13118, G__13119, G__13120, G__13121, G__13122, G__13123, G__13124, G__13125);
                          }
                        } else {
                          var l4685 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685);
                            } else {
                              var G__13126 = a4674;
                              var G__13127 = b4675;
                              var G__13128 = c4676;
                              var G__13129 = d4677;
                              var G__13130 = e4678;
                              var G__13131 = f4679;
                              var G__13132 = g4680;
                              var G__13133 = h4681;
                              var G__13134 = i4682;
                              var G__13135 = j4683;
                              var G__13136 = k4684;
                              var G__13137 = l4685;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13126, G__13127, G__13128, G__13129, G__13130, G__13131, G__13132, G__13133, G__13134, G__13135, G__13136, G__13137) : f.call(null, G__13126, G__13127, G__13128, G__13129, G__13130, G__13131, G__13132, G__13133, G__13134, G__13135, G__13136, G__13137);
                            }
                          } else {
                            var m4686 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686);
                              } else {
                                var G__13138 = a4674;
                                var G__13139 = b4675;
                                var G__13140 = c4676;
                                var G__13141 = d4677;
                                var G__13142 = e4678;
                                var G__13143 = f4679;
                                var G__13144 = g4680;
                                var G__13145 = h4681;
                                var G__13146 = i4682;
                                var G__13147 = j4683;
                                var G__13148 = k4684;
                                var G__13149 = l4685;
                                var G__13150 = m4686;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13138, G__13139, G__13140, G__13141, G__13142, G__13143, G__13144, G__13145, G__13146, G__13147, G__13148, G__13149, G__13150) : f.call(null, G__13138, G__13139, G__13140, G__13141, G__13142, G__13143, G__13144, G__13145, G__13146, G__13147, G__13148, G__13149, G__13150);
                              }
                            } else {
                              var n4687 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687);
                                } else {
                                  var G__13151 = a4674;
                                  var G__13152 = b4675;
                                  var G__13153 = c4676;
                                  var G__13154 = d4677;
                                  var G__13155 = e4678;
                                  var G__13156 = f4679;
                                  var G__13157 = g4680;
                                  var G__13158 = h4681;
                                  var G__13159 = i4682;
                                  var G__13160 = j4683;
                                  var G__13161 = k4684;
                                  var G__13162 = l4685;
                                  var G__13163 = m4686;
                                  var G__13164 = n4687;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13151, G__13152, G__13153, G__13154, G__13155, G__13156, G__13157, G__13158, G__13159, G__13160, G__13161, G__13162, G__13163, G__13164) : f.call(null, G__13151, G__13152, G__13153, G__13154, G__13155, G__13156, G__13157, G__13158, G__13159, G__13160, G__13161, G__13162, G__13163, G__13164);
                                }
                              } else {
                                var o4688 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688);
                                  } else {
                                    var G__13165 = a4674;
                                    var G__13166 = b4675;
                                    var G__13167 = c4676;
                                    var G__13168 = d4677;
                                    var G__13169 = e4678;
                                    var G__13170 = f4679;
                                    var G__13171 = g4680;
                                    var G__13172 = h4681;
                                    var G__13173 = i4682;
                                    var G__13174 = j4683;
                                    var G__13175 = k4684;
                                    var G__13176 = l4685;
                                    var G__13177 = m4686;
                                    var G__13178 = n4687;
                                    var G__13179 = o4688;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13165, G__13166, G__13167, G__13168, G__13169, G__13170, G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177, G__13178, G__13179) : f.call(null, G__13165, G__13166, G__13167, G__13168, G__13169, G__13170, G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177, G__13178, G__13179);
                                  }
                                } else {
                                  var p4689 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688, p4689);
                                    } else {
                                      var G__13180 = a4674;
                                      var G__13181 = b4675;
                                      var G__13182 = c4676;
                                      var G__13183 = d4677;
                                      var G__13184 = e4678;
                                      var G__13185 = f4679;
                                      var G__13186 = g4680;
                                      var G__13187 = h4681;
                                      var G__13188 = i4682;
                                      var G__13189 = j4683;
                                      var G__13190 = k4684;
                                      var G__13191 = l4685;
                                      var G__13192 = m4686;
                                      var G__13193 = n4687;
                                      var G__13194 = o4688;
                                      var G__13195 = p4689;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13180, G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191, G__13192, G__13193, G__13194, G__13195) : f.call(null, G__13180, G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191, G__13192, G__13193, G__13194, G__13195);
                                    }
                                  } else {
                                    var q4690 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688, p4689, q4690);
                                      } else {
                                        var G__13196 = a4674;
                                        var G__13197 = b4675;
                                        var G__13198 = c4676;
                                        var G__13199 = d4677;
                                        var G__13200 = e4678;
                                        var G__13201 = f4679;
                                        var G__13202 = g4680;
                                        var G__13203 = h4681;
                                        var G__13204 = i4682;
                                        var G__13205 = j4683;
                                        var G__13206 = k4684;
                                        var G__13207 = l4685;
                                        var G__13208 = m4686;
                                        var G__13209 = n4687;
                                        var G__13210 = o4688;
                                        var G__13211 = p4689;
                                        var G__13212 = q4690;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13196, G__13197, G__13198, G__13199, G__13200, G__13201, G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212) : f.call(null, G__13196, G__13197, G__13198, G__13199, G__13200, G__13201, G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212);
                                      }
                                    } else {
                                      var r4691 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688, p4689, q4690, r4691);
                                        } else {
                                          var G__13213 = a4674;
                                          var G__13214 = b4675;
                                          var G__13215 = c4676;
                                          var G__13216 = d4677;
                                          var G__13217 = e4678;
                                          var G__13218 = f4679;
                                          var G__13219 = g4680;
                                          var G__13220 = h4681;
                                          var G__13221 = i4682;
                                          var G__13222 = j4683;
                                          var G__13223 = k4684;
                                          var G__13224 = l4685;
                                          var G__13225 = m4686;
                                          var G__13226 = n4687;
                                          var G__13227 = o4688;
                                          var G__13228 = p4689;
                                          var G__13229 = q4690;
                                          var G__13230 = r4691;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13213, G__13214, G__13215, G__13216, G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223, G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230) : f.call(null, G__13213, G__13214, G__13215, G__13216, G__13217, G__13218, G__13219, G__13220, G__13221, G__13222, G__13223, G__13224, G__13225, G__13226, G__13227, G__13228, G__13229, G__13230);
                                        }
                                      } else {
                                        var s4692 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688, p4689, q4690, r4691, s4692);
                                          } else {
                                            var G__13231 = a4674;
                                            var G__13232 = b4675;
                                            var G__13233 = c4676;
                                            var G__13234 = d4677;
                                            var G__13235 = e4678;
                                            var G__13236 = f4679;
                                            var G__13237 = g4680;
                                            var G__13238 = h4681;
                                            var G__13239 = i4682;
                                            var G__13240 = j4683;
                                            var G__13241 = k4684;
                                            var G__13242 = l4685;
                                            var G__13243 = m4686;
                                            var G__13244 = n4687;
                                            var G__13245 = o4688;
                                            var G__13246 = p4689;
                                            var G__13247 = q4690;
                                            var G__13248 = r4691;
                                            var G__13249 = s4692;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245, G__13246, G__13247, G__13248, G__13249) : f.call(null, G__13231, G__13232, G__13233, G__13234, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240, G__13241, G__13242, G__13243, G__13244, G__13245, G__13246, G__13247, G__13248, 
                                            G__13249);
                                          }
                                        } else {
                                          var t4693 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4674, b4675, c4676, d4677, e4678, f4679, g4680, h4681, i4682, j4683, k4684, l4685, m4686, n4687, o4688, p4689, q4690, r4691, s4692, t4693);
                                            } else {
                                              var G__13250 = a4674;
                                              var G__13251 = b4675;
                                              var G__13252 = c4676;
                                              var G__13253 = d4677;
                                              var G__13254 = e4678;
                                              var G__13255 = f4679;
                                              var G__13256 = g4680;
                                              var G__13257 = h4681;
                                              var G__13258 = i4682;
                                              var G__13259 = j4683;
                                              var G__13260 = k4684;
                                              var G__13261 = l4685;
                                              var G__13262 = m4686;
                                              var G__13263 = n4687;
                                              var G__13264 = o4688;
                                              var G__13265 = p4689;
                                              var G__13266 = q4690;
                                              var G__13267 = r4691;
                                              var G__13268 = s4692;
                                              var G__13269 = t4693;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13250, G__13251, G__13252, G__13253, G__13254, G__13255, G__13256, G__13257, G__13258, G__13259, G__13260, G__13261, G__13262, G__13263, G__13264, G__13265, G__13266, G__13267, G__13268, G__13269) : f.call(null, G__13250, G__13251, G__13252, G__13253, G__13254, G__13255, G__13256, G__13257, G__13258, G__13259, G__13260, G__13261, G__13262, G__13263, G__13264, G__13265, G__13266, 
                                              G__13267, G__13268, G__13269);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__13270__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__13270 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__13271__i = 0, G__13271__a = new Array(arguments.length - 5);
        while (G__13271__i < G__13271__a.length) {
          G__13271__a[G__13271__i] = arguments[G__13271__i + 5];
          ++G__13271__i;
        }
        args = new cljs.core.IndexedSeq(G__13271__a, 0);
      }
      return G__13270__delegate.call(this, f, a, b, c, d, args);
    };
    G__13270.cljs$lang$maxFixedArity = 5;
    G__13270.cljs$lang$applyTo = function(arglist__13272) {
      var f = cljs.core.first(arglist__13272);
      arglist__13272 = cljs.core.next(arglist__13272);
      var a = cljs.core.first(arglist__13272);
      arglist__13272 = cljs.core.next(arglist__13272);
      var b = cljs.core.first(arglist__13272);
      arglist__13272 = cljs.core.next(arglist__13272);
      var c = cljs.core.first(arglist__13272);
      arglist__13272 = cljs.core.next(arglist__13272);
      var d = cljs.core.first(arglist__13272);
      var args = cljs.core.rest(arglist__13272);
      return G__13270__delegate(f, a, b, c, d, args);
    };
    G__13270.cljs$core$IFn$_invoke$arity$variadic = G__13270__delegate;
    return G__13270;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__13273 = null;
        if (arguments.length > 5) {
          var G__13274__i = 0, G__13274__a = new Array(arguments.length - 5);
          while (G__13274__i < G__13274__a.length) {
            G__13274__a[G__13274__i] = arguments[G__13274__i + 5];
            ++G__13274__i;
          }
          G__13273 = new cljs.core.IndexedSeq(G__13274__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__13273);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__13290 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13290) : f.call(null, G__13290);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__13291 = cljs.core.meta(obj);
      var G__13292 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13291, G__13292) : f.call(null, G__13291, G__13292);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__13293 = cljs.core.meta(obj);
      var G__13294 = a;
      var G__13295 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13293, G__13294, G__13295) : f.call(null, G__13293, G__13294, G__13295);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__13296 = cljs.core.meta(obj);
      var G__13297 = a;
      var G__13298 = b;
      var G__13299 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13296, G__13297, G__13298, G__13299) : f.call(null, G__13296, G__13297, G__13298, G__13299);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__13300 = cljs.core.meta(obj);
      var G__13301 = a;
      var G__13302 = b;
      var G__13303 = c;
      var G__13304 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13300, G__13301, G__13302, G__13303, G__13304) : f.call(null, G__13300, G__13301, G__13302, G__13303, G__13304);
    }());
  };
  var vary_meta__7 = function() {
    var G__13305__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__13305 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13306__i = 0, G__13306__a = new Array(arguments.length - 6);
        while (G__13306__i < G__13306__a.length) {
          G__13306__a[G__13306__i] = arguments[G__13306__i + 6];
          ++G__13306__i;
        }
        args = new cljs.core.IndexedSeq(G__13306__a, 0);
      }
      return G__13305__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13305.cljs$lang$maxFixedArity = 6;
    G__13305.cljs$lang$applyTo = function(arglist__13307) {
      var obj = cljs.core.first(arglist__13307);
      arglist__13307 = cljs.core.next(arglist__13307);
      var f = cljs.core.first(arglist__13307);
      arglist__13307 = cljs.core.next(arglist__13307);
      var a = cljs.core.first(arglist__13307);
      arglist__13307 = cljs.core.next(arglist__13307);
      var b = cljs.core.first(arglist__13307);
      arglist__13307 = cljs.core.next(arglist__13307);
      var c = cljs.core.first(arglist__13307);
      arglist__13307 = cljs.core.next(arglist__13307);
      var d = cljs.core.first(arglist__13307);
      var args = cljs.core.rest(arglist__13307);
      return G__13305__delegate(obj, f, a, b, c, d, args);
    };
    G__13305.cljs$core$IFn$_invoke$arity$variadic = G__13305__delegate;
    return G__13305;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__13308 = null;
        if (arguments.length > 6) {
          var G__13309__i = 0, G__13309__a = new Array(arguments.length - 6);
          while (G__13309__i < G__13309__a.length) {
            G__13309__a[G__13309__i] = arguments[G__13309__i + 6];
            ++G__13309__i;
          }
          G__13308 = new cljs.core.IndexedSeq(G__13309__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__13308);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__13310__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__13310 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13311__i = 0, G__13311__a = new Array(arguments.length - 2);
        while (G__13311__i < G__13311__a.length) {
          G__13311__a[G__13311__i] = arguments[G__13311__i + 2];
          ++G__13311__i;
        }
        more = new cljs.core.IndexedSeq(G__13311__a, 0);
      }
      return G__13310__delegate.call(this, x, y, more);
    };
    G__13310.cljs$lang$maxFixedArity = 2;
    G__13310.cljs$lang$applyTo = function(arglist__13312) {
      var x = cljs.core.first(arglist__13312);
      arglist__13312 = cljs.core.next(arglist__13312);
      var y = cljs.core.first(arglist__13312);
      var more = cljs.core.rest(arglist__13312);
      return G__13310__delegate(x, y, more);
    };
    G__13310.cljs$core$IFn$_invoke$arity$variadic = G__13310__delegate;
    return G__13310;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__13313 = null;
        if (arguments.length > 2) {
          var G__13314__i = 0, G__13314__a = new Array(arguments.length - 2);
          while (G__13314__i < G__13314__a.length) {
            G__13314__a[G__13314__i] = arguments[G__13314__i + 2];
            ++G__13314__i;
          }
          G__13313 = new cljs.core.IndexedSeq(G__13314__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13313);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t13318 !== "undefined") {
  } else {
    cljs.core.t13318 = function(nil_iter, meta13319) {
      this.nil_iter = nil_iter;
      this.meta13319 = meta13319;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t13318.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t13318.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t13318.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t13318.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13320) {
      var self__ = this;
      var _13320__$1 = this;
      return self__.meta13319;
    };
    cljs.core.t13318.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13320, meta13319__$1) {
      var self__ = this;
      var _13320__$1 = this;
      return new cljs.core.t13318(self__.nil_iter, meta13319__$1);
    };
    cljs.core.t13318.cljs$lang$type = true;
    cljs.core.t13318.cljs$lang$ctorStr = "cljs.core/t13318";
    cljs.core.t13318.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
      return cljs.core._write(writer__4331__auto__, "cljs.core/t13318");
    };
    cljs.core.__GT_t13318 = function __GT_t13318(nil_iter__$1, meta13319) {
      return new cljs.core.t13318(nil_iter__$1, meta13319);
    };
  }
  return new cljs.core.t13318(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 54, cljs.core.constant$keyword$9, 2998, cljs.core.constant$keyword$10, 3, cljs.core.constant$keyword$11, 2994, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/cljs/core.cljs"], null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = !(lt.stepper == null);
      if (and__3731__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3731__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__13321 = lt;
        var G__13322 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13321, G__13322) : self__.xform.call(null, G__13321, G__13322);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13323 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13323) : self__.xform.call(null, G__13323);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__13325 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13325) : xform.call(null, G__13325);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__13327 = cljs.core.next(iters__$1);
        iters__$1 = G__13327;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4630__auto___13328 = self__.iters.length;
  var i_13329 = 0;
  while (true) {
    if (i_13329 < n__4630__auto___13328) {
      self__.nexts[i_13329] = self__.iters[i_13329].next();
      var G__13330 = i_13329 + 1;
      i_13329 = G__13330;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = !(lt.stepper == null);
      if (and__3731__auto__) {
        return this$.hasNext();
      } else {
        return and__3731__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__13326 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13326) : self__.xform.call(null, G__13326);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__13335 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13335) : xform.call(null, G__13335);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__13336_13340 = cljs.core.seq(colls);
  var chunk__13337_13341 = null;
  var count__13338_13342 = 0;
  var i__13339_13343 = 0;
  while (true) {
    if (i__13339_13343 < count__13338_13342) {
      var coll_13344 = chunk__13337_13341.cljs$core$IIndexed$_nth$arity$2(null, i__13339_13343);
      iters.push(cljs.core.iter(coll_13344));
      var G__13345 = seq__13336_13340;
      var G__13346 = chunk__13337_13341;
      var G__13347 = count__13338_13342;
      var G__13348 = i__13339_13343 + 1;
      seq__13336_13340 = G__13345;
      chunk__13337_13341 = G__13346;
      count__13338_13342 = G__13347;
      i__13339_13343 = G__13348;
      continue;
    } else {
      var temp__4126__auto___13349 = cljs.core.seq(seq__13336_13340);
      if (temp__4126__auto___13349) {
        var seq__13336_13350__$1 = temp__4126__auto___13349;
        if (cljs.core.chunked_seq_QMARK_(seq__13336_13350__$1)) {
          var c__4530__auto___13351 = cljs.core.chunk_first(seq__13336_13350__$1);
          var G__13352 = cljs.core.chunk_rest(seq__13336_13350__$1);
          var G__13353 = c__4530__auto___13351;
          var G__13354 = cljs.core.count(c__4530__auto___13351);
          var G__13355 = 0;
          seq__13336_13340 = G__13352;
          chunk__13337_13341 = G__13353;
          count__13338_13342 = G__13354;
          i__13339_13343 = G__13355;
          continue;
        } else {
          var coll_13356 = cljs.core.first(seq__13336_13350__$1);
          iters.push(cljs.core.iter(coll_13356));
          var G__13357 = cljs.core.next(seq__13336_13350__$1);
          var G__13358 = null;
          var G__13359 = 0;
          var G__13360 = 0;
          seq__13336_13340 = G__13357;
          chunk__13337_13341 = G__13358;
          count__13338_13342 = G__13359;
          i__13339_13343 = G__13360;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3743__auto__ = cljs.core.seq(coll);
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__13361__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__13361 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13362__i = 0, G__13362__a = new Array(arguments.length - 2);
        while (G__13362__i < G__13362__a.length) {
          G__13362__a[G__13362__i] = arguments[G__13362__i + 2];
          ++G__13362__i;
        }
        colls = new cljs.core.IndexedSeq(G__13362__a, 0);
      }
      return G__13361__delegate.call(this, xform, coll, colls);
    };
    G__13361.cljs$lang$maxFixedArity = 2;
    G__13361.cljs$lang$applyTo = function(arglist__13363) {
      var xform = cljs.core.first(arglist__13363);
      arglist__13363 = cljs.core.next(arglist__13363);
      var coll = cljs.core.first(arglist__13363);
      var colls = cljs.core.rest(arglist__13363);
      return G__13361__delegate(xform, coll, colls);
    };
    G__13361.cljs$core$IFn$_invoke$arity$variadic = G__13361__delegate;
    return G__13361;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__13364 = null;
        if (arguments.length > 2) {
          var G__13365__i = 0, G__13365__a = new Array(arguments.length - 2);
          while (G__13365__i < G__13365__a.length) {
            G__13365__a[G__13365__i] = arguments[G__13365__i + 2];
            ++G__13365__i;
          }
          G__13364 = new cljs.core.IndexedSeq(G__13365__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__13364);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13367 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13367) : pred.call(null, G__13367);
      }())) {
        var G__13368 = pred;
        var G__13369 = cljs.core.next(coll);
        pred = G__13368;
        coll = G__13369;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3743__auto__ = function() {
        var G__13373 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13373) : pred.call(null, G__13373);
      }();
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        var G__13374 = pred;
        var G__13375 = cljs.core.next(coll);
        pred = G__13374;
        coll = G__13375;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13382 = null;
    var G__13382__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__13382__1 = function(x) {
      return cljs.core.not(function() {
        var G__13379 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13379) : f.call(null, G__13379);
      }());
    };
    var G__13382__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__13380 = x;
        var G__13381 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13380, G__13381) : f.call(null, G__13380, G__13381);
      }());
    };
    var G__13382__3 = function() {
      var G__13383__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13383 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13384__i = 0, G__13384__a = new Array(arguments.length - 2);
          while (G__13384__i < G__13384__a.length) {
            G__13384__a[G__13384__i] = arguments[G__13384__i + 2];
            ++G__13384__i;
          }
          zs = new cljs.core.IndexedSeq(G__13384__a, 0);
        }
        return G__13383__delegate.call(this, x, y, zs);
      };
      G__13383.cljs$lang$maxFixedArity = 2;
      G__13383.cljs$lang$applyTo = function(arglist__13385) {
        var x = cljs.core.first(arglist__13385);
        arglist__13385 = cljs.core.next(arglist__13385);
        var y = cljs.core.first(arglist__13385);
        var zs = cljs.core.rest(arglist__13385);
        return G__13383__delegate(x, y, zs);
      };
      G__13383.cljs$core$IFn$_invoke$arity$variadic = G__13383__delegate;
      return G__13383;
    }();
    G__13382 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13382__0.call(this);
        case 1:
          return G__13382__1.call(this, x);
        case 2:
          return G__13382__2.call(this, x, y);
        default:
          var G__13386 = null;
          if (arguments.length > 2) {
            var G__13387__i = 0, G__13387__a = new Array(arguments.length - 2);
            while (G__13387__i < G__13387__a.length) {
              G__13387__a[G__13387__i] = arguments[G__13387__i + 2];
              ++G__13387__i;
            }
            G__13386 = new cljs.core.IndexedSeq(G__13387__a, 0);
          }
          return G__13382__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13386);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13382.cljs$lang$maxFixedArity = 2;
    G__13382.cljs$lang$applyTo = G__13382__3.cljs$lang$applyTo;
    G__13382.cljs$core$IFn$_invoke$arity$0 = G__13382__0;
    G__13382.cljs$core$IFn$_invoke$arity$1 = G__13382__1;
    G__13382.cljs$core$IFn$_invoke$arity$2 = G__13382__2;
    G__13382.cljs$core$IFn$_invoke$arity$variadic = G__13382__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13382;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13388__delegate = function(args) {
      return x;
    };
    var G__13388 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13389__i = 0, G__13389__a = new Array(arguments.length - 0);
        while (G__13389__i < G__13389__a.length) {
          G__13389__a[G__13389__i] = arguments[G__13389__i + 0];
          ++G__13389__i;
        }
        args = new cljs.core.IndexedSeq(G__13389__a, 0);
      }
      return G__13388__delegate.call(this, args);
    };
    G__13388.cljs$lang$maxFixedArity = 0;
    G__13388.cljs$lang$applyTo = function(arglist__13390) {
      var args = cljs.core.seq(arglist__13390);
      return G__13388__delegate(args);
    };
    G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__delegate;
    return G__13388;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13445 = null;
      var G__13445__0 = function() {
        var G__13418 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13418) : f.call(null, G__13418);
      };
      var G__13445__1 = function(x) {
        var G__13419 = function() {
          var G__13420 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13420) : g.call(null, G__13420);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13419) : f.call(null, G__13419);
      };
      var G__13445__2 = function(x, y) {
        var G__13421 = function() {
          var G__13422 = x;
          var G__13423 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13422, G__13423) : g.call(null, G__13422, G__13423);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13421) : f.call(null, G__13421);
      };
      var G__13445__3 = function(x, y, z) {
        var G__13424 = function() {
          var G__13425 = x;
          var G__13426 = y;
          var G__13427 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13425, G__13426, G__13427) : g.call(null, G__13425, G__13426, G__13427);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13424) : f.call(null, G__13424);
      };
      var G__13445__4 = function() {
        var G__13446__delegate = function(x, y, z, args) {
          var G__13428 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13428) : f.call(null, G__13428);
        };
        var G__13446 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13447__i = 0, G__13447__a = new Array(arguments.length - 3);
            while (G__13447__i < G__13447__a.length) {
              G__13447__a[G__13447__i] = arguments[G__13447__i + 3];
              ++G__13447__i;
            }
            args = new cljs.core.IndexedSeq(G__13447__a, 0);
          }
          return G__13446__delegate.call(this, x, y, z, args);
        };
        G__13446.cljs$lang$maxFixedArity = 3;
        G__13446.cljs$lang$applyTo = function(arglist__13448) {
          var x = cljs.core.first(arglist__13448);
          arglist__13448 = cljs.core.next(arglist__13448);
          var y = cljs.core.first(arglist__13448);
          arglist__13448 = cljs.core.next(arglist__13448);
          var z = cljs.core.first(arglist__13448);
          var args = cljs.core.rest(arglist__13448);
          return G__13446__delegate(x, y, z, args);
        };
        G__13446.cljs$core$IFn$_invoke$arity$variadic = G__13446__delegate;
        return G__13446;
      }();
      G__13445 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13445__0.call(this);
          case 1:
            return G__13445__1.call(this, x);
          case 2:
            return G__13445__2.call(this, x, y);
          case 3:
            return G__13445__3.call(this, x, y, z);
          default:
            var G__13449 = null;
            if (arguments.length > 3) {
              var G__13450__i = 0, G__13450__a = new Array(arguments.length - 3);
              while (G__13450__i < G__13450__a.length) {
                G__13450__a[G__13450__i] = arguments[G__13450__i + 3];
                ++G__13450__i;
              }
              G__13449 = new cljs.core.IndexedSeq(G__13450__a, 0);
            }
            return G__13445__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13449);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13445.cljs$lang$maxFixedArity = 3;
      G__13445.cljs$lang$applyTo = G__13445__4.cljs$lang$applyTo;
      G__13445.cljs$core$IFn$_invoke$arity$0 = G__13445__0;
      G__13445.cljs$core$IFn$_invoke$arity$1 = G__13445__1;
      G__13445.cljs$core$IFn$_invoke$arity$2 = G__13445__2;
      G__13445.cljs$core$IFn$_invoke$arity$3 = G__13445__3;
      G__13445.cljs$core$IFn$_invoke$arity$variadic = G__13445__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13445;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13451 = null;
      var G__13451__0 = function() {
        var G__13429 = function() {
          var G__13430 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13430) : g.call(null, G__13430);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13429) : f.call(null, G__13429);
      };
      var G__13451__1 = function(x) {
        var G__13431 = function() {
          var G__13432 = function() {
            var G__13433 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13433) : h.call(null, G__13433);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13432) : g.call(null, G__13432);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13431) : f.call(null, G__13431);
      };
      var G__13451__2 = function(x, y) {
        var G__13434 = function() {
          var G__13435 = function() {
            var G__13436 = x;
            var G__13437 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13436, G__13437) : h.call(null, G__13436, G__13437);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13435) : g.call(null, G__13435);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13434) : f.call(null, G__13434);
      };
      var G__13451__3 = function(x, y, z) {
        var G__13438 = function() {
          var G__13439 = function() {
            var G__13440 = x;
            var G__13441 = y;
            var G__13442 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13440, G__13441, G__13442) : h.call(null, G__13440, G__13441, G__13442);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13439) : g.call(null, G__13439);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13438) : f.call(null, G__13438);
      };
      var G__13451__4 = function() {
        var G__13452__delegate = function(x, y, z, args) {
          var G__13443 = function() {
            var G__13444 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13444) : g.call(null, G__13444);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13443) : f.call(null, G__13443);
        };
        var G__13452 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13453__i = 0, G__13453__a = new Array(arguments.length - 3);
            while (G__13453__i < G__13453__a.length) {
              G__13453__a[G__13453__i] = arguments[G__13453__i + 3];
              ++G__13453__i;
            }
            args = new cljs.core.IndexedSeq(G__13453__a, 0);
          }
          return G__13452__delegate.call(this, x, y, z, args);
        };
        G__13452.cljs$lang$maxFixedArity = 3;
        G__13452.cljs$lang$applyTo = function(arglist__13454) {
          var x = cljs.core.first(arglist__13454);
          arglist__13454 = cljs.core.next(arglist__13454);
          var y = cljs.core.first(arglist__13454);
          arglist__13454 = cljs.core.next(arglist__13454);
          var z = cljs.core.first(arglist__13454);
          var args = cljs.core.rest(arglist__13454);
          return G__13452__delegate(x, y, z, args);
        };
        G__13452.cljs$core$IFn$_invoke$arity$variadic = G__13452__delegate;
        return G__13452;
      }();
      G__13451 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13451__0.call(this);
          case 1:
            return G__13451__1.call(this, x);
          case 2:
            return G__13451__2.call(this, x, y);
          case 3:
            return G__13451__3.call(this, x, y, z);
          default:
            var G__13455 = null;
            if (arguments.length > 3) {
              var G__13456__i = 0, G__13456__a = new Array(arguments.length - 3);
              while (G__13456__i < G__13456__a.length) {
                G__13456__a[G__13456__i] = arguments[G__13456__i + 3];
                ++G__13456__i;
              }
              G__13455 = new cljs.core.IndexedSeq(G__13456__a, 0);
            }
            return G__13451__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13455);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13451.cljs$lang$maxFixedArity = 3;
      G__13451.cljs$lang$applyTo = G__13451__4.cljs$lang$applyTo;
      G__13451.cljs$core$IFn$_invoke$arity$0 = G__13451__0;
      G__13451.cljs$core$IFn$_invoke$arity$1 = G__13451__1;
      G__13451.cljs$core$IFn$_invoke$arity$2 = G__13451__2;
      G__13451.cljs$core$IFn$_invoke$arity$3 = G__13451__3;
      G__13451.cljs$core$IFn$_invoke$arity$variadic = G__13451__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13451;
    }();
  };
  var comp__4 = function() {
    var G__13457__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13458__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13459 = cljs.core.first(fs__$2).call(null, ret);
                var G__13460 = cljs.core.next(fs__$2);
                ret = G__13459;
                fs__$2 = G__13460;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13458 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__13461__i = 0, G__13461__a = new Array(arguments.length - 0);
              while (G__13461__i < G__13461__a.length) {
                G__13461__a[G__13461__i] = arguments[G__13461__i + 0];
                ++G__13461__i;
              }
              args = new cljs.core.IndexedSeq(G__13461__a, 0);
            }
            return G__13458__delegate.call(this, args);
          };
          G__13458.cljs$lang$maxFixedArity = 0;
          G__13458.cljs$lang$applyTo = function(arglist__13462) {
            var args = cljs.core.seq(arglist__13462);
            return G__13458__delegate(args);
          };
          G__13458.cljs$core$IFn$_invoke$arity$variadic = G__13458__delegate;
          return G__13458;
        }();
      }(fs__$1);
    };
    var G__13457 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__13463__i = 0, G__13463__a = new Array(arguments.length - 3);
        while (G__13463__i < G__13463__a.length) {
          G__13463__a[G__13463__i] = arguments[G__13463__i + 3];
          ++G__13463__i;
        }
        fs = new cljs.core.IndexedSeq(G__13463__a, 0);
      }
      return G__13457__delegate.call(this, f1, f2, f3, fs);
    };
    G__13457.cljs$lang$maxFixedArity = 3;
    G__13457.cljs$lang$applyTo = function(arglist__13464) {
      var f1 = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var f2 = cljs.core.first(arglist__13464);
      arglist__13464 = cljs.core.next(arglist__13464);
      var f3 = cljs.core.first(arglist__13464);
      var fs = cljs.core.rest(arglist__13464);
      return G__13457__delegate(f1, f2, f3, fs);
    };
    G__13457.cljs$core$IFn$_invoke$arity$variadic = G__13457__delegate;
    return G__13457;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__13465 = null;
        if (arguments.length > 3) {
          var G__13466__i = 0, G__13466__a = new Array(arguments.length - 3);
          while (G__13466__i < G__13466__a.length) {
            G__13466__a[G__13466__i] = arguments[G__13466__i + 3];
            ++G__13466__i;
          }
          G__13465 = new cljs.core.IndexedSeq(G__13466__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__13465);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13551 = null;
      var G__13551__0 = function() {
        var G__13509 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13509) : f.call(null, G__13509);
      };
      var G__13551__1 = function(x) {
        var G__13510 = arg1;
        var G__13511 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13510, G__13511) : f.call(null, G__13510, G__13511);
      };
      var G__13551__2 = function(x, y) {
        var G__13512 = arg1;
        var G__13513 = x;
        var G__13514 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13512, G__13513, G__13514) : f.call(null, G__13512, G__13513, G__13514);
      };
      var G__13551__3 = function(x, y, z) {
        var G__13515 = arg1;
        var G__13516 = x;
        var G__13517 = y;
        var G__13518 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13515, G__13516, G__13517, G__13518) : f.call(null, G__13515, G__13516, G__13517, G__13518);
      };
      var G__13551__4 = function() {
        var G__13552__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__13552 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13553__i = 0, G__13553__a = new Array(arguments.length - 3);
            while (G__13553__i < G__13553__a.length) {
              G__13553__a[G__13553__i] = arguments[G__13553__i + 3];
              ++G__13553__i;
            }
            args = new cljs.core.IndexedSeq(G__13553__a, 0);
          }
          return G__13552__delegate.call(this, x, y, z, args);
        };
        G__13552.cljs$lang$maxFixedArity = 3;
        G__13552.cljs$lang$applyTo = function(arglist__13554) {
          var x = cljs.core.first(arglist__13554);
          arglist__13554 = cljs.core.next(arglist__13554);
          var y = cljs.core.first(arglist__13554);
          arglist__13554 = cljs.core.next(arglist__13554);
          var z = cljs.core.first(arglist__13554);
          var args = cljs.core.rest(arglist__13554);
          return G__13552__delegate(x, y, z, args);
        };
        G__13552.cljs$core$IFn$_invoke$arity$variadic = G__13552__delegate;
        return G__13552;
      }();
      G__13551 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13551__0.call(this);
          case 1:
            return G__13551__1.call(this, x);
          case 2:
            return G__13551__2.call(this, x, y);
          case 3:
            return G__13551__3.call(this, x, y, z);
          default:
            var G__13555 = null;
            if (arguments.length > 3) {
              var G__13556__i = 0, G__13556__a = new Array(arguments.length - 3);
              while (G__13556__i < G__13556__a.length) {
                G__13556__a[G__13556__i] = arguments[G__13556__i + 3];
                ++G__13556__i;
              }
              G__13555 = new cljs.core.IndexedSeq(G__13556__a, 0);
            }
            return G__13551__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13555);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13551.cljs$lang$maxFixedArity = 3;
      G__13551.cljs$lang$applyTo = G__13551__4.cljs$lang$applyTo;
      G__13551.cljs$core$IFn$_invoke$arity$0 = G__13551__0;
      G__13551.cljs$core$IFn$_invoke$arity$1 = G__13551__1;
      G__13551.cljs$core$IFn$_invoke$arity$2 = G__13551__2;
      G__13551.cljs$core$IFn$_invoke$arity$3 = G__13551__3;
      G__13551.cljs$core$IFn$_invoke$arity$variadic = G__13551__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13551;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13557 = null;
      var G__13557__0 = function() {
        var G__13519 = arg1;
        var G__13520 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13519, G__13520) : f.call(null, G__13519, G__13520);
      };
      var G__13557__1 = function(x) {
        var G__13521 = arg1;
        var G__13522 = arg2;
        var G__13523 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13521, G__13522, G__13523) : f.call(null, G__13521, G__13522, G__13523);
      };
      var G__13557__2 = function(x, y) {
        var G__13524 = arg1;
        var G__13525 = arg2;
        var G__13526 = x;
        var G__13527 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13524, G__13525, G__13526, G__13527) : f.call(null, G__13524, G__13525, G__13526, G__13527);
      };
      var G__13557__3 = function(x, y, z) {
        var G__13528 = arg1;
        var G__13529 = arg2;
        var G__13530 = x;
        var G__13531 = y;
        var G__13532 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13528, G__13529, G__13530, G__13531, G__13532) : f.call(null, G__13528, G__13529, G__13530, G__13531, G__13532);
      };
      var G__13557__4 = function() {
        var G__13558__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__13558 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13559__i = 0, G__13559__a = new Array(arguments.length - 3);
            while (G__13559__i < G__13559__a.length) {
              G__13559__a[G__13559__i] = arguments[G__13559__i + 3];
              ++G__13559__i;
            }
            args = new cljs.core.IndexedSeq(G__13559__a, 0);
          }
          return G__13558__delegate.call(this, x, y, z, args);
        };
        G__13558.cljs$lang$maxFixedArity = 3;
        G__13558.cljs$lang$applyTo = function(arglist__13560) {
          var x = cljs.core.first(arglist__13560);
          arglist__13560 = cljs.core.next(arglist__13560);
          var y = cljs.core.first(arglist__13560);
          arglist__13560 = cljs.core.next(arglist__13560);
          var z = cljs.core.first(arglist__13560);
          var args = cljs.core.rest(arglist__13560);
          return G__13558__delegate(x, y, z, args);
        };
        G__13558.cljs$core$IFn$_invoke$arity$variadic = G__13558__delegate;
        return G__13558;
      }();
      G__13557 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13557__0.call(this);
          case 1:
            return G__13557__1.call(this, x);
          case 2:
            return G__13557__2.call(this, x, y);
          case 3:
            return G__13557__3.call(this, x, y, z);
          default:
            var G__13561 = null;
            if (arguments.length > 3) {
              var G__13562__i = 0, G__13562__a = new Array(arguments.length - 3);
              while (G__13562__i < G__13562__a.length) {
                G__13562__a[G__13562__i] = arguments[G__13562__i + 3];
                ++G__13562__i;
              }
              G__13561 = new cljs.core.IndexedSeq(G__13562__a, 0);
            }
            return G__13557__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13561);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13557.cljs$lang$maxFixedArity = 3;
      G__13557.cljs$lang$applyTo = G__13557__4.cljs$lang$applyTo;
      G__13557.cljs$core$IFn$_invoke$arity$0 = G__13557__0;
      G__13557.cljs$core$IFn$_invoke$arity$1 = G__13557__1;
      G__13557.cljs$core$IFn$_invoke$arity$2 = G__13557__2;
      G__13557.cljs$core$IFn$_invoke$arity$3 = G__13557__3;
      G__13557.cljs$core$IFn$_invoke$arity$variadic = G__13557__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13557;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13563 = null;
      var G__13563__0 = function() {
        var G__13533 = arg1;
        var G__13534 = arg2;
        var G__13535 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13533, G__13534, G__13535) : f.call(null, G__13533, G__13534, G__13535);
      };
      var G__13563__1 = function(x) {
        var G__13536 = arg1;
        var G__13537 = arg2;
        var G__13538 = arg3;
        var G__13539 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13536, G__13537, G__13538, G__13539) : f.call(null, G__13536, G__13537, G__13538, G__13539);
      };
      var G__13563__2 = function(x, y) {
        var G__13540 = arg1;
        var G__13541 = arg2;
        var G__13542 = arg3;
        var G__13543 = x;
        var G__13544 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13540, G__13541, G__13542, G__13543, G__13544) : f.call(null, G__13540, G__13541, G__13542, G__13543, G__13544);
      };
      var G__13563__3 = function(x, y, z) {
        var G__13545 = arg1;
        var G__13546 = arg2;
        var G__13547 = arg3;
        var G__13548 = x;
        var G__13549 = y;
        var G__13550 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13545, G__13546, G__13547, G__13548, G__13549, G__13550) : f.call(null, G__13545, G__13546, G__13547, G__13548, G__13549, G__13550);
      };
      var G__13563__4 = function() {
        var G__13564__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__13564 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13565__i = 0, G__13565__a = new Array(arguments.length - 3);
            while (G__13565__i < G__13565__a.length) {
              G__13565__a[G__13565__i] = arguments[G__13565__i + 3];
              ++G__13565__i;
            }
            args = new cljs.core.IndexedSeq(G__13565__a, 0);
          }
          return G__13564__delegate.call(this, x, y, z, args);
        };
        G__13564.cljs$lang$maxFixedArity = 3;
        G__13564.cljs$lang$applyTo = function(arglist__13566) {
          var x = cljs.core.first(arglist__13566);
          arglist__13566 = cljs.core.next(arglist__13566);
          var y = cljs.core.first(arglist__13566);
          arglist__13566 = cljs.core.next(arglist__13566);
          var z = cljs.core.first(arglist__13566);
          var args = cljs.core.rest(arglist__13566);
          return G__13564__delegate(x, y, z, args);
        };
        G__13564.cljs$core$IFn$_invoke$arity$variadic = G__13564__delegate;
        return G__13564;
      }();
      G__13563 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13563__0.call(this);
          case 1:
            return G__13563__1.call(this, x);
          case 2:
            return G__13563__2.call(this, x, y);
          case 3:
            return G__13563__3.call(this, x, y, z);
          default:
            var G__13567 = null;
            if (arguments.length > 3) {
              var G__13568__i = 0, G__13568__a = new Array(arguments.length - 3);
              while (G__13568__i < G__13568__a.length) {
                G__13568__a[G__13568__i] = arguments[G__13568__i + 3];
                ++G__13568__i;
              }
              G__13567 = new cljs.core.IndexedSeq(G__13568__a, 0);
            }
            return G__13563__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13567);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13563.cljs$lang$maxFixedArity = 3;
      G__13563.cljs$lang$applyTo = G__13563__4.cljs$lang$applyTo;
      G__13563.cljs$core$IFn$_invoke$arity$0 = G__13563__0;
      G__13563.cljs$core$IFn$_invoke$arity$1 = G__13563__1;
      G__13563.cljs$core$IFn$_invoke$arity$2 = G__13563__2;
      G__13563.cljs$core$IFn$_invoke$arity$3 = G__13563__3;
      G__13563.cljs$core$IFn$_invoke$arity$variadic = G__13563__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13563;
    }();
  };
  var partial__5 = function() {
    var G__13569__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13570__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__13570 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__13571__i = 0, G__13571__a = new Array(arguments.length - 0);
            while (G__13571__i < G__13571__a.length) {
              G__13571__a[G__13571__i] = arguments[G__13571__i + 0];
              ++G__13571__i;
            }
            args = new cljs.core.IndexedSeq(G__13571__a, 0);
          }
          return G__13570__delegate.call(this, args);
        };
        G__13570.cljs$lang$maxFixedArity = 0;
        G__13570.cljs$lang$applyTo = function(arglist__13572) {
          var args = cljs.core.seq(arglist__13572);
          return G__13570__delegate(args);
        };
        G__13570.cljs$core$IFn$_invoke$arity$variadic = G__13570__delegate;
        return G__13570;
      }();
    };
    var G__13569 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13573__i = 0, G__13573__a = new Array(arguments.length - 4);
        while (G__13573__i < G__13573__a.length) {
          G__13573__a[G__13573__i] = arguments[G__13573__i + 4];
          ++G__13573__i;
        }
        more = new cljs.core.IndexedSeq(G__13573__a, 0);
      }
      return G__13569__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13569.cljs$lang$maxFixedArity = 4;
    G__13569.cljs$lang$applyTo = function(arglist__13574) {
      var f = cljs.core.first(arglist__13574);
      arglist__13574 = cljs.core.next(arglist__13574);
      var arg1 = cljs.core.first(arglist__13574);
      arglist__13574 = cljs.core.next(arglist__13574);
      var arg2 = cljs.core.first(arglist__13574);
      arglist__13574 = cljs.core.next(arglist__13574);
      var arg3 = cljs.core.first(arglist__13574);
      var more = cljs.core.rest(arglist__13574);
      return G__13569__delegate(f, arg1, arg2, arg3, more);
    };
    G__13569.cljs$core$IFn$_invoke$arity$variadic = G__13569__delegate;
    return G__13569;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__13575 = null;
        if (arguments.length > 4) {
          var G__13576__i = 0, G__13576__a = new Array(arguments.length - 4);
          while (G__13576__i < G__13576__a.length) {
            G__13576__a[G__13576__i] = arguments[G__13576__i + 4];
            ++G__13576__i;
          }
          G__13575 = new cljs.core.IndexedSeq(G__13576__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__13575);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13609 = null;
      var G__13609__1 = function(a) {
        var G__13593 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13593) : f.call(null, G__13593);
      };
      var G__13609__2 = function(a, b) {
        var G__13594 = a == null ? x : a;
        var G__13595 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13594, G__13595) : f.call(null, G__13594, G__13595);
      };
      var G__13609__3 = function(a, b, c) {
        var G__13596 = a == null ? x : a;
        var G__13597 = b;
        var G__13598 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13596, G__13597, G__13598) : f.call(null, G__13596, G__13597, G__13598);
      };
      var G__13609__4 = function() {
        var G__13610__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__13610 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13611__i = 0, G__13611__a = new Array(arguments.length - 3);
            while (G__13611__i < G__13611__a.length) {
              G__13611__a[G__13611__i] = arguments[G__13611__i + 3];
              ++G__13611__i;
            }
            ds = new cljs.core.IndexedSeq(G__13611__a, 0);
          }
          return G__13610__delegate.call(this, a, b, c, ds);
        };
        G__13610.cljs$lang$maxFixedArity = 3;
        G__13610.cljs$lang$applyTo = function(arglist__13612) {
          var a = cljs.core.first(arglist__13612);
          arglist__13612 = cljs.core.next(arglist__13612);
          var b = cljs.core.first(arglist__13612);
          arglist__13612 = cljs.core.next(arglist__13612);
          var c = cljs.core.first(arglist__13612);
          var ds = cljs.core.rest(arglist__13612);
          return G__13610__delegate(a, b, c, ds);
        };
        G__13610.cljs$core$IFn$_invoke$arity$variadic = G__13610__delegate;
        return G__13610;
      }();
      G__13609 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13609__1.call(this, a);
          case 2:
            return G__13609__2.call(this, a, b);
          case 3:
            return G__13609__3.call(this, a, b, c);
          default:
            var G__13613 = null;
            if (arguments.length > 3) {
              var G__13614__i = 0, G__13614__a = new Array(arguments.length - 3);
              while (G__13614__i < G__13614__a.length) {
                G__13614__a[G__13614__i] = arguments[G__13614__i + 3];
                ++G__13614__i;
              }
              G__13613 = new cljs.core.IndexedSeq(G__13614__a, 0);
            }
            return G__13609__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13613);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13609.cljs$lang$maxFixedArity = 3;
      G__13609.cljs$lang$applyTo = G__13609__4.cljs$lang$applyTo;
      G__13609.cljs$core$IFn$_invoke$arity$1 = G__13609__1;
      G__13609.cljs$core$IFn$_invoke$arity$2 = G__13609__2;
      G__13609.cljs$core$IFn$_invoke$arity$3 = G__13609__3;
      G__13609.cljs$core$IFn$_invoke$arity$variadic = G__13609__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13609;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13615 = null;
      var G__13615__2 = function(a, b) {
        var G__13599 = a == null ? x : a;
        var G__13600 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13599, G__13600) : f.call(null, G__13599, G__13600);
      };
      var G__13615__3 = function(a, b, c) {
        var G__13601 = a == null ? x : a;
        var G__13602 = b == null ? y : b;
        var G__13603 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13601, G__13602, G__13603) : f.call(null, G__13601, G__13602, G__13603);
      };
      var G__13615__4 = function() {
        var G__13616__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13616 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13617__i = 0, G__13617__a = new Array(arguments.length - 3);
            while (G__13617__i < G__13617__a.length) {
              G__13617__a[G__13617__i] = arguments[G__13617__i + 3];
              ++G__13617__i;
            }
            ds = new cljs.core.IndexedSeq(G__13617__a, 0);
          }
          return G__13616__delegate.call(this, a, b, c, ds);
        };
        G__13616.cljs$lang$maxFixedArity = 3;
        G__13616.cljs$lang$applyTo = function(arglist__13618) {
          var a = cljs.core.first(arglist__13618);
          arglist__13618 = cljs.core.next(arglist__13618);
          var b = cljs.core.first(arglist__13618);
          arglist__13618 = cljs.core.next(arglist__13618);
          var c = cljs.core.first(arglist__13618);
          var ds = cljs.core.rest(arglist__13618);
          return G__13616__delegate(a, b, c, ds);
        };
        G__13616.cljs$core$IFn$_invoke$arity$variadic = G__13616__delegate;
        return G__13616;
      }();
      G__13615 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13615__2.call(this, a, b);
          case 3:
            return G__13615__3.call(this, a, b, c);
          default:
            var G__13619 = null;
            if (arguments.length > 3) {
              var G__13620__i = 0, G__13620__a = new Array(arguments.length - 3);
              while (G__13620__i < G__13620__a.length) {
                G__13620__a[G__13620__i] = arguments[G__13620__i + 3];
                ++G__13620__i;
              }
              G__13619 = new cljs.core.IndexedSeq(G__13620__a, 0);
            }
            return G__13615__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13619);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13615.cljs$lang$maxFixedArity = 3;
      G__13615.cljs$lang$applyTo = G__13615__4.cljs$lang$applyTo;
      G__13615.cljs$core$IFn$_invoke$arity$2 = G__13615__2;
      G__13615.cljs$core$IFn$_invoke$arity$3 = G__13615__3;
      G__13615.cljs$core$IFn$_invoke$arity$variadic = G__13615__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13615;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13621 = null;
      var G__13621__2 = function(a, b) {
        var G__13604 = a == null ? x : a;
        var G__13605 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13604, G__13605) : f.call(null, G__13604, G__13605);
      };
      var G__13621__3 = function(a, b, c) {
        var G__13606 = a == null ? x : a;
        var G__13607 = b == null ? y : b;
        var G__13608 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13606, G__13607, G__13608) : f.call(null, G__13606, G__13607, G__13608);
      };
      var G__13621__4 = function() {
        var G__13622__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13622 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__13623__i = 0, G__13623__a = new Array(arguments.length - 3);
            while (G__13623__i < G__13623__a.length) {
              G__13623__a[G__13623__i] = arguments[G__13623__i + 3];
              ++G__13623__i;
            }
            ds = new cljs.core.IndexedSeq(G__13623__a, 0);
          }
          return G__13622__delegate.call(this, a, b, c, ds);
        };
        G__13622.cljs$lang$maxFixedArity = 3;
        G__13622.cljs$lang$applyTo = function(arglist__13624) {
          var a = cljs.core.first(arglist__13624);
          arglist__13624 = cljs.core.next(arglist__13624);
          var b = cljs.core.first(arglist__13624);
          arglist__13624 = cljs.core.next(arglist__13624);
          var c = cljs.core.first(arglist__13624);
          var ds = cljs.core.rest(arglist__13624);
          return G__13622__delegate(a, b, c, ds);
        };
        G__13622.cljs$core$IFn$_invoke$arity$variadic = G__13622__delegate;
        return G__13622;
      }();
      G__13621 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13621__2.call(this, a, b);
          case 3:
            return G__13621__3.call(this, a, b, c);
          default:
            var G__13625 = null;
            if (arguments.length > 3) {
              var G__13626__i = 0, G__13626__a = new Array(arguments.length - 3);
              while (G__13626__i < G__13626__a.length) {
                G__13626__a[G__13626__i] = arguments[G__13626__i + 3];
                ++G__13626__i;
              }
              G__13625 = new cljs.core.IndexedSeq(G__13626__a, 0);
            }
            return G__13621__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13625);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13621.cljs$lang$maxFixedArity = 3;
      G__13621.cljs$lang$applyTo = G__13621__4.cljs$lang$applyTo;
      G__13621.cljs$core$IFn$_invoke$arity$2 = G__13621__2;
      G__13621.cljs$core$IFn$_invoke$arity$3 = G__13621__3;
      G__13621.cljs$core$IFn$_invoke$arity$variadic = G__13621__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__13621;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4630__auto___13675 = size;
          var i_13676 = 0;
          while (true) {
            if (i_13676 < n__4630__auto___13675) {
              cljs.core.chunk_append(b, function() {
                var G__13671 = idx + i_13676;
                var G__13672 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13676);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13671, G__13672) : f.call(null, G__13671, G__13672);
              }());
              var G__13677 = i_13676 + 1;
              i_13676 = G__13677;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13673 = idx;
            var G__13674 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13673, G__13674) : f.call(null, G__13673, G__13674);
          }(), mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13696 = null;
        var G__13696__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13696__1 = function(result) {
          var G__13690 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13690) : rf.call(null, G__13690);
        };
        var G__13696__2 = function(result, input) {
          var v = function() {
            var G__13691 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13691) : f.call(null, G__13691);
          }();
          if (v == null) {
            return result;
          } else {
            var G__13692 = result;
            var G__13693 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13692, G__13693) : rf.call(null, G__13692, G__13693);
          }
        };
        G__13696 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13696__0.call(this);
            case 1:
              return G__13696__1.call(this, result);
            case 2:
              return G__13696__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13696.cljs$core$IFn$_invoke$arity$0 = G__13696__0;
        G__13696.cljs$core$IFn$_invoke$arity$1 = G__13696__1;
        G__13696.cljs$core$IFn$_invoke$arity$2 = G__13696__2;
        return G__13696;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4630__auto___13697 = size;
          var i_13698 = 0;
          while (true) {
            if (i_13698 < n__4630__auto___13697) {
              var x_13699 = function() {
                var G__13694 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13698);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13694) : f.call(null, G__13694);
              }();
              if (x_13699 == null) {
              } else {
                cljs.core.chunk_append(b, x_13699);
              }
              var G__13700 = i_13698 + 1;
              i_13698 = G__13700;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13695 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13695) : f.call(null, G__13695);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__13701 = this$__$1;
  return goog.getUid(G__13701);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13702 = cljs.core.seq(self__.watches);
  var chunk__13703 = null;
  var count__13704 = 0;
  var i__13705 = 0;
  while (true) {
    if (i__13705 < count__13704) {
      var vec__13706 = chunk__13703.cljs$core$IIndexed$_nth$arity$2(null, i__13705);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13706, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13706, 1, null);
      var G__13707_13716 = key;
      var G__13708_13717 = this$__$1;
      var G__13709_13718 = oldval;
      var G__13710_13719 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13707_13716, G__13708_13717, G__13709_13718, G__13710_13719) : f.call(null, G__13707_13716, G__13708_13717, G__13709_13718, G__13710_13719);
      var G__13720 = seq__13702;
      var G__13721 = chunk__13703;
      var G__13722 = count__13704;
      var G__13723 = i__13705 + 1;
      seq__13702 = G__13720;
      chunk__13703 = G__13721;
      count__13704 = G__13722;
      i__13705 = G__13723;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13702);
      if (temp__4126__auto__) {
        var seq__13702__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13702__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__13702__$1);
          var G__13724 = cljs.core.chunk_rest(seq__13702__$1);
          var G__13725 = c__4530__auto__;
          var G__13726 = cljs.core.count(c__4530__auto__);
          var G__13727 = 0;
          seq__13702 = G__13724;
          chunk__13703 = G__13725;
          count__13704 = G__13726;
          i__13705 = G__13727;
          continue;
        } else {
          var vec__13711 = cljs.core.first(seq__13702__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13711, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13711, 1, null);
          var G__13712_13728 = key;
          var G__13713_13729 = this$__$1;
          var G__13714_13730 = oldval;
          var G__13715_13731 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13712_13728, G__13713_13729, G__13714_13730, G__13715_13731) : f.call(null, G__13712_13728, G__13713_13729, G__13714_13730, G__13715_13731);
          var G__13732 = cljs.core.next(seq__13702__$1);
          var G__13733 = null;
          var G__13734 = 0;
          var G__13735 = 0;
          seq__13702 = G__13732;
          chunk__13703 = G__13733;
          count__13704 = G__13734;
          i__13705 = G__13735;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__13739__delegate = function(x, p__13736) {
      var map__13738 = p__13736;
      var map__13738__$1 = cljs.core.seq_QMARK_(map__13738) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13738) : map__13738;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13738__$1, cljs.core.constant$keyword$13);
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13738__$1, cljs.core.constant$keyword$3);
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__13739 = function(x, var_args) {
      var p__13736 = null;
      if (arguments.length > 1) {
        var G__13740__i = 0, G__13740__a = new Array(arguments.length - 1);
        while (G__13740__i < G__13740__a.length) {
          G__13740__a[G__13740__i] = arguments[G__13740__i + 1];
          ++G__13740__i;
        }
        p__13736 = new cljs.core.IndexedSeq(G__13740__a, 0);
      }
      return G__13739__delegate.call(this, x, p__13736);
    };
    G__13739.cljs$lang$maxFixedArity = 1;
    G__13739.cljs$lang$applyTo = function(arglist__13741) {
      var x = cljs.core.first(arglist__13741);
      var p__13736 = cljs.core.rest(arglist__13741);
      return G__13739__delegate(x, p__13736);
    };
    G__13739.cljs$core$IFn$_invoke$arity$variadic = G__13739__delegate;
    return G__13739;
  }();
  atom = function(x, var_args) {
    var p__13736 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__13742 = null;
        if (arguments.length > 1) {
          var G__13743__i = 0, G__13743__a = new Array(arguments.length - 1);
          while (G__13743__i < G__13743__a.length) {
            G__13743__a[G__13743__i] = arguments[G__13743__i + 1];
            ++G__13743__i;
          }
          G__13742 = new cljs.core.IndexedSeq(G__13743__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13742);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__13746 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13746) : validate.call(null, G__13746);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__13747 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13747) : cljs.core.pr_str.call(null, G__13747);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13754 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13754) : f.call(null, G__13754);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13755 = a.state;
        var G__13756 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13755, G__13756) : f.call(null, G__13755, G__13756);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__13757 = a.state;
        var G__13758 = x;
        var G__13759 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13757, G__13758, G__13759) : f.call(null, G__13757, G__13758, G__13759);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__13760__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__13760 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13761__i = 0, G__13761__a = new Array(arguments.length - 4);
        while (G__13761__i < G__13761__a.length) {
          G__13761__a[G__13761__i] = arguments[G__13761__i + 4];
          ++G__13761__i;
        }
        more = new cljs.core.IndexedSeq(G__13761__a, 0);
      }
      return G__13760__delegate.call(this, a, f, x, y, more);
    };
    G__13760.cljs$lang$maxFixedArity = 4;
    G__13760.cljs$lang$applyTo = function(arglist__13762) {
      var a = cljs.core.first(arglist__13762);
      arglist__13762 = cljs.core.next(arglist__13762);
      var f = cljs.core.first(arglist__13762);
      arglist__13762 = cljs.core.next(arglist__13762);
      var x = cljs.core.first(arglist__13762);
      arglist__13762 = cljs.core.next(arglist__13762);
      var y = cljs.core.first(arglist__13762);
      var more = cljs.core.rest(arglist__13762);
      return G__13760__delegate(a, f, x, y, more);
    };
    G__13760.cljs$core$IFn$_invoke$arity$variadic = G__13760__delegate;
    return G__13760;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__13763 = null;
        if (arguments.length > 4) {
          var G__13764__i = 0, G__13764__a = new Array(arguments.length - 4);
          while (G__13764__i < G__13764__a.length) {
            G__13764__a[G__13764__i] = arguments[G__13764__i + 4];
            ++G__13764__i;
          }
          G__13763 = new cljs.core.IndexedSeq(G__13764__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__13763);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__13831 = null;
          var G__13831__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13831__1 = function(result) {
            var G__13798 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13798) : rf.call(null, G__13798);
          };
          var G__13831__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__13799 = i;
              var G__13800 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13799, G__13800) : f.call(null, G__13799, G__13800);
            }();
            if (v == null) {
              return result;
            } else {
              var G__13801 = result;
              var G__13802 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13801, G__13802) : rf.call(null, G__13801, G__13802);
            }
          };
          G__13831 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13831__0.call(this);
              case 1:
                return G__13831__1.call(this, result);
              case 2:
                return G__13831__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13831.cljs$core$IFn$_invoke$arity$0 = G__13831__0;
          G__13831.cljs$core$IFn$_invoke$arity$1 = G__13831__1;
          G__13831.cljs$core$IFn$_invoke$arity$2 = G__13831__2;
          return G__13831;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4630__auto___13832 = size;
            var i_13833 = 0;
            while (true) {
              if (i_13833 < n__4630__auto___13832) {
                var x_13834 = function() {
                  var G__13827 = idx + i_13833;
                  var G__13828 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13833);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13827, G__13828) : f.call(null, G__13827, G__13828);
                }();
                if (x_13834 == null) {
                } else {
                  cljs.core.chunk_append(b, x_13834);
                }
                var G__13835 = i_13833 + 1;
                i_13833 = G__13835;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__13829 = idx;
              var G__13830 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13829, G__13830) : f.call(null, G__13829, G__13830);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__14049 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14049) : p.call(null, G__14049);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14051 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14051) : p.call(null, G__14051);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var G__14052 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14052) : p.call(null, G__14052);
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14054 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14054) : p.call(null, G__14054);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14056 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14056) : p.call(null, G__14056);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var G__14057 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14057) : p.call(null, G__14057);
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__14226__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__14226 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14227__i = 0, G__14227__a = new Array(arguments.length - 3);
            while (G__14227__i < G__14227__a.length) {
              G__14227__a[G__14227__i] = arguments[G__14227__i + 3];
              ++G__14227__i;
            }
            args = new cljs.core.IndexedSeq(G__14227__a, 0);
          }
          return G__14226__delegate.call(this, x, y, z, args);
        };
        G__14226.cljs$lang$maxFixedArity = 3;
        G__14226.cljs$lang$applyTo = function(arglist__14228) {
          var x = cljs.core.first(arglist__14228);
          arglist__14228 = cljs.core.next(arglist__14228);
          var y = cljs.core.first(arglist__14228);
          arglist__14228 = cljs.core.next(arglist__14228);
          var z = cljs.core.first(arglist__14228);
          var args = cljs.core.rest(arglist__14228);
          return G__14226__delegate(x, y, z, args);
        };
        G__14226.cljs$core$IFn$_invoke$arity$variadic = G__14226__delegate;
        return G__14226;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__14229 = null;
            if (arguments.length > 3) {
              var G__14230__i = 0, G__14230__a = new Array(arguments.length - 3);
              while (G__14230__i < G__14230__a.length) {
                G__14230__a[G__14230__i] = arguments[G__14230__i + 3];
                ++G__14230__i;
              }
              G__14229 = new cljs.core.IndexedSeq(G__14230__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14229);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14089 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14089) : p1.call(null, G__14089);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var G__14090 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14090) : p2.call(null, G__14090);
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14092 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14092) : p1.call(null, G__14092);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14094 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14094) : p1.call(null, G__14094);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var and__3731__auto____$2 = function() {
                var G__14096 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14096) : p2.call(null, G__14096);
              }();
              if (cljs.core.truth_(and__3731__auto____$2)) {
                var G__14097 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14097) : p2.call(null, G__14097);
              } else {
                return and__3731__auto____$2;
              }
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14099 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14099) : p1.call(null, G__14099);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14101 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14101) : p1.call(null, G__14101);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var and__3731__auto____$2 = function() {
                var G__14103 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14103) : p1.call(null, G__14103);
              }();
              if (cljs.core.truth_(and__3731__auto____$2)) {
                var and__3731__auto____$3 = function() {
                  var G__14105 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14105) : p2.call(null, G__14105);
                }();
                if (cljs.core.truth_(and__3731__auto____$3)) {
                  var and__3731__auto____$4 = function() {
                    var G__14107 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14107) : p2.call(null, G__14107);
                  }();
                  if (cljs.core.truth_(and__3731__auto____$4)) {
                    var G__14108 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14108) : p2.call(null, G__14108);
                  } else {
                    return and__3731__auto____$4;
                  }
                } else {
                  return and__3731__auto____$3;
                }
              } else {
                return and__3731__auto____$2;
              }
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__14231__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13836_SHARP_) {
            var and__3731__auto__ = function() {
              var G__14113 = p1__13836_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14113) : p1.call(null, G__14113);
            }();
            if (cljs.core.truth_(and__3731__auto__)) {
              var G__14114 = p1__13836_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14114) : p2.call(null, G__14114);
            } else {
              return and__3731__auto__;
            }
          }, args));
        };
        var G__14231 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14232__i = 0, G__14232__a = new Array(arguments.length - 3);
            while (G__14232__i < G__14232__a.length) {
              G__14232__a[G__14232__i] = arguments[G__14232__i + 3];
              ++G__14232__i;
            }
            args = new cljs.core.IndexedSeq(G__14232__a, 0);
          }
          return G__14231__delegate.call(this, x, y, z, args);
        };
        G__14231.cljs$lang$maxFixedArity = 3;
        G__14231.cljs$lang$applyTo = function(arglist__14233) {
          var x = cljs.core.first(arglist__14233);
          arglist__14233 = cljs.core.next(arglist__14233);
          var y = cljs.core.first(arglist__14233);
          arglist__14233 = cljs.core.next(arglist__14233);
          var z = cljs.core.first(arglist__14233);
          var args = cljs.core.rest(arglist__14233);
          return G__14231__delegate(x, y, z, args);
        };
        G__14231.cljs$core$IFn$_invoke$arity$variadic = G__14231__delegate;
        return G__14231;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__14234 = null;
            if (arguments.length > 3) {
              var G__14235__i = 0, G__14235__a = new Array(arguments.length - 3);
              while (G__14235__i < G__14235__a.length) {
                G__14235__a[G__14235__i] = arguments[G__14235__i + 3];
                ++G__14235__i;
              }
              G__14234 = new cljs.core.IndexedSeq(G__14235__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14234);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14160 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14160) : p1.call(null, G__14160);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14162 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14162) : p2.call(null, G__14162);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var G__14163 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14163) : p3.call(null, G__14163);
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14165 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14165) : p1.call(null, G__14165);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14167 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14167) : p2.call(null, G__14167);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var and__3731__auto____$2 = function() {
                var G__14169 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14169) : p3.call(null, G__14169);
              }();
              if (cljs.core.truth_(and__3731__auto____$2)) {
                var and__3731__auto____$3 = function() {
                  var G__14171 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14171) : p1.call(null, G__14171);
                }();
                if (cljs.core.truth_(and__3731__auto____$3)) {
                  var and__3731__auto____$4 = function() {
                    var G__14173 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14173) : p2.call(null, G__14173);
                  }();
                  if (cljs.core.truth_(and__3731__auto____$4)) {
                    var G__14174 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14174) : p3.call(null, G__14174);
                  } else {
                    return and__3731__auto____$4;
                  }
                } else {
                  return and__3731__auto____$3;
                }
              } else {
                return and__3731__auto____$2;
              }
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3731__auto__ = function() {
            var G__14176 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14176) : p1.call(null, G__14176);
          }();
          if (cljs.core.truth_(and__3731__auto__)) {
            var and__3731__auto____$1 = function() {
              var G__14178 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14178) : p2.call(null, G__14178);
            }();
            if (cljs.core.truth_(and__3731__auto____$1)) {
              var and__3731__auto____$2 = function() {
                var G__14180 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14180) : p3.call(null, G__14180);
              }();
              if (cljs.core.truth_(and__3731__auto____$2)) {
                var and__3731__auto____$3 = function() {
                  var G__14182 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14182) : p1.call(null, G__14182);
                }();
                if (cljs.core.truth_(and__3731__auto____$3)) {
                  var and__3731__auto____$4 = function() {
                    var G__14184 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14184) : p2.call(null, G__14184);
                  }();
                  if (cljs.core.truth_(and__3731__auto____$4)) {
                    var and__3731__auto____$5 = function() {
                      var G__14186 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14186) : p3.call(null, G__14186);
                    }();
                    if (cljs.core.truth_(and__3731__auto____$5)) {
                      var and__3731__auto____$6 = function() {
                        var G__14188 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14188) : p1.call(null, G__14188);
                      }();
                      if (cljs.core.truth_(and__3731__auto____$6)) {
                        var and__3731__auto____$7 = function() {
                          var G__14190 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14190) : p2.call(null, G__14190);
                        }();
                        if (cljs.core.truth_(and__3731__auto____$7)) {
                          var G__14191 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14191) : p3.call(null, G__14191);
                        } else {
                          return and__3731__auto____$7;
                        }
                      } else {
                        return and__3731__auto____$6;
                      }
                    } else {
                      return and__3731__auto____$5;
                    }
                  } else {
                    return and__3731__auto____$4;
                  }
                } else {
                  return and__3731__auto____$3;
                }
              } else {
                return and__3731__auto____$2;
              }
            } else {
              return and__3731__auto____$1;
            }
          } else {
            return and__3731__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__14236__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13837_SHARP_) {
            var and__3731__auto__ = function() {
              var G__14198 = p1__13837_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14198) : p1.call(null, G__14198);
            }();
            if (cljs.core.truth_(and__3731__auto__)) {
              var and__3731__auto____$1 = function() {
                var G__14200 = p1__13837_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14200) : p2.call(null, G__14200);
              }();
              if (cljs.core.truth_(and__3731__auto____$1)) {
                var G__14201 = p1__13837_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14201) : p3.call(null, G__14201);
              } else {
                return and__3731__auto____$1;
              }
            } else {
              return and__3731__auto__;
            }
          }, args));
        };
        var G__14236 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14237__i = 0, G__14237__a = new Array(arguments.length - 3);
            while (G__14237__i < G__14237__a.length) {
              G__14237__a[G__14237__i] = arguments[G__14237__i + 3];
              ++G__14237__i;
            }
            args = new cljs.core.IndexedSeq(G__14237__a, 0);
          }
          return G__14236__delegate.call(this, x, y, z, args);
        };
        G__14236.cljs$lang$maxFixedArity = 3;
        G__14236.cljs$lang$applyTo = function(arglist__14238) {
          var x = cljs.core.first(arglist__14238);
          arglist__14238 = cljs.core.next(arglist__14238);
          var y = cljs.core.first(arglist__14238);
          arglist__14238 = cljs.core.next(arglist__14238);
          var z = cljs.core.first(arglist__14238);
          var args = cljs.core.rest(arglist__14238);
          return G__14236__delegate(x, y, z, args);
        };
        G__14236.cljs$core$IFn$_invoke$arity$variadic = G__14236__delegate;
        return G__14236;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__14239 = null;
            if (arguments.length > 3) {
              var G__14240__i = 0, G__14240__a = new Array(arguments.length - 3);
              while (G__14240__i < G__14240__a.length) {
                G__14240__a[G__14240__i] = arguments[G__14240__i + 3];
                ++G__14240__i;
              }
              G__14239 = new cljs.core.IndexedSeq(G__14240__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14239);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__14241__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13838_SHARP_) {
                var G__14217 = x;
                return p1__13838_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13838_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14217) : p1__13838_SHARP_.call(null, G__14217);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13839_SHARP_) {
                var and__3731__auto__ = function() {
                  var G__14219 = x;
                  return p1__13839_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13839_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14219) : p1__13839_SHARP_.call(null, G__14219);
                }();
                if (cljs.core.truth_(and__3731__auto__)) {
                  var G__14220 = y;
                  return p1__13839_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13839_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14220) : p1__13839_SHARP_.call(null, G__14220);
                } else {
                  return and__3731__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13840_SHARP_) {
                var and__3731__auto__ = function() {
                  var G__14222 = x;
                  return p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14222) : p1__13840_SHARP_.call(null, G__14222);
                }();
                if (cljs.core.truth_(and__3731__auto__)) {
                  var and__3731__auto____$1 = function() {
                    var G__14224 = y;
                    return p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14224) : p1__13840_SHARP_.call(null, G__14224);
                  }();
                  if (cljs.core.truth_(and__3731__auto____$1)) {
                    var G__14225 = z;
                    return p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14225) : p1__13840_SHARP_.call(null, G__14225);
                  } else {
                    return and__3731__auto____$1;
                  }
                } else {
                  return and__3731__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__14242__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__13841_SHARP_) {
                  return cljs.core.every_QMARK_(p1__13841_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__14242 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14243__i = 0, G__14243__a = new Array(arguments.length - 3);
                while (G__14243__i < G__14243__a.length) {
                  G__14243__a[G__14243__i] = arguments[G__14243__i + 3];
                  ++G__14243__i;
                }
                args = new cljs.core.IndexedSeq(G__14243__a, 0);
              }
              return G__14242__delegate.call(this, x, y, z, args);
            };
            G__14242.cljs$lang$maxFixedArity = 3;
            G__14242.cljs$lang$applyTo = function(arglist__14244) {
              var x = cljs.core.first(arglist__14244);
              arglist__14244 = cljs.core.next(arglist__14244);
              var y = cljs.core.first(arglist__14244);
              arglist__14244 = cljs.core.next(arglist__14244);
              var z = cljs.core.first(arglist__14244);
              var args = cljs.core.rest(arglist__14244);
              return G__14242__delegate(x, y, z, args);
            };
            G__14242.cljs$core$IFn$_invoke$arity$variadic = G__14242__delegate;
            return G__14242;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__14245 = null;
                if (arguments.length > 3) {
                  var G__14246__i = 0, G__14246__a = new Array(arguments.length - 3);
                  while (G__14246__i < G__14246__a.length) {
                    G__14246__a[G__14246__i] = arguments[G__14246__i + 3];
                    ++G__14246__i;
                  }
                  G__14245 = new cljs.core.IndexedSeq(G__14246__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14245);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__14241 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14247__i = 0, G__14247__a = new Array(arguments.length - 3);
        while (G__14247__i < G__14247__a.length) {
          G__14247__a[G__14247__i] = arguments[G__14247__i + 3];
          ++G__14247__i;
        }
        ps = new cljs.core.IndexedSeq(G__14247__a, 0);
      }
      return G__14241__delegate.call(this, p1, p2, p3, ps);
    };
    G__14241.cljs$lang$maxFixedArity = 3;
    G__14241.cljs$lang$applyTo = function(arglist__14248) {
      var p1 = cljs.core.first(arglist__14248);
      arglist__14248 = cljs.core.next(arglist__14248);
      var p2 = cljs.core.first(arglist__14248);
      arglist__14248 = cljs.core.next(arglist__14248);
      var p3 = cljs.core.first(arglist__14248);
      var ps = cljs.core.rest(arglist__14248);
      return G__14241__delegate(p1, p2, p3, ps);
    };
    G__14241.cljs$core$IFn$_invoke$arity$variadic = G__14241__delegate;
    return G__14241;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__14249 = null;
        if (arguments.length > 3) {
          var G__14250__i = 0, G__14250__a = new Array(arguments.length - 3);
          while (G__14250__i < G__14250__a.length) {
            G__14250__a[G__14250__i] = arguments[G__14250__i + 3];
            ++G__14250__i;
          }
          G__14249 = new cljs.core.IndexedSeq(G__14250__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14249);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__14456 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14456) : p.call(null, G__14456);
      };
      var sp1__2 = function(x, y) {
        var or__3743__auto__ = function() {
          var G__14458 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14458) : p.call(null, G__14458);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var G__14459 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14459) : p.call(null, G__14459);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3743__auto__ = function() {
          var G__14461 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14461) : p.call(null, G__14461);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14463 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14463) : p.call(null, G__14463);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var G__14464 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14464) : p.call(null, G__14464);
          }
        }
      };
      var sp1__4 = function() {
        var G__14625__delegate = function(x, y, z, args) {
          var or__3743__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__14625 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14626__i = 0, G__14626__a = new Array(arguments.length - 3);
            while (G__14626__i < G__14626__a.length) {
              G__14626__a[G__14626__i] = arguments[G__14626__i + 3];
              ++G__14626__i;
            }
            args = new cljs.core.IndexedSeq(G__14626__a, 0);
          }
          return G__14625__delegate.call(this, x, y, z, args);
        };
        G__14625.cljs$lang$maxFixedArity = 3;
        G__14625.cljs$lang$applyTo = function(arglist__14627) {
          var x = cljs.core.first(arglist__14627);
          arglist__14627 = cljs.core.next(arglist__14627);
          var y = cljs.core.first(arglist__14627);
          arglist__14627 = cljs.core.next(arglist__14627);
          var z = cljs.core.first(arglist__14627);
          var args = cljs.core.rest(arglist__14627);
          return G__14625__delegate(x, y, z, args);
        };
        G__14625.cljs$core$IFn$_invoke$arity$variadic = G__14625__delegate;
        return G__14625;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__14628 = null;
            if (arguments.length > 3) {
              var G__14629__i = 0, G__14629__a = new Array(arguments.length - 3);
              while (G__14629__i < G__14629__a.length) {
                G__14629__a[G__14629__i] = arguments[G__14629__i + 3];
                ++G__14629__i;
              }
              G__14628 = new cljs.core.IndexedSeq(G__14629__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14628);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3743__auto__ = function() {
          var G__14496 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14496) : p1.call(null, G__14496);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var G__14497 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14497) : p2.call(null, G__14497);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3743__auto__ = function() {
          var G__14499 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14499) : p1.call(null, G__14499);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14501 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14501) : p1.call(null, G__14501);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var or__3743__auto____$2 = function() {
              var G__14503 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14503) : p2.call(null, G__14503);
            }();
            if (cljs.core.truth_(or__3743__auto____$2)) {
              return or__3743__auto____$2;
            } else {
              var G__14504 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14504) : p2.call(null, G__14504);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3743__auto__ = function() {
          var G__14506 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14506) : p1.call(null, G__14506);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14508 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14508) : p1.call(null, G__14508);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var or__3743__auto____$2 = function() {
              var G__14510 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14510) : p1.call(null, G__14510);
            }();
            if (cljs.core.truth_(or__3743__auto____$2)) {
              return or__3743__auto____$2;
            } else {
              var or__3743__auto____$3 = function() {
                var G__14512 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14512) : p2.call(null, G__14512);
              }();
              if (cljs.core.truth_(or__3743__auto____$3)) {
                return or__3743__auto____$3;
              } else {
                var or__3743__auto____$4 = function() {
                  var G__14514 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14514) : p2.call(null, G__14514);
                }();
                if (cljs.core.truth_(or__3743__auto____$4)) {
                  return or__3743__auto____$4;
                } else {
                  var G__14515 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14515) : p2.call(null, G__14515);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14630__delegate = function(x, y, z, args) {
          var or__3743__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return cljs.core.some(function(or__3743__auto__) {
              return function(p1__14251_SHARP_) {
                var or__3743__auto____$1 = function() {
                  var G__14517 = p1__14251_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14517) : p1.call(null, G__14517);
                }();
                if (cljs.core.truth_(or__3743__auto____$1)) {
                  return or__3743__auto____$1;
                } else {
                  var G__14518 = p1__14251_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14518) : p2.call(null, G__14518);
                }
              };
            }(or__3743__auto__), args);
          }
        };
        var G__14630 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14631__i = 0, G__14631__a = new Array(arguments.length - 3);
            while (G__14631__i < G__14631__a.length) {
              G__14631__a[G__14631__i] = arguments[G__14631__i + 3];
              ++G__14631__i;
            }
            args = new cljs.core.IndexedSeq(G__14631__a, 0);
          }
          return G__14630__delegate.call(this, x, y, z, args);
        };
        G__14630.cljs$lang$maxFixedArity = 3;
        G__14630.cljs$lang$applyTo = function(arglist__14632) {
          var x = cljs.core.first(arglist__14632);
          arglist__14632 = cljs.core.next(arglist__14632);
          var y = cljs.core.first(arglist__14632);
          arglist__14632 = cljs.core.next(arglist__14632);
          var z = cljs.core.first(arglist__14632);
          var args = cljs.core.rest(arglist__14632);
          return G__14630__delegate(x, y, z, args);
        };
        G__14630.cljs$core$IFn$_invoke$arity$variadic = G__14630__delegate;
        return G__14630;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__14633 = null;
            if (arguments.length > 3) {
              var G__14634__i = 0, G__14634__a = new Array(arguments.length - 3);
              while (G__14634__i < G__14634__a.length) {
                G__14634__a[G__14634__i] = arguments[G__14634__i + 3];
                ++G__14634__i;
              }
              G__14633 = new cljs.core.IndexedSeq(G__14634__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14633);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3743__auto__ = function() {
          var G__14564 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14564) : p1.call(null, G__14564);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14566 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14566) : p2.call(null, G__14566);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var G__14567 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14567) : p3.call(null, G__14567);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3743__auto__ = function() {
          var G__14569 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14569) : p1.call(null, G__14569);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14571 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14571) : p2.call(null, G__14571);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var or__3743__auto____$2 = function() {
              var G__14573 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14573) : p3.call(null, G__14573);
            }();
            if (cljs.core.truth_(or__3743__auto____$2)) {
              return or__3743__auto____$2;
            } else {
              var or__3743__auto____$3 = function() {
                var G__14575 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14575) : p1.call(null, G__14575);
              }();
              if (cljs.core.truth_(or__3743__auto____$3)) {
                return or__3743__auto____$3;
              } else {
                var or__3743__auto____$4 = function() {
                  var G__14577 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14577) : p2.call(null, G__14577);
                }();
                if (cljs.core.truth_(or__3743__auto____$4)) {
                  return or__3743__auto____$4;
                } else {
                  var G__14578 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14578) : p3.call(null, G__14578);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3743__auto__ = function() {
          var G__14580 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14580) : p1.call(null, G__14580);
        }();
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = function() {
            var G__14582 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14582) : p2.call(null, G__14582);
          }();
          if (cljs.core.truth_(or__3743__auto____$1)) {
            return or__3743__auto____$1;
          } else {
            var or__3743__auto____$2 = function() {
              var G__14584 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14584) : p3.call(null, G__14584);
            }();
            if (cljs.core.truth_(or__3743__auto____$2)) {
              return or__3743__auto____$2;
            } else {
              var or__3743__auto____$3 = function() {
                var G__14586 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14586) : p1.call(null, G__14586);
              }();
              if (cljs.core.truth_(or__3743__auto____$3)) {
                return or__3743__auto____$3;
              } else {
                var or__3743__auto____$4 = function() {
                  var G__14588 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14588) : p2.call(null, G__14588);
                }();
                if (cljs.core.truth_(or__3743__auto____$4)) {
                  return or__3743__auto____$4;
                } else {
                  var or__3743__auto____$5 = function() {
                    var G__14590 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14590) : p3.call(null, G__14590);
                  }();
                  if (cljs.core.truth_(or__3743__auto____$5)) {
                    return or__3743__auto____$5;
                  } else {
                    var or__3743__auto____$6 = function() {
                      var G__14592 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14592) : p1.call(null, G__14592);
                    }();
                    if (cljs.core.truth_(or__3743__auto____$6)) {
                      return or__3743__auto____$6;
                    } else {
                      var or__3743__auto____$7 = function() {
                        var G__14594 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14594) : p2.call(null, G__14594);
                      }();
                      if (cljs.core.truth_(or__3743__auto____$7)) {
                        return or__3743__auto____$7;
                      } else {
                        var G__14595 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14595) : p3.call(null, G__14595);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14635__delegate = function(x, y, z, args) {
          var or__3743__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return cljs.core.some(function(or__3743__auto__) {
              return function(p1__14252_SHARP_) {
                var or__3743__auto____$1 = function() {
                  var G__14597 = p1__14252_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14597) : p1.call(null, G__14597);
                }();
                if (cljs.core.truth_(or__3743__auto____$1)) {
                  return or__3743__auto____$1;
                } else {
                  var or__3743__auto____$2 = function() {
                    var G__14599 = p1__14252_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14599) : p2.call(null, G__14599);
                  }();
                  if (cljs.core.truth_(or__3743__auto____$2)) {
                    return or__3743__auto____$2;
                  } else {
                    var G__14600 = p1__14252_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14600) : p3.call(null, G__14600);
                  }
                }
              };
            }(or__3743__auto__), args);
          }
        };
        var G__14635 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14636__i = 0, G__14636__a = new Array(arguments.length - 3);
            while (G__14636__i < G__14636__a.length) {
              G__14636__a[G__14636__i] = arguments[G__14636__i + 3];
              ++G__14636__i;
            }
            args = new cljs.core.IndexedSeq(G__14636__a, 0);
          }
          return G__14635__delegate.call(this, x, y, z, args);
        };
        G__14635.cljs$lang$maxFixedArity = 3;
        G__14635.cljs$lang$applyTo = function(arglist__14637) {
          var x = cljs.core.first(arglist__14637);
          arglist__14637 = cljs.core.next(arglist__14637);
          var y = cljs.core.first(arglist__14637);
          arglist__14637 = cljs.core.next(arglist__14637);
          var z = cljs.core.first(arglist__14637);
          var args = cljs.core.rest(arglist__14637);
          return G__14635__delegate(x, y, z, args);
        };
        G__14635.cljs$core$IFn$_invoke$arity$variadic = G__14635__delegate;
        return G__14635;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__14638 = null;
            if (arguments.length > 3) {
              var G__14639__i = 0, G__14639__a = new Array(arguments.length - 3);
              while (G__14639__i < G__14639__a.length) {
                G__14639__a[G__14639__i] = arguments[G__14639__i + 3];
                ++G__14639__i;
              }
              G__14638 = new cljs.core.IndexedSeq(G__14639__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14638);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__14640__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14253_SHARP_) {
                var G__14616 = x;
                return p1__14253_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14253_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14616) : p1__14253_SHARP_.call(null, G__14616);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14254_SHARP_) {
                var or__3743__auto__ = function() {
                  var G__14618 = x;
                  return p1__14254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14254_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14618) : p1__14254_SHARP_.call(null, G__14618);
                }();
                if (cljs.core.truth_(or__3743__auto__)) {
                  return or__3743__auto__;
                } else {
                  var G__14619 = y;
                  return p1__14254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14254_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14619) : p1__14254_SHARP_.call(null, G__14619);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__14255_SHARP_) {
                var or__3743__auto__ = function() {
                  var G__14621 = x;
                  return p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14621) : p1__14255_SHARP_.call(null, G__14621);
                }();
                if (cljs.core.truth_(or__3743__auto__)) {
                  return or__3743__auto__;
                } else {
                  var or__3743__auto____$1 = function() {
                    var G__14623 = y;
                    return p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14623) : p1__14255_SHARP_.call(null, G__14623);
                  }();
                  if (cljs.core.truth_(or__3743__auto____$1)) {
                    return or__3743__auto____$1;
                  } else {
                    var G__14624 = z;
                    return p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14255_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14624) : p1__14255_SHARP_.call(null, G__14624);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__14641__delegate = function(x, y, z, args) {
              var or__3743__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3743__auto__)) {
                return or__3743__auto__;
              } else {
                return cljs.core.some(function(or__3743__auto__, ps__$1) {
                  return function(p1__14256_SHARP_) {
                    return cljs.core.some(p1__14256_SHARP_, args);
                  };
                }(or__3743__auto__, ps__$1), ps__$1);
              }
            };
            var G__14641 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14642__i = 0, G__14642__a = new Array(arguments.length - 3);
                while (G__14642__i < G__14642__a.length) {
                  G__14642__a[G__14642__i] = arguments[G__14642__i + 3];
                  ++G__14642__i;
                }
                args = new cljs.core.IndexedSeq(G__14642__a, 0);
              }
              return G__14641__delegate.call(this, x, y, z, args);
            };
            G__14641.cljs$lang$maxFixedArity = 3;
            G__14641.cljs$lang$applyTo = function(arglist__14643) {
              var x = cljs.core.first(arglist__14643);
              arglist__14643 = cljs.core.next(arglist__14643);
              var y = cljs.core.first(arglist__14643);
              arglist__14643 = cljs.core.next(arglist__14643);
              var z = cljs.core.first(arglist__14643);
              var args = cljs.core.rest(arglist__14643);
              return G__14641__delegate(x, y, z, args);
            };
            G__14641.cljs$core$IFn$_invoke$arity$variadic = G__14641__delegate;
            return G__14641;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__14644 = null;
                if (arguments.length > 3) {
                  var G__14645__i = 0, G__14645__a = new Array(arguments.length - 3);
                  while (G__14645__i < G__14645__a.length) {
                    G__14645__a[G__14645__i] = arguments[G__14645__i + 3];
                    ++G__14645__i;
                  }
                  G__14644 = new cljs.core.IndexedSeq(G__14645__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14644);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__14640 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__14646__i = 0, G__14646__a = new Array(arguments.length - 3);
        while (G__14646__i < G__14646__a.length) {
          G__14646__a[G__14646__i] = arguments[G__14646__i + 3];
          ++G__14646__i;
        }
        ps = new cljs.core.IndexedSeq(G__14646__a, 0);
      }
      return G__14640__delegate.call(this, p1, p2, p3, ps);
    };
    G__14640.cljs$lang$maxFixedArity = 3;
    G__14640.cljs$lang$applyTo = function(arglist__14647) {
      var p1 = cljs.core.first(arglist__14647);
      arglist__14647 = cljs.core.next(arglist__14647);
      var p2 = cljs.core.first(arglist__14647);
      arglist__14647 = cljs.core.next(arglist__14647);
      var p3 = cljs.core.first(arglist__14647);
      var ps = cljs.core.rest(arglist__14647);
      return G__14640__delegate(p1, p2, p3, ps);
    };
    G__14640.cljs$core$IFn$_invoke$arity$variadic = G__14640__delegate;
    return G__14640;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__14648 = null;
        if (arguments.length > 3) {
          var G__14649__i = 0, G__14649__a = new Array(arguments.length - 3);
          while (G__14649__i < G__14649__a.length) {
            G__14649__a[G__14649__i] = arguments[G__14649__i + 3];
            ++G__14649__i;
          }
          G__14648 = new cljs.core.IndexedSeq(G__14649__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__14648);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14704 = null;
        var G__14704__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14704__1 = function(result) {
          var G__14690 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14690) : rf.call(null, G__14690);
        };
        var G__14704__2 = function(result, input) {
          var G__14691 = result;
          var G__14692 = function() {
            var G__14693 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14693) : f.call(null, G__14693);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14691, G__14692) : rf.call(null, G__14691, G__14692);
        };
        var G__14704__3 = function() {
          var G__14705__delegate = function(result, input, inputs) {
            var G__14694 = result;
            var G__14695 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14694, G__14695) : rf.call(null, G__14694, G__14695);
          };
          var G__14705 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__14706__i = 0, G__14706__a = new Array(arguments.length - 2);
              while (G__14706__i < G__14706__a.length) {
                G__14706__a[G__14706__i] = arguments[G__14706__i + 2];
                ++G__14706__i;
              }
              inputs = new cljs.core.IndexedSeq(G__14706__a, 0);
            }
            return G__14705__delegate.call(this, result, input, inputs);
          };
          G__14705.cljs$lang$maxFixedArity = 2;
          G__14705.cljs$lang$applyTo = function(arglist__14707) {
            var result = cljs.core.first(arglist__14707);
            arglist__14707 = cljs.core.next(arglist__14707);
            var input = cljs.core.first(arglist__14707);
            var inputs = cljs.core.rest(arglist__14707);
            return G__14705__delegate(result, input, inputs);
          };
          G__14705.cljs$core$IFn$_invoke$arity$variadic = G__14705__delegate;
          return G__14705;
        }();
        G__14704 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__14704__0.call(this);
            case 1:
              return G__14704__1.call(this, result);
            case 2:
              return G__14704__2.call(this, result, input);
            default:
              var G__14708 = null;
              if (arguments.length > 2) {
                var G__14709__i = 0, G__14709__a = new Array(arguments.length - 2);
                while (G__14709__i < G__14709__a.length) {
                  G__14709__a[G__14709__i] = arguments[G__14709__i + 2];
                  ++G__14709__i;
                }
                G__14708 = new cljs.core.IndexedSeq(G__14709__a, 0);
              }
              return G__14704__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__14708);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14704.cljs$lang$maxFixedArity = 2;
        G__14704.cljs$lang$applyTo = G__14704__3.cljs$lang$applyTo;
        G__14704.cljs$core$IFn$_invoke$arity$0 = G__14704__0;
        G__14704.cljs$core$IFn$_invoke$arity$1 = G__14704__1;
        G__14704.cljs$core$IFn$_invoke$arity$2 = G__14704__2;
        G__14704.cljs$core$IFn$_invoke$arity$variadic = G__14704__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__14704;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4630__auto___14710 = size;
          var i_14711 = 0;
          while (true) {
            if (i_14711 < n__4630__auto___14710) {
              cljs.core.chunk_append(b, function() {
                var G__14696 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14711);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14696) : f.call(null, G__14696);
              }());
              var G__14712 = i_14711 + 1;
              i_14711 = G__14712;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__14697 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14697) : f.call(null, G__14697);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__14698 = cljs.core.first(s1);
          var G__14699 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14698, G__14699) : f.call(null, G__14698, G__14699);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__14700 = cljs.core.first(s1);
          var G__14701 = cljs.core.first(s2);
          var G__14702 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14700, G__14701, G__14702) : f.call(null, G__14700, G__14701, G__14702);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__14713__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__14650_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__14650_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__14713 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14714__i = 0, G__14714__a = new Array(arguments.length - 4);
        while (G__14714__i < G__14714__a.length) {
          G__14714__a[G__14714__i] = arguments[G__14714__i + 4];
          ++G__14714__i;
        }
        colls = new cljs.core.IndexedSeq(G__14714__a, 0);
      }
      return G__14713__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14713.cljs$lang$maxFixedArity = 4;
    G__14713.cljs$lang$applyTo = function(arglist__14715) {
      var f = cljs.core.first(arglist__14715);
      arglist__14715 = cljs.core.next(arglist__14715);
      var c1 = cljs.core.first(arglist__14715);
      arglist__14715 = cljs.core.next(arglist__14715);
      var c2 = cljs.core.first(arglist__14715);
      arglist__14715 = cljs.core.next(arglist__14715);
      var c3 = cljs.core.first(arglist__14715);
      var colls = cljs.core.rest(arglist__14715);
      return G__14713__delegate(f, c1, c2, c3, colls);
    };
    G__14713.cljs$core$IFn$_invoke$arity$variadic = G__14713__delegate;
    return G__14713;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__14716 = null;
        if (arguments.length > 4) {
          var G__14717__i = 0, G__14717__a = new Array(arguments.length - 4);
          while (G__14717__i < G__14717__a.length) {
            G__14717__a[G__14717__i] = arguments[G__14717__i + 4];
            ++G__14717__i;
          }
          G__14716 = new cljs.core.IndexedSeq(G__14717__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14716);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14726 = null;
          var G__14726__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14726__1 = function(result) {
            var G__14723 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14723) : rf.call(null, G__14723);
          };
          var G__14726__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__14724 = result;
              var G__14725 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14724, G__14725) : rf.call(null, G__14724, G__14725);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__14726 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14726__0.call(this);
              case 1:
                return G__14726__1.call(this, result);
              case 2:
                return G__14726__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14726.cljs$core$IFn$_invoke$arity$0 = G__14726__0;
          G__14726.cljs$core$IFn$_invoke$arity$1 = G__14726__1;
          G__14726.cljs$core$IFn$_invoke$arity$2 = G__14726__2;
          return G__14726;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__14733 = null;
          var G__14733__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14733__1 = function(result) {
            var G__14730 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14730) : rf.call(null, G__14730);
          };
          var G__14733__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__14731 = result;
              var G__14732 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14731, G__14732) : rf.call(null, G__14731, G__14732);
            }
          };
          G__14733 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14733__0.call(this);
              case 1:
                return G__14733__1.call(this, result);
              case 2:
                return G__14733__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14733.cljs$core$IFn$_invoke$arity$0 = G__14733__0;
          G__14733.cljs$core$IFn$_invoke$arity$1 = G__14733__1;
          G__14733.cljs$core$IFn$_invoke$arity$2 = G__14733__2;
          return G__14733;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__14734 = n__$1 - 1;
          var G__14735 = cljs.core.rest(s);
          n__$1 = G__14734;
          coll__$1 = G__14735;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__14738 = cljs.core.next(s);
      var G__14739 = cljs.core.next(lead);
      s = G__14738;
      lead = G__14739;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__14752 = null;
          var G__14752__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14752__1 = function(result) {
            var G__14746 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14746) : rf.call(null, G__14746);
          };
          var G__14752__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3731__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3731__auto__)) {
                var G__14747 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14747) : pred.call(null, G__14747);
              } else {
                return and__3731__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__14748 = result;
              var G__14749 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14748, G__14749) : rf.call(null, G__14748, G__14749);
            }
          };
          G__14752 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14752__0.call(this);
              case 1:
                return G__14752__1.call(this, result);
              case 2:
                return G__14752__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14752.cljs$core$IFn$_invoke$arity$0 = G__14752__0;
          G__14752.cljs$core$IFn$_invoke$arity$1 = G__14752__1;
          G__14752.cljs$core$IFn$_invoke$arity$2 = G__14752__2;
          return G__14752;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3731__auto__ = s;
          if (and__3731__auto__) {
            var G__14751 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14751) : pred__$1.call(null, G__14751);
          } else {
            return and__3731__auto__;
          }
        }())) {
          var G__14753 = pred__$1;
          var G__14754 = cljs.core.rest(s);
          pred__$1 = G__14753;
          coll__$1 = G__14754;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__14763 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14763) : f.call(null, G__14763);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__14766__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__14766 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14767__i = 0, G__14767__a = new Array(arguments.length - 2);
        while (G__14767__i < G__14767__a.length) {
          G__14767__a[G__14767__i] = arguments[G__14767__i + 2];
          ++G__14767__i;
        }
        colls = new cljs.core.IndexedSeq(G__14767__a, 0);
      }
      return G__14766__delegate.call(this, c1, c2, colls);
    };
    G__14766.cljs$lang$maxFixedArity = 2;
    G__14766.cljs$lang$applyTo = function(arglist__14768) {
      var c1 = cljs.core.first(arglist__14768);
      arglist__14768 = cljs.core.next(arglist__14768);
      var c2 = cljs.core.first(arglist__14768);
      var colls = cljs.core.rest(arglist__14768);
      return G__14766__delegate(c1, c2, colls);
    };
    G__14766.cljs$core$IFn$_invoke$arity$variadic = G__14766__delegate;
    return G__14766;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__14769 = null;
        if (arguments.length > 2) {
          var G__14770__i = 0, G__14770__a = new Array(arguments.length - 2);
          while (G__14770__i < G__14770__a.length) {
            G__14770__a[G__14770__i] = arguments[G__14770__i + 2];
            ++G__14770__i;
          }
          G__14769 = new cljs.core.IndexedSeq(G__14770__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__14769);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__14779__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__14779 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__14780__i = 0, G__14780__a = new Array(arguments.length - 1);
        while (G__14780__i < G__14780__a.length) {
          G__14780__a[G__14780__i] = arguments[G__14780__i + 1];
          ++G__14780__i;
        }
        colls = new cljs.core.IndexedSeq(G__14780__a, 0);
      }
      return G__14779__delegate.call(this, f, colls);
    };
    G__14779.cljs$lang$maxFixedArity = 1;
    G__14779.cljs$lang$applyTo = function(arglist__14781) {
      var f = cljs.core.first(arglist__14781);
      var colls = cljs.core.rest(arglist__14781);
      return G__14779__delegate(f, colls);
    };
    G__14779.cljs$core$IFn$_invoke$arity$variadic = G__14779__delegate;
    return G__14779;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__14782 = null;
        if (arguments.length > 1) {
          var G__14783__i = 0, G__14783__a = new Array(arguments.length - 1);
          while (G__14783__i < G__14783__a.length) {
            G__14783__a[G__14783__i] = arguments[G__14783__i + 1];
            ++G__14783__i;
          }
          G__14782 = new cljs.core.IndexedSeq(G__14783__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14782);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14802 = null;
        var G__14802__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14802__1 = function(result) {
          var G__14796 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14796) : rf.call(null, G__14796);
        };
        var G__14802__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14797 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14797) : pred.call(null, G__14797);
          }())) {
            var G__14798 = result;
            var G__14799 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14798, G__14799) : rf.call(null, G__14798, G__14799);
          } else {
            return result;
          }
        };
        G__14802 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14802__0.call(this);
            case 1:
              return G__14802__1.call(this, result);
            case 2:
              return G__14802__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14802.cljs$core$IFn$_invoke$arity$0 = G__14802__0;
        G__14802.cljs$core$IFn$_invoke$arity$1 = G__14802__1;
        G__14802.cljs$core$IFn$_invoke$arity$2 = G__14802__2;
        return G__14802;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4630__auto___14803 = size;
          var i_14804 = 0;
          while (true) {
            if (i_14804 < n__4630__auto___14803) {
              if (cljs.core.truth_(function() {
                var G__14800 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14804);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14800) : pred.call(null, G__14800);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14804));
              } else {
              }
              var G__14805 = i_14804 + 1;
              i_14804 = G__14805;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__14801 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14801) : pred.call(null, G__14801);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__14812 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14812) : branch_QMARK_.call(null, G__14812);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__14813 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14813) : children.call(null, G__14813);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14814_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__14814_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__14817 = to;
        if (G__14817) {
          var bit__4417__auto__ = G__14817.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4417__auto__ || G__14817.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__14818 = to;
      if (G__14818) {
        var bit__4417__auto__ = G__14818.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4417__auto__ || G__14818.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__14820 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14820) : f.call(null, G__14820);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__14821__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__14821 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14822__i = 0, G__14822__a = new Array(arguments.length - 4);
        while (G__14822__i < G__14822__a.length) {
          G__14822__a[G__14822__i] = arguments[G__14822__i + 4];
          ++G__14822__i;
        }
        colls = new cljs.core.IndexedSeq(G__14822__a, 0);
      }
      return G__14821__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14821.cljs$lang$maxFixedArity = 4;
    G__14821.cljs$lang$applyTo = function(arglist__14823) {
      var f = cljs.core.first(arglist__14823);
      arglist__14823 = cljs.core.next(arglist__14823);
      var c1 = cljs.core.first(arglist__14823);
      arglist__14823 = cljs.core.next(arglist__14823);
      var c2 = cljs.core.first(arglist__14823);
      arglist__14823 = cljs.core.next(arglist__14823);
      var c3 = cljs.core.first(arglist__14823);
      var colls = cljs.core.rest(arglist__14823);
      return G__14821__delegate(f, c1, c2, c3, colls);
    };
    G__14821.cljs$core$IFn$_invoke$arity$variadic = G__14821__delegate;
    return G__14821;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__14824 = null;
        if (arguments.length > 4) {
          var G__14825__i = 0, G__14825__a = new Array(arguments.length - 4);
          while (G__14825__i < G__14825__a.length) {
            G__14825__a[G__14825__i] = arguments[G__14825__i + 4];
            ++G__14825__i;
          }
          G__14824 = new cljs.core.IndexedSeq(G__14825__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14824);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__14827 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14827) : pred.call(null, G__14827);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__14842 = m__$1;
          if (G__14842) {
            var bit__4424__auto__ = G__14842.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4424__auto__ || G__14842.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__14842.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14842);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14842);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__14843 = sentinel;
            var G__14844 = m__$2;
            var G__14845 = cljs.core.next(ks__$1);
            sentinel = G__14843;
            m__$1 = G__14844;
            ks__$1 = G__14845;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__14846, v) {
  var vec__14851 = p__14846;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14851, 0, null);
  var ks = cljs.core.nthnext(vec__14851, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14852, f) {
    var vec__14890 = p__14852;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14890, 0, null);
    var ks = cljs.core.nthnext(vec__14890, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14891) : f.call(null, G__14891);
      }());
    }
  };
  var update_in__4 = function(m, p__14853, f, a) {
    var vec__14892 = p__14853;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14892, 0, null);
    var ks = cljs.core.nthnext(vec__14892, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14893 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14894 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14893, G__14894) : f.call(null, G__14893, G__14894);
      }());
    }
  };
  var update_in__5 = function(m, p__14854, f, a, b) {
    var vec__14895 = p__14854;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14895, 0, null);
    var ks = cljs.core.nthnext(vec__14895, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14896 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14897 = a;
        var G__14898 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14896, G__14897, G__14898) : f.call(null, G__14896, G__14897, G__14898);
      }());
    }
  };
  var update_in__6 = function(m, p__14855, f, a, b, c) {
    var vec__14899 = p__14855;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14899, 0, null);
    var ks = cljs.core.nthnext(vec__14899, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14900 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14901 = a;
        var G__14902 = b;
        var G__14903 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14900, G__14901, G__14902, G__14903) : f.call(null, G__14900, G__14901, G__14902, G__14903);
      }());
    }
  };
  var update_in__7 = function() {
    var G__14905__delegate = function(m, p__14856, f, a, b, c, args) {
      var vec__14904 = p__14856;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14904, 0, null);
      var ks = cljs.core.nthnext(vec__14904, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__14905 = function(m, p__14856, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__14906__i = 0, G__14906__a = new Array(arguments.length - 6);
        while (G__14906__i < G__14906__a.length) {
          G__14906__a[G__14906__i] = arguments[G__14906__i + 6];
          ++G__14906__i;
        }
        args = new cljs.core.IndexedSeq(G__14906__a, 0);
      }
      return G__14905__delegate.call(this, m, p__14856, f, a, b, c, args);
    };
    G__14905.cljs$lang$maxFixedArity = 6;
    G__14905.cljs$lang$applyTo = function(arglist__14907) {
      var m = cljs.core.first(arglist__14907);
      arglist__14907 = cljs.core.next(arglist__14907);
      var p__14856 = cljs.core.first(arglist__14907);
      arglist__14907 = cljs.core.next(arglist__14907);
      var f = cljs.core.first(arglist__14907);
      arglist__14907 = cljs.core.next(arglist__14907);
      var a = cljs.core.first(arglist__14907);
      arglist__14907 = cljs.core.next(arglist__14907);
      var b = cljs.core.first(arglist__14907);
      arglist__14907 = cljs.core.next(arglist__14907);
      var c = cljs.core.first(arglist__14907);
      var args = cljs.core.rest(arglist__14907);
      return G__14905__delegate(m, p__14856, f, a, b, c, args);
    };
    G__14905.cljs$core$IFn$_invoke$arity$variadic = G__14905__delegate;
    return G__14905;
  }();
  update_in = function(m, p__14856, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14856, f);
      case 4:
        return update_in__4.call(this, m, p__14856, f, a);
      case 5:
        return update_in__5.call(this, m, p__14856, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14856, f, a, b, c);
      default:
        var G__14908 = null;
        if (arguments.length > 6) {
          var G__14909__i = 0, G__14909__a = new Array(arguments.length - 6);
          while (G__14909__i < G__14909__a.length) {
            G__14909__a[G__14909__i] = arguments[G__14909__i + 6];
            ++G__14909__i;
          }
          G__14908 = new cljs.core.IndexedSeq(G__14909__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14856, f, a, b, c, G__14908);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14920 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14920) : f.call(null, G__14920);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14921 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14922 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14921, G__14922) : f.call(null, G__14921, G__14922);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14923 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14924 = x;
      var G__14925 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14923, G__14924, G__14925) : f.call(null, G__14923, G__14924, G__14925);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14926 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14927 = x;
      var G__14928 = y;
      var G__14929 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14926, G__14927, G__14928, G__14929) : f.call(null, G__14926, G__14927, G__14928, G__14929);
    }());
  };
  var update__7 = function() {
    var G__14930__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__14930 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__14931__i = 0, G__14931__a = new Array(arguments.length - 6);
        while (G__14931__i < G__14931__a.length) {
          G__14931__a[G__14931__i] = arguments[G__14931__i + 6];
          ++G__14931__i;
        }
        more = new cljs.core.IndexedSeq(G__14931__a, 0);
      }
      return G__14930__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__14930.cljs$lang$maxFixedArity = 6;
    G__14930.cljs$lang$applyTo = function(arglist__14932) {
      var m = cljs.core.first(arglist__14932);
      arglist__14932 = cljs.core.next(arglist__14932);
      var k = cljs.core.first(arglist__14932);
      arglist__14932 = cljs.core.next(arglist__14932);
      var f = cljs.core.first(arglist__14932);
      arglist__14932 = cljs.core.next(arglist__14932);
      var x = cljs.core.first(arglist__14932);
      arglist__14932 = cljs.core.next(arglist__14932);
      var y = cljs.core.first(arglist__14932);
      arglist__14932 = cljs.core.next(arglist__14932);
      var z = cljs.core.first(arglist__14932);
      var more = cljs.core.rest(arglist__14932);
      return G__14930__delegate(m, k, f, x, y, z, more);
    };
    G__14930.cljs$core$IFn$_invoke$arity$variadic = G__14930__delegate;
    return G__14930;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__14933 = null;
        if (arguments.length > 6) {
          var G__14934__i = 0, G__14934__a = new Array(arguments.length - 6);
          while (G__14934__i < G__14934__a.length) {
            G__14934__a[G__14934__i] = arguments[G__14934__i + 6];
            ++G__14934__i;
          }
          G__14933 = new cljs.core.IndexedSeq(G__14934__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__14933);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__14935 = ll - 5;
      var G__14936 = r;
      ll = G__14935;
      ret = G__14936;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__14941 = cljs.core.pv_aget(node, 0);
      var G__14942 = level - 5;
      node = G__14941;
      level = G__14942;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__14943 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__14944 = level - 5;
        node = G__14943;
        level = G__14944;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14954 = init__$2;
              var G__14955 = j + i;
              var G__14956 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14954, G__14955, G__14956) : f.call(null, G__14954, G__14955, G__14956);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14967 = j + 1;
              var G__14968 = init__$3;
              j = G__14967;
              init__$2 = G__14968;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14957 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14957) : cljs.core.deref.call(null, G__14957);
      } else {
        var G__14969 = i + len;
        var G__14970 = init__$2;
        i = G__14969;
        init__$1 = G__14970;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__14958 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14958) : cljs.core.tv_editable_root.call(null, G__14958);
  }(), function() {
    var G__14959 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14959) : cljs.core.tv_editable_tail.call(null, G__14959);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14960 = init__$2;
              var G__14961 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14960, G__14961) : f.call(null, G__14960, G__14961);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14971 = j + 1;
              var G__14972 = init__$3;
              j = G__14971;
              init__$2 = G__14972;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14962 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14962) : cljs.core.deref.call(null, G__14962);
      } else {
        var G__14973 = i + len;
        var G__14974 = init__$2;
        i = G__14973;
        init__$1 = G__14974;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__14963 = coll__$1;
      var G__14964 = cljs.core.first_array_for_longvec(coll__$1);
      var G__14965 = 0;
      var G__14966 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14963, G__14964, G__14965, G__14966) : cljs.core.chunked_seq.call(null, G__14963, G__14964, G__14965, G__14966);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4630__auto___14975 = len;
    var i_14976 = 0;
    while (true) {
      if (i_14976 < n__4630__auto___14975) {
        new_tail[i_14976] = self__.tail[i_14976];
        var G__14977 = i_14976 + 1;
        i_14976 = G__14977;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14978 = null;
  var G__14978__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14978__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14978 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14978__2.call(this, self__, k);
      case 3:
        return G__14978__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14978.cljs$core$IFn$_invoke$arity$2 = G__14978__2;
  G__14978.cljs$core$IFn$_invoke$arity$3 = G__14978__3;
  return G__14978;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14953) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14953)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__14979 = i + 1;
        var G__14980 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__14979;
        out = G__14980;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__14981__i = 0, G__14981__a = new Array(arguments.length - 0);
      while (G__14981__i < G__14981__a.length) {
        G__14981__a[G__14981__i] = arguments[G__14981__i + 0];
        ++G__14981__i;
      }
      args = new cljs.core.IndexedSeq(G__14981__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14982) {
    var args = cljs.core.seq(arglist__14982);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14983 = self__.vec;
      var G__14984 = self__.node;
      var G__14985 = self__.i;
      var G__14986 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14983, G__14984, G__14985, G__14986) : cljs.core.chunked_seq.call(null, G__14983, G__14984, G__14985, G__14986);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14987 = self__.vec;
    var G__14988 = self__.i + self__.off;
    var G__14989 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14987, G__14988, G__14989) : cljs.core.subvec.call(null, G__14987, G__14988, G__14989);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__14990 = self__.vec;
    var G__14991 = self__.i + self__.off;
    var G__14992 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14990, G__14991, G__14992) : cljs.core.subvec.call(null, G__14990, G__14991, G__14992);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14993 = self__.vec;
      var G__14994 = self__.node;
      var G__14995 = self__.i;
      var G__14996 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14993, G__14994, G__14995, G__14996) : cljs.core.chunked_seq.call(null, G__14993, G__14994, G__14995, G__14996);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14997 = self__.vec;
    var G__14998 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14999 = end;
    var G__15000 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14997, G__14998, G__14999, G__15000) : cljs.core.chunked_seq.call(null, G__14997, G__14998, G__14999, G__15000);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__15001 = self__.vec;
  var G__15002 = self__.node;
  var G__15003 = self__.i;
  var G__15004 = self__.off;
  var G__15005 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15001, G__15002, G__15003, G__15004, G__15005) : cljs.core.chunked_seq.call(null, G__15001, G__15002, G__15003, G__15004, G__15005);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__15006 = self__.vec;
    var G__15007 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__15008 = end;
    var G__15009 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15006, G__15007, G__15008, G__15009) : cljs.core.chunked_seq.call(null, G__15006, G__15007, G__15008, G__15009);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__15011 = self__.meta;
  var G__15012 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__15013 = self__.start;
  var G__15014 = function() {
    var x__4060__auto__ = self__.end;
    var y__4061__auto__ = v_pos + 1;
    return x__4060__auto__ > y__4061__auto__ ? x__4060__auto__ : y__4061__auto__;
  }();
  var G__15015 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15011, G__15012, G__15013, G__15014, G__15015) : cljs.core.build_subvec.call(null, G__15011, G__15012, G__15013, G__15014, G__15015);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__15016 = self__.meta;
    var G__15017 = self__.v;
    var G__15018 = self__.start;
    var G__15019 = self__.end - 1;
    var G__15020 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15016, G__15017, G__15018, G__15019, G__15020) : cljs.core.build_subvec.call(null, G__15016, G__15017, G__15018, G__15019, G__15020);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__15022 = meta__$1;
  var G__15023 = self__.v;
  var G__15024 = self__.start;
  var G__15025 = self__.end;
  var G__15026 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15022, G__15023, G__15024, G__15025, G__15026) : cljs.core.build_subvec.call(null, G__15022, G__15023, G__15024, G__15025, G__15026);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__15027 = self__.meta;
  var G__15028 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__15029 = self__.start;
  var G__15030 = self__.end + 1;
  var G__15031 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15027, G__15028, G__15029, G__15030, G__15031) : cljs.core.build_subvec.call(null, G__15027, G__15028, G__15029, G__15030, G__15031);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15032 = null;
  var G__15032__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15032__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15032 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15032__2.call(this, self__, k);
      case 3:
        return G__15032__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15032.cljs$core$IFn$_invoke$arity$2 = G__15032__2;
  G__15032.cljs$core$IFn$_invoke$arity$3 = G__15032__3;
  return G__15032;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15010) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15010)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15033 = meta;
      var G__15034 = v.v;
      var G__15035 = v.start + start;
      var G__15036 = v.start + end;
      var G__15037 = __hash;
      meta = G__15033;
      v = G__15034;
      start = G__15035;
      end = G__15036;
      __hash = G__15037;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15044 = {};
    return obj15044;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15052 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__15053 = level - 5;
        node = G__15052;
        level = G__15053;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15057 = null;
  var G__15057__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15057__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15057 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15057__2.call(this, self__, k);
      case 3:
        return G__15057__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15057.cljs$core$IFn$_invoke$arity$2 = G__15057__2;
  G__15057.cljs$core$IFn$_invoke$arity$3 = G__15057__3;
  return G__15057;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15054) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15054)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3743__auto__ = self__.front;
    if (cljs.core.truth_(or__3743__auto__)) {
      return or__3743__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3743__auto__ = self__.rear;
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15058 = i + incr;
        i = G__15058;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15059 = i + 1;
      var G__15060 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__15059;
      out = G__15060;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15064 = {};
    return obj15064;
  }();
  var l = ks.length;
  var i_15065 = 0;
  while (true) {
    if (i_15065 < l) {
      var k_15066 = ks[i_15065];
      new_obj[k_15066] = obj[k_15066];
      var G__15067 = i_15065 + 1;
      i_15065 = G__15067;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = function() {
      var G__15071 = k;
      return goog.isString(G__15071);
    }();
    if (cljs.core.truth_(and__3731__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3731__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__15072 = init__$1;
        var G__15073 = k;
        var G__15074 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15072, G__15073, G__15074) : f.call(null, G__15072, G__15073, G__15074);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15075 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15075) : cljs.core.deref.call(null, G__15075);
      } else {
        var G__15081 = cljs.core.rest(keys__$1);
        var G__15082 = init__$2;
        keys__$1 = G__15081;
        init__$1 = G__15082;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = function() {
      var G__15077 = k;
      return goog.isString(G__15077);
    }();
    if (cljs.core.truth_(and__3731__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3731__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__15078 = k;
    return goog.isString(G__15078);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = function() {
      var G__15080 = k;
      return goog.isString(G__15080);
    }();
    if (cljs.core.truth_(and__3731__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3731__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__15068_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15068_SHARP_, self__.strobj[p1__15068_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15083 = null;
  var G__15083__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15083__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15083 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15083__2.call(this, self__, k);
      case 3:
        return G__15083__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15083.cljs$core$IFn$_invoke$arity$2 = G__15083__2;
  G__15083.cljs$core$IFn$_invoke$arity$3 = G__15083__3;
  return G__15083;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15069) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15069)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15085 = {};
  return obj15085;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15086 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15086, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15086, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15087 = i + 2;
        i = G__15087;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__15088 = i + 2;
        i = G__15088;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__15089 = i + 2;
        i = G__15089;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15090 = i + 2;
        i = G__15090;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__15091 = i + 2;
        i = G__15091;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3743__auto__ = function() {
        var G__15095 = k;
        return goog.isString(G__15095);
      }();
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15096 = 0;
  while (true) {
    if (i_15096 < l) {
      narr[i_15096] = arr[i_15096];
      var G__15097 = i_15096 + 1;
      i_15096 = G__15097;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15099 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15099) : cljs.core.keys.call(null, G__15099);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15100 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15100) : cljs.core.vals.call(null, G__15100);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15101 = cljs.core.seq(coll);
  var chunk__15102 = null;
  var count__15103 = 0;
  var i__15104 = 0;
  while (true) {
    if (i__15104 < count__15103) {
      var vec__15105 = chunk__15102.cljs$core$IIndexed$_nth$arity$2(null, i__15104);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15105, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15105, 1, null);
      var G__15106_15119 = v;
      var G__15107_15120 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15106_15119, G__15107_15120) : f.call(null, G__15106_15119, G__15107_15120);
      var G__15121 = seq__15101;
      var G__15122 = chunk__15102;
      var G__15123 = count__15103;
      var G__15124 = i__15104 + 1;
      seq__15101 = G__15121;
      chunk__15102 = G__15122;
      count__15103 = G__15123;
      i__15104 = G__15124;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15101);
      if (temp__4126__auto__) {
        var seq__15101__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15101__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15101__$1);
          var G__15125 = cljs.core.chunk_rest(seq__15101__$1);
          var G__15126 = c__4530__auto__;
          var G__15127 = cljs.core.count(c__4530__auto__);
          var G__15128 = 0;
          seq__15101 = G__15125;
          chunk__15102 = G__15126;
          count__15103 = G__15127;
          i__15104 = G__15128;
          continue;
        } else {
          var vec__15108 = cljs.core.first(seq__15101__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15108, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15108, 1, null);
          var G__15109_15129 = v;
          var G__15110_15130 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15109_15129, G__15110_15130) : f.call(null, G__15109_15129, G__15110_15130);
          var G__15131 = cljs.core.next(seq__15101__$1);
          var G__15132 = null;
          var G__15133 = 0;
          var G__15134 = 0;
          seq__15101 = G__15131;
          chunk__15102 = G__15132;
          count__15103 = G__15133;
          i__15104 = G__15134;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__15111 = init__$1;
        var G__15112 = self__.arr[i];
        var G__15113 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15111, G__15112, G__15113) : f.call(null, G__15111, G__15112, G__15113);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15114 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15114) : cljs.core.deref.call(null, G__15114);
      } else {
        var G__15135 = i + 2;
        var G__15136 = init__$2;
        i = G__15135;
        init__$1 = G__15136;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__15115 = other;
    if (G__15115) {
      var bit__4417__auto__ = G__15115.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4417__auto__ || G__15115.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__15137 = i + 2;
              i = G__15137;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15117 = {};
    return obj15117;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__15138 = s + 2;
            var G__15139 = d;
            s = G__15138;
            d = G__15139;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15140 = s + 2;
            var G__15141 = d + 2;
            s = G__15140;
            d = G__15141;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15118 = cljs.core.aclone(self__.arr);
        G__15118[idx + 1] = v;
        return G__15118;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15142 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15143 = cljs.core.next(es);
          ret = G__15142;
          es = G__15143;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15144 = null;
  var G__15144__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15144__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15144 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15144__2.call(this, self__, k);
      case 3:
        return G__15144__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15144.cljs$core$IFn$_invoke$arity$2 = G__15144__2;
  G__15144.cljs$core$IFn$_invoke$arity$3 = G__15144__3;
  return G__15144;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15098) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15098)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15145 = i + 2;
        var G__15146 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15145;
        ret = G__15146;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15147_15155 = self__.arr;
      G__15147_15155.pop();
      G__15147_15155.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15148 = self__.len;
          var G__15149 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15148, G__15149) : cljs.core.array__GT_transient_hash_map.call(null, G__15148, G__15149);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15150 = o;
      if (G__15150) {
        var bit__4424__auto__ = G__15150.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4424__auto__ || G__15150.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15150.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15150);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15150);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__15151 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15151) : cljs.core.key.call(null, G__15151);
      }(), function() {
        var G__15152 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15152) : cljs.core.val.call(null, G__15152);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15156 = cljs.core.next(es);
          var G__15157 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__15153 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15153) : cljs.core.key.call(null, G__15153);
          }(), function() {
            var G__15154 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15154) : cljs.core.val.call(null, G__15154);
          }());
          es = G__15156;
          tcoll__$2 = G__15157;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15158 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__15159 = i + 2;
      out = G__15158;
      i = G__15159;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15162 = cljs.core.aclone(arr);
    G__15162[i] = a;
    return G__15162;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15163 = cljs.core.aclone(arr);
    G__15163[i] = a;
    G__15163[j] = b;
    return G__15163;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__15168 = init__$1;
          var G__15169 = k;
          var G__15170 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15168, G__15169, G__15170) : f.call(null, G__15168, G__15169, G__15170);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__15171 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15171) : cljs.core.deref.call(null, G__15171);
      } else {
        var G__15172 = i + 2;
        var G__15173 = init__$2;
        i = G__15172;
        init__$1 = G__15173;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15174 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15174) : cljs.core.create_inode_seq.call(null, G__15174);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15188 = 0;
        var j_15189 = 0;
        while (true) {
          if (i_15188 < 32) {
            if ((self__.bitmap >>> i_15188 & 1) === 0) {
              var G__15190 = i_15188 + 1;
              var G__15191 = j_15189;
              i_15188 = G__15190;
              j_15189 = G__15191;
              continue;
            } else {
              nodes[i_15188] = !(self__.arr[j_15189] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_15189]), self__.arr[j_15189], self__.arr[j_15189 + 1], added_leaf_QMARK_) : self__.arr[j_15189 + 1];
              var G__15192 = i_15188 + 1;
              var G__15193 = j_15189 + 2;
              i_15188 = G__15192;
              j_15189 = G__15193;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__15175 = edit__$1;
          var G__15176 = shift + 5;
          var G__15177 = key_or_nil;
          var G__15178 = val_or_node;
          var G__15179 = hash;
          var G__15180 = key;
          var G__15181 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15175, G__15176, G__15177, G__15178, G__15179, G__15180, G__15181) : cljs.core.create_node.call(null, G__15175, G__15176, G__15177, G__15178, G__15179, G__15180, G__15181);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15194 = 0;
      var j_15195 = 0;
      while (true) {
        if (i_15194 < 32) {
          if ((self__.bitmap >>> i_15194 & 1) === 0) {
            var G__15196 = i_15194 + 1;
            var G__15197 = j_15195;
            i_15194 = G__15196;
            j_15195 = G__15197;
            continue;
          } else {
            nodes[i_15194] = !(self__.arr[j_15195] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_15195]), self__.arr[j_15195], self__.arr[j_15195 + 1], added_leaf_QMARK_) : self__.arr[j_15195 + 1];
            var G__15198 = i_15194 + 1;
            var G__15199 = j_15195 + 2;
            i_15194 = G__15198;
            j_15195 = G__15199;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__15182 = shift + 5;
          var G__15183 = key_or_nil;
          var G__15184 = val_or_node;
          var G__15185 = hash;
          var G__15186 = key;
          var G__15187 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15182, G__15183, G__15184, G__15185, G__15186, G__15187) : cljs.core.create_node.call(null, G__15182, G__15183, G__15184, G__15185, G__15186, G__15187);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15200 = i + 1;
        var G__15201 = j + 2;
        var G__15202 = bitmap | 1 << i;
        i = G__15200;
        j = G__15201;
        bitmap = G__15202;
        continue;
      } else {
        var G__15203 = i + 1;
        var G__15204 = j;
        var G__15205 = bitmap;
        i = G__15203;
        j = G__15204;
        bitmap = G__15205;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15206 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15206) : cljs.core.create_array_node_seq.call(null, G__15206);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__15207 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15207) : cljs.core.deref.call(null, G__15207);
        } else {
          var G__15208 = i + 1;
          var G__15209 = init__$2;
          i = G__15208;
          init__$1 = G__15209;
          continue;
        }
      } else {
        var G__15210 = i + 1;
        var G__15211 = init__$1;
        i = G__15210;
        init__$1 = G__15211;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__15212 = i + 2;
        i = G__15212;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__15213 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15213) : cljs.core.create_inode_seq.call(null, G__15213);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__15214 = self__.nodes;
    var G__15215 = self__.i + 2;
    var G__15216 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15214, G__15215, G__15216) : cljs.core.create_inode_seq.call(null, G__15214, G__15215, G__15216);
  } else {
    var G__15217 = self__.nodes;
    var G__15218 = self__.i;
    var G__15219 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15217, G__15218, G__15219) : cljs.core.create_inode_seq.call(null, G__15217, G__15218, G__15219);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15223 = j + 2;
                j = G__15223;
                continue;
              }
            } else {
              var G__15224 = j + 2;
              j = G__15224;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__15225 = null;
  var G__15226 = self__.nodes;
  var G__15227 = self__.i;
  var G__15228 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15225, G__15226, G__15227, G__15228) : cljs.core.create_array_node_seq.call(null, G__15225, G__15226, G__15227, G__15228);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15233 = j + 1;
              j = G__15233;
              continue;
            }
          } else {
            var G__15234 = j + 1;
            j = G__15234;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15236 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15236) : cljs.core.keys.call(null, G__15236);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15237 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15237) : cljs.core.vals.call(null, G__15237);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15238 = cljs.core.seq(coll);
  var chunk__15239 = null;
  var count__15240 = 0;
  var i__15241 = 0;
  while (true) {
    if (i__15241 < count__15240) {
      var vec__15242 = chunk__15239.cljs$core$IIndexed$_nth$arity$2(null, i__15241);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15242, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15242, 1, null);
      var G__15243_15254 = v;
      var G__15244_15255 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15243_15254, G__15244_15255) : f.call(null, G__15243_15254, G__15244_15255);
      var G__15256 = seq__15238;
      var G__15257 = chunk__15239;
      var G__15258 = count__15240;
      var G__15259 = i__15241 + 1;
      seq__15238 = G__15256;
      chunk__15239 = G__15257;
      count__15240 = G__15258;
      i__15241 = G__15259;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15238);
      if (temp__4126__auto__) {
        var seq__15238__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15238__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15238__$1);
          var G__15260 = cljs.core.chunk_rest(seq__15238__$1);
          var G__15261 = c__4530__auto__;
          var G__15262 = cljs.core.count(c__4530__auto__);
          var G__15263 = 0;
          seq__15238 = G__15260;
          chunk__15239 = G__15261;
          count__15240 = G__15262;
          i__15241 = G__15263;
          continue;
        } else {
          var vec__15245 = cljs.core.first(seq__15238__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15245, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15245, 1, null);
          var G__15246_15264 = v;
          var G__15247_15265 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15246_15264, G__15247_15265) : f.call(null, G__15246_15264, G__15247_15265);
          var G__15266 = cljs.core.next(seq__15238__$1);
          var G__15267 = null;
          var G__15268 = 0;
          var G__15269 = 0;
          seq__15238 = G__15266;
          chunk__15239 = G__15267;
          count__15240 = G__15268;
          i__15241 = G__15269;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__15248 = init;
    var G__15249 = null;
    var G__15250 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15248, G__15249, G__15250) : f.call(null, G__15248, G__15249, G__15250);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15251 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15251) : cljs.core.deref.call(null, G__15251);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15253 = {};
    return obj15253;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15270 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15271 = cljs.core.next(es);
          ret = G__15270;
          es = G__15271;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15272 = null;
  var G__15272__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15272__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15272 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15272__2.call(this, self__, k);
      case 3:
        return G__15272__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15272.cljs$core$IFn$_invoke$arity$2 = G__15272__2;
  G__15272.cljs$core$IFn$_invoke$arity$3 = G__15272__3;
  return G__15272;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15235) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15235)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15273 = i + 1;
      var G__15274 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__15273;
      out = G__15274;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15275 = o;
      if (G__15275) {
        var bit__4424__auto__ = G__15275.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4424__auto__ || G__15275.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15275.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15275);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__15275);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__15276 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15276) : cljs.core.key.call(null, G__15276);
      }(), function() {
        var G__15277 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15277) : cljs.core.val.call(null, G__15277);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15280 = cljs.core.next(es);
          var G__15281 = tcoll__$1.assoc_BANG_(function() {
            var G__15278 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15278) : cljs.core.key.call(null, G__15278);
          }(), function() {
            var G__15279 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15279) : cljs.core.val.call(null, G__15279);
          }());
          es = G__15280;
          tcoll__$1 = G__15281;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15282 = ascending_QMARK_ ? t.left : t.right;
      var G__15283 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__15282;
      stack__$1 = G__15283;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__15296 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15296) : cljs.core.deref.call(null, G__15296);
  } else {
    var init__$2 = function() {
      var G__15297 = init__$1;
      var G__15298 = node.key;
      var G__15299 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15297, G__15298, G__15299) : f.call(null, G__15297, G__15298, G__15299);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__15300 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15300) : cljs.core.deref.call(null, G__15300);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__15301 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15301) : cljs.core.deref.call(null, G__15301);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15303 = null;
  var G__15303__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15303__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15303 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15303__2.call(this, self__, k);
      case 3:
        return G__15303__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15303.cljs$core$IFn$_invoke$arity$2 = G__15303__2;
  G__15303.cljs$core$IFn$_invoke$arity$3 = G__15303__3;
  return G__15303;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15302) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15302)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15305 = null;
  var G__15305__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15305__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15305 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15305__2.call(this, self__, k);
      case 3:
        return G__15305__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15305.cljs$core$IFn$_invoke$arity$2 = G__15305__2;
  G__15305.cljs$core$IFn$_invoke$arity$3 = G__15305__3;
  return G__15305;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15304) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15304)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__15318 = k;
      var G__15319 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15318, G__15319) : comp.call(null, G__15318, G__15319);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__15338 = k;
      var G__15339 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15338, G__15339) : comp.call(null, G__15338, G__15339);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__15350 = k;
    var G__15351 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15350, G__15351) : comp.call(null, G__15350, G__15351);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15353 = cljs.core.seq(coll);
  var chunk__15354 = null;
  var count__15355 = 0;
  var i__15356 = 0;
  while (true) {
    if (i__15356 < count__15355) {
      var vec__15357 = chunk__15354.cljs$core$IIndexed$_nth$arity$2(null, i__15356);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15357, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15357, 1, null);
      var G__15358_15370 = v;
      var G__15359_15371 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15358_15370, G__15359_15371) : f.call(null, G__15358_15370, G__15359_15371);
      var G__15372 = seq__15353;
      var G__15373 = chunk__15354;
      var G__15374 = count__15355;
      var G__15375 = i__15356 + 1;
      seq__15353 = G__15372;
      chunk__15354 = G__15373;
      count__15355 = G__15374;
      i__15356 = G__15375;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15353);
      if (temp__4126__auto__) {
        var seq__15353__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15353__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15353__$1);
          var G__15376 = cljs.core.chunk_rest(seq__15353__$1);
          var G__15377 = c__4530__auto__;
          var G__15378 = cljs.core.count(c__4530__auto__);
          var G__15379 = 0;
          seq__15353 = G__15376;
          chunk__15354 = G__15377;
          count__15355 = G__15378;
          i__15356 = G__15379;
          continue;
        } else {
          var vec__15360 = cljs.core.first(seq__15353__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15360, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15360, 1, null);
          var G__15361_15380 = v;
          var G__15362_15381 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15361_15380, G__15362_15381) : f.call(null, G__15361_15380, G__15362_15381);
          var G__15382 = cljs.core.next(seq__15353__$1);
          var G__15383 = null;
          var G__15384 = 0;
          var G__15385 = 0;
          seq__15353 = G__15382;
          chunk__15354 = G__15383;
          count__15355 = G__15384;
          i__15356 = G__15385;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15363 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15363) : cljs.core.keys.call(null, G__15363);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__15364 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15364) : cljs.core.vals.call(null, G__15364);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__15365 = k;
        var G__15366 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15365, G__15366) : self__.comp.call(null, G__15365, G__15366);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15386 = t.left;
          t = G__15386;
          continue;
        } else {
          var G__15387 = t.right;
          t = G__15387;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__15388 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__15389 = cljs.core.next(es);
          ret = G__15388;
          es = G__15389;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15390 = null;
  var G__15390__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15390__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15390 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15390__2.call(this, self__, k);
      case 3:
        return G__15390__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15390.cljs$core$IFn$_invoke$arity$2 = G__15390__2;
  G__15390.cljs$core$IFn$_invoke$arity$3 = G__15390__3;
  return G__15390;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15352) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15352)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__15367 = k;
          var G__15368 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15367, G__15368) : self__.comp.call(null, G__15367, G__15368);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15391 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15392 = t.left;
              stack = G__15391;
              t = G__15392;
              continue;
            } else {
              var G__15393 = stack;
              var G__15394 = t.right;
              stack = G__15393;
              t = G__15394;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15395 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__15396 = t.right;
              stack = G__15395;
              t = G__15396;
              continue;
            } else {
              var G__15397 = stack;
              var G__15398 = t.left;
              stack = G__15397;
              t = G__15398;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__15369 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15369) : cljs.core.key.call(null, G__15369);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15399 = cljs.core.nnext(in$);
        var G__15400 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15399;
        out = G__15400;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15401__i = 0, G__15401__a = new Array(arguments.length - 0);
      while (G__15401__i < G__15401__a.length) {
        G__15401__a[G__15401__i] = arguments[G__15401__i + 0];
        ++G__15401__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15401__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15402) {
    var keyvals = cljs.core.seq(arglist__15402);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15403__i = 0, G__15403__a = new Array(arguments.length - 0);
      while (G__15403__i < G__15403__a.length) {
        G__15403__a[G__15403__i] = arguments[G__15403__i + 0];
        ++G__15403__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15403__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15404) {
    var keyvals = cljs.core.seq(arglist__15404);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15408 = {};
      return obj15408;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__15409 = cljs.core.nnext(kvs);
        kvs = G__15409;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15410__i = 0, G__15410__a = new Array(arguments.length - 0);
      while (G__15410__i < G__15410__a.length) {
        G__15410__a[G__15410__i] = arguments[G__15410__i + 0];
        ++G__15410__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15410__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15411) {
    var keyvals = cljs.core.seq(arglist__15411);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15412 = cljs.core.nnext(in$);
        var G__15413 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15412;
        out = G__15413;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__15414__i = 0, G__15414__a = new Array(arguments.length - 0);
      while (G__15414__i < G__15414__a.length) {
        G__15414__a[G__15414__i] = arguments[G__15414__i + 0];
        ++G__15414__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15414__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15415) {
    var keyvals = cljs.core.seq(arglist__15415);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15416 = cljs.core.nnext(in$);
        var G__15417 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__15416;
        out = G__15417;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__15418__i = 0, G__15418__a = new Array(arguments.length - 1);
      while (G__15418__i < G__15418__a.length) {
        G__15418__a[G__15418__i] = arguments[G__15418__i + 1];
        ++G__15418__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__15418__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15419) {
    var comparator = cljs.core.first(arglist__15419);
    var keyvals = cljs.core.rest(arglist__15419);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15420 = self__.mseq;
    if (G__15420) {
      var bit__4424__auto__ = G__15420.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4424__auto__ || G__15420.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15420.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15420);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15420);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15421 = self__.mseq;
    if (G__15421) {
      var bit__4424__auto__ = G__15421.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4424__auto__ || G__15421.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15421.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15421);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15421);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15422 = self__.mseq;
    if (G__15422) {
      var bit__4424__auto__ = G__15422.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4424__auto__ || G__15422.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15422.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15422);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15422);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15423 = self__.mseq;
    if (G__15423) {
      var bit__4424__auto__ = G__15423.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4424__auto__ || G__15423.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15423.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15423);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__15423);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__15424_SHARP_, p2__15425_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3743__auto__ = p1__15424_SHARP_;
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15425_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__15426__i = 0, G__15426__a = new Array(arguments.length - 0);
      while (G__15426__i < G__15426__a.length) {
        G__15426__a[G__15426__i] = arguments[G__15426__i + 0];
        ++G__15426__i;
      }
      maps = new cljs.core.IndexedSeq(G__15426__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15427) {
    var maps = cljs.core.seq(arglist__15427);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__15430 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__15431 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15430, G__15431) : f.call(null, G__15430, G__15431);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3743__auto__ = m1;
            if (cljs.core.truth_(or__3743__auto__)) {
              return or__3743__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__15432__i = 0, G__15432__a = new Array(arguments.length - 1);
      while (G__15432__i < G__15432__a.length) {
        G__15432__a[G__15432__i] = arguments[G__15432__i + 1];
        ++G__15432__i;
      }
      maps = new cljs.core.IndexedSeq(G__15432__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15433) {
    var f = cljs.core.first(arglist__15433);
    var maps = cljs.core.rest(arglist__15433);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, cljs.core.constant$keyword$14);
      var G__15434 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, cljs.core.constant$keyword$14) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__15435 = cljs.core.next(keys);
      ret = G__15434;
      keys = G__15435;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15438 = cljs.core.seq(coll);
  var chunk__15439 = null;
  var count__15440 = 0;
  var i__15441 = 0;
  while (true) {
    if (i__15441 < count__15440) {
      var vec__15442 = chunk__15439.cljs$core$IIndexed$_nth$arity$2(null, i__15441);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15442, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15442, 1, null);
      var G__15443_15448 = v;
      var G__15444_15449 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15443_15448, G__15444_15449) : f.call(null, G__15443_15448, G__15444_15449);
      var G__15450 = seq__15438;
      var G__15451 = chunk__15439;
      var G__15452 = count__15440;
      var G__15453 = i__15441 + 1;
      seq__15438 = G__15450;
      chunk__15439 = G__15451;
      count__15440 = G__15452;
      i__15441 = G__15453;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15438);
      if (temp__4126__auto__) {
        var seq__15438__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15438__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15438__$1);
          var G__15454 = cljs.core.chunk_rest(seq__15438__$1);
          var G__15455 = c__4530__auto__;
          var G__15456 = cljs.core.count(c__4530__auto__);
          var G__15457 = 0;
          seq__15438 = G__15454;
          chunk__15439 = G__15455;
          count__15440 = G__15456;
          i__15441 = G__15457;
          continue;
        } else {
          var vec__15445 = cljs.core.first(seq__15438__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15445, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15445, 1, null);
          var G__15446_15458 = v;
          var G__15447_15459 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15446_15458, G__15447_15459) : f.call(null, G__15446_15458, G__15447_15459);
          var G__15460 = cljs.core.next(seq__15438__$1);
          var G__15461 = null;
          var G__15462 = 0;
          var G__15463 = 0;
          seq__15438 = G__15460;
          chunk__15439 = G__15461;
          count__15440 = G__15462;
          i__15441 = G__15463;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15436_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15436_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15464 = null;
  var G__15464__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15464__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15464 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15464__2.call(this, self__, k);
      case 3:
        return G__15464__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15464.cljs$core$IFn$_invoke$arity$2 = G__15464__2;
  G__15464.cljs$core$IFn$_invoke$arity$3 = G__15464__3;
  return G__15464;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15437) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15437)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15465 = i + 1;
        var G__15466 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__15465;
        out = G__15466;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15467 = i + 1;
        var G__15468 = cljs.core._conj_BANG_(out, items[i]);
        i = G__15467;
        out = G__15468;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15470 = null;
  var G__15470__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15470__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15470 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15470__2.call(this, self__, k);
      case 3:
        return G__15470__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15470.cljs$core$IFn$_invoke$arity$2 = G__15470__2;
  G__15470.cljs$core$IFn$_invoke$arity$3 = G__15470__3;
  return G__15470;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15469) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15469)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15473 = cljs.core.seq(coll);
  var chunk__15474 = null;
  var count__15475 = 0;
  var i__15476 = 0;
  while (true) {
    if (i__15476 < count__15475) {
      var vec__15477 = chunk__15474.cljs$core$IIndexed$_nth$arity$2(null, i__15476);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15477, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15477, 1, null);
      var G__15478_15483 = v;
      var G__15479_15484 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15478_15483, G__15479_15484) : f.call(null, G__15478_15483, G__15479_15484);
      var G__15485 = seq__15473;
      var G__15486 = chunk__15474;
      var G__15487 = count__15475;
      var G__15488 = i__15476 + 1;
      seq__15473 = G__15485;
      chunk__15474 = G__15486;
      count__15475 = G__15487;
      i__15476 = G__15488;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15473);
      if (temp__4126__auto__) {
        var seq__15473__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15473__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15473__$1);
          var G__15489 = cljs.core.chunk_rest(seq__15473__$1);
          var G__15490 = c__4530__auto__;
          var G__15491 = cljs.core.count(c__4530__auto__);
          var G__15492 = 0;
          seq__15473 = G__15489;
          chunk__15474 = G__15490;
          count__15475 = G__15491;
          i__15476 = G__15492;
          continue;
        } else {
          var vec__15480 = cljs.core.first(seq__15473__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15480, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15480, 1, null);
          var G__15481_15493 = v;
          var G__15482_15494 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15481_15493, G__15482_15494) : f.call(null, G__15481_15493, G__15482_15494);
          var G__15495 = cljs.core.next(seq__15473__$1);
          var G__15496 = null;
          var G__15497 = 0;
          var G__15498 = 0;
          seq__15473 = G__15495;
          chunk__15474 = G__15496;
          count__15475 = G__15497;
          i__15476 = G__15498;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__15471_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__15471_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15499 = null;
  var G__15499__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15499__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15499 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15499__2.call(this, self__, k);
      case 3:
        return G__15499__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15499.cljs$core$IFn$_invoke$arity$2 = G__15499__2;
  G__15499.cljs$core$IFn$_invoke$arity$3 = G__15499__3;
  return G__15499;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15472) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15472)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4624__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4624__auto__.length) {
        var G__15500 = i + 1;
        var G__15501 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__15500;
        res = G__15501;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15502 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__15503 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__15502;
          out = G__15503;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15504__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__15504 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__15505__i = 0, G__15505__a = new Array(arguments.length - 0);
        while (G__15505__i < G__15505__a.length) {
          G__15505__a[G__15505__i] = arguments[G__15505__i + 0];
          ++G__15505__i;
        }
        keys = new cljs.core.IndexedSeq(G__15505__a, 0);
      }
      return G__15504__delegate.call(this, keys);
    };
    G__15504.cljs$lang$maxFixedArity = 0;
    G__15504.cljs$lang$applyTo = function(arglist__15506) {
      var keys = cljs.core.seq(arglist__15506);
      return G__15504__delegate(keys);
    };
    G__15504.cljs$core$IFn$_invoke$arity$variadic = G__15504__delegate;
    return G__15504;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__15507 = null;
        if (arguments.length > 0) {
          var G__15508__i = 0, G__15508__a = new Array(arguments.length - 0);
          while (G__15508__i < G__15508__a.length) {
            G__15508__a[G__15508__i] = arguments[G__15508__i + 0];
            ++G__15508__i;
          }
          G__15507 = new cljs.core.IndexedSeq(G__15508__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15507);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__15509__i = 0, G__15509__a = new Array(arguments.length - 0);
      while (G__15509__i < G__15509__a.length) {
        G__15509__a[G__15509__i] = arguments[G__15509__i + 0];
        ++G__15509__i;
      }
      keys = new cljs.core.IndexedSeq(G__15509__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15510) {
    var keys = cljs.core.seq(arglist__15510);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__15511__i = 0, G__15511__a = new Array(arguments.length - 1);
      while (G__15511__i < G__15511__a.length) {
        G__15511__a[G__15511__i] = arguments[G__15511__i + 1];
        ++G__15511__i;
      }
      keys = new cljs.core.IndexedSeq(G__15511__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15512) {
    var comparator = cljs.core.first(arglist__15512);
    var keys = cljs.core.rest(arglist__15512);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__15513_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__15513_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__15513_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15514_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__15514_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__15514_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15525, seen__$1) {
        while (true) {
          var vec__15526 = p__15525;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15526, 0, null);
          var xs__$1 = vec__15526;
          var temp__4126__auto__ = cljs.core.seq(xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__15527 = cljs.core.rest(s);
              var G__15528 = seen__$1;
              p__15525 = G__15527;
              seen__$1 = G__15528;
              continue;
            } else {
              return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__15529 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__15530 = cljs.core.next(s__$1);
      ret = G__15529;
      s__$1 = G__15530;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15532 = x;
    if (G__15532) {
      var bit__4417__auto__ = G__15532.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4417__auto__ || G__15532.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__15533 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__15534 = cljs.core.next(ks);
      var G__15535 = cljs.core.next(vs);
      map = G__15533;
      ks = G__15534;
      vs = G__15535;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__15546 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15546) : k.call(null, G__15546);
    }() > function() {
      var G__15547 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15547) : k.call(null, G__15547);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15548__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15536_SHARP_, p2__15537_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__15536_SHARP_, p2__15537_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15548 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15549__i = 0, G__15549__a = new Array(arguments.length - 3);
        while (G__15549__i < G__15549__a.length) {
          G__15549__a[G__15549__i] = arguments[G__15549__i + 3];
          ++G__15549__i;
        }
        more = new cljs.core.IndexedSeq(G__15549__a, 0);
      }
      return G__15548__delegate.call(this, k, x, y, more);
    };
    G__15548.cljs$lang$maxFixedArity = 3;
    G__15548.cljs$lang$applyTo = function(arglist__15550) {
      var k = cljs.core.first(arglist__15550);
      arglist__15550 = cljs.core.next(arglist__15550);
      var x = cljs.core.first(arglist__15550);
      arglist__15550 = cljs.core.next(arglist__15550);
      var y = cljs.core.first(arglist__15550);
      var more = cljs.core.rest(arglist__15550);
      return G__15548__delegate(k, x, y, more);
    };
    G__15548.cljs$core$IFn$_invoke$arity$variadic = G__15548__delegate;
    return G__15548;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__15551 = null;
        if (arguments.length > 3) {
          var G__15552__i = 0, G__15552__a = new Array(arguments.length - 3);
          while (G__15552__i < G__15552__a.length) {
            G__15552__a[G__15552__i] = arguments[G__15552__i + 3];
            ++G__15552__i;
          }
          G__15551 = new cljs.core.IndexedSeq(G__15552__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15551);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__15563 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15563) : k.call(null, G__15563);
    }() < function() {
      var G__15564 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15564) : k.call(null, G__15564);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15565__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15553_SHARP_, p2__15554_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__15553_SHARP_, p2__15554_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__15565 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__15566__i = 0, G__15566__a = new Array(arguments.length - 3);
        while (G__15566__i < G__15566__a.length) {
          G__15566__a[G__15566__i] = arguments[G__15566__i + 3];
          ++G__15566__i;
        }
        more = new cljs.core.IndexedSeq(G__15566__a, 0);
      }
      return G__15565__delegate.call(this, k, x, y, more);
    };
    G__15565.cljs$lang$maxFixedArity = 3;
    G__15565.cljs$lang$applyTo = function(arglist__15567) {
      var k = cljs.core.first(arglist__15567);
      arglist__15567 = cljs.core.next(arglist__15567);
      var x = cljs.core.first(arglist__15567);
      arglist__15567 = cljs.core.next(arglist__15567);
      var y = cljs.core.first(arglist__15567);
      var more = cljs.core.rest(arglist__15567);
      return G__15565__delegate(k, x, y, more);
    };
    G__15565.cljs$core$IFn$_invoke$arity$variadic = G__15565__delegate;
    return G__15565;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__15568 = null;
        if (arguments.length > 3) {
          var G__15569__i = 0, G__15569__a = new Array(arguments.length - 3);
          while (G__15569__i < G__15569__a.length) {
            G__15569__a[G__15569__i] = arguments[G__15569__i + 3];
            ++G__15569__i;
          }
          G__15568 = new cljs.core.IndexedSeq(G__15569__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__15568);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__15586 = null;
          var G__15586__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15586__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15581 = result;
                var G__15582 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15581, G__15582) : rf.call(null, G__15581, G__15582);
              }());
            }();
            var G__15583 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15583) : rf.call(null, G__15583);
          };
          var G__15586__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__15584 = result;
              var G__15585 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15584, G__15585) : rf.call(null, G__15584, G__15585);
            } else {
              return result;
            }
          };
          G__15586 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15586__0.call(this);
              case 1:
                return G__15586__1.call(this, result);
              case 2:
                return G__15586__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15586.cljs$core$IFn$_invoke$arity$0 = G__15586__0;
          G__15586.cljs$core$IFn$_invoke$arity$1 = G__15586__1;
          G__15586.cljs$core$IFn$_invoke$arity$2 = G__15586__2;
          return G__15586;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15599 = null;
        var G__15599__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15599__1 = function(result) {
          var G__15594 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15594) : rf.call(null, G__15594);
        };
        var G__15599__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15595 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15595) : pred.call(null, G__15595);
          }())) {
            var G__15596 = result;
            var G__15597 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15596, G__15597) : rf.call(null, G__15596, G__15597);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__15599 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15599__0.call(this);
            case 1:
              return G__15599__1.call(this, result);
            case 2:
              return G__15599__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15599.cljs$core$IFn$_invoke$arity$0 = G__15599__0;
        G__15599.cljs$core$IFn$_invoke$arity$1 = G__15599__1;
        G__15599.cljs$core$IFn$_invoke$arity$2 = G__15599__2;
        return G__15599;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__15598 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15598) : pred.call(null, G__15598);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__15604 = function() {
      var G__15606 = cljs.core._entry_key(sc, e);
      var G__15607 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15606, G__15607) : comp.call(null, G__15606, G__15607);
    }();
    var G__15605 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15604, G__15605) : test.call(null, G__15604, G__15605);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15611 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15611, 0, null);
        var s = vec__15611;
        if (cljs.core.truth_(function() {
          var G__15612 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15612) : include.call(null, G__15612);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15613 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15613, 0, null);
      var s = vec__15613;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15617 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15617, 0, null);
        var s = vec__15617;
        if (cljs.core.truth_(function() {
          var G__15618 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15618) : include.call(null, G__15618);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15619 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15619, 0, null);
      var s = vec__15619;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__15620 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15620) : Math.ceil.call(null, G__15620);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4164__auto__ = self__.__hash;
  if (!(h__4164__auto__ == null)) {
    return h__4164__auto__;
  } else {
    var h__4164__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4164__auto____$1;
    return h__4164__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__15621 = ret;
        var G__15622 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15621, G__15622) : f.call(null, G__15621, G__15622);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__15623 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15623) : cljs.core.deref.call(null, G__15623);
      } else {
        var G__15624 = i + self__.step;
        var G__15625 = ret__$1;
        i = G__15624;
        ret = G__15625;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__15643 = null;
          var G__15643__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15643__1 = function(result) {
            var G__15640 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15640) : rf.call(null, G__15640);
          };
          var G__15643__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__15641 = result;
              var G__15642 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15641, G__15642) : rf.call(null, G__15641, G__15642);
            } else {
              return result;
            }
          };
          G__15643 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15643__0.call(this);
              case 1:
                return G__15643__1.call(this, result);
              case 2:
                return G__15643__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15643.cljs$core$IFn$_invoke$arity$0 = G__15643__0;
          G__15643.cljs$core$IFn$_invoke$arity$1 = G__15643__1;
          G__15643.cljs$core$IFn$_invoke$arity$2 = G__15643__2;
          return G__15643;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
      return function(a, pa) {
        return function() {
          var G__15665 = null;
          var G__15665__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15665__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__15656 = result;
                var G__15657 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15656, G__15657) : rf.call(null, G__15656, G__15657);
              }());
            }();
            var G__15658 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15658) : rf.call(null, G__15658);
          };
          var G__15665__2 = function(result, input) {
            var pval = function() {
              var G__15659 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15659) : cljs.core.deref.call(null, G__15659);
            }();
            var val = function() {
              var G__15660 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15660) : f.call(null, G__15660);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, cljs.core.constant$keyword$15) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__15661 = result;
                var G__15662 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15661, G__15662) : rf.call(null, G__15661, G__15662);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__15665 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15665__0.call(this);
              case 1:
                return G__15665__1.call(this, result);
              case 2:
                return G__15665__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15665.cljs$core$IFn$_invoke$arity$0 = G__15665__0;
          G__15665.cljs$core$IFn$_invoke$arity$1 = G__15665__1;
          G__15665.cljs$core$IFn$_invoke$arity$2 = G__15665__2;
          return G__15665;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__15663 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15663) : f.call(null, G__15663);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15644_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__15664 = p1__15644_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15664) : f.call(null, G__15664);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__15674 = init;
          var G__15675 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15674, G__15675) : f.call(null, G__15674, G__15675);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15770 = null;
      var G__15770__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__15770__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15728 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15728) : f.call(null, G__15728);
        }()], null);
      };
      var G__15770__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15729 = x;
          var G__15730 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15729, G__15730) : f.call(null, G__15729, G__15730);
        }()], null);
      };
      var G__15770__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15731 = x;
          var G__15732 = y;
          var G__15733 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15731, G__15732, G__15733) : f.call(null, G__15731, G__15732, G__15733);
        }()], null);
      };
      var G__15770__4 = function() {
        var G__15771__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__15771 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15772__i = 0, G__15772__a = new Array(arguments.length - 3);
            while (G__15772__i < G__15772__a.length) {
              G__15772__a[G__15772__i] = arguments[G__15772__i + 3];
              ++G__15772__i;
            }
            args = new cljs.core.IndexedSeq(G__15772__a, 0);
          }
          return G__15771__delegate.call(this, x, y, z, args);
        };
        G__15771.cljs$lang$maxFixedArity = 3;
        G__15771.cljs$lang$applyTo = function(arglist__15773) {
          var x = cljs.core.first(arglist__15773);
          arglist__15773 = cljs.core.next(arglist__15773);
          var y = cljs.core.first(arglist__15773);
          arglist__15773 = cljs.core.next(arglist__15773);
          var z = cljs.core.first(arglist__15773);
          var args = cljs.core.rest(arglist__15773);
          return G__15771__delegate(x, y, z, args);
        };
        G__15771.cljs$core$IFn$_invoke$arity$variadic = G__15771__delegate;
        return G__15771;
      }();
      G__15770 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15770__0.call(this);
          case 1:
            return G__15770__1.call(this, x);
          case 2:
            return G__15770__2.call(this, x, y);
          case 3:
            return G__15770__3.call(this, x, y, z);
          default:
            var G__15774 = null;
            if (arguments.length > 3) {
              var G__15775__i = 0, G__15775__a = new Array(arguments.length - 3);
              while (G__15775__i < G__15775__a.length) {
                G__15775__a[G__15775__i] = arguments[G__15775__i + 3];
                ++G__15775__i;
              }
              G__15774 = new cljs.core.IndexedSeq(G__15775__a, 0);
            }
            return G__15770__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15774);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15770.cljs$lang$maxFixedArity = 3;
      G__15770.cljs$lang$applyTo = G__15770__4.cljs$lang$applyTo;
      G__15770.cljs$core$IFn$_invoke$arity$0 = G__15770__0;
      G__15770.cljs$core$IFn$_invoke$arity$1 = G__15770__1;
      G__15770.cljs$core$IFn$_invoke$arity$2 = G__15770__2;
      G__15770.cljs$core$IFn$_invoke$arity$3 = G__15770__3;
      G__15770.cljs$core$IFn$_invoke$arity$variadic = G__15770__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15770;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15776 = null;
      var G__15776__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__15776__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15734 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15734) : f.call(null, G__15734);
        }(), function() {
          var G__15735 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15735) : g.call(null, G__15735);
        }()], null);
      };
      var G__15776__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15736 = x;
          var G__15737 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15736, G__15737) : f.call(null, G__15736, G__15737);
        }(), function() {
          var G__15738 = x;
          var G__15739 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15738, G__15739) : g.call(null, G__15738, G__15739);
        }()], null);
      };
      var G__15776__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15740 = x;
          var G__15741 = y;
          var G__15742 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15740, G__15741, G__15742) : f.call(null, G__15740, G__15741, G__15742);
        }(), function() {
          var G__15743 = x;
          var G__15744 = y;
          var G__15745 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15743, G__15744, G__15745) : g.call(null, G__15743, G__15744, G__15745);
        }()], null);
      };
      var G__15776__4 = function() {
        var G__15777__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__15777 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15778__i = 0, G__15778__a = new Array(arguments.length - 3);
            while (G__15778__i < G__15778__a.length) {
              G__15778__a[G__15778__i] = arguments[G__15778__i + 3];
              ++G__15778__i;
            }
            args = new cljs.core.IndexedSeq(G__15778__a, 0);
          }
          return G__15777__delegate.call(this, x, y, z, args);
        };
        G__15777.cljs$lang$maxFixedArity = 3;
        G__15777.cljs$lang$applyTo = function(arglist__15779) {
          var x = cljs.core.first(arglist__15779);
          arglist__15779 = cljs.core.next(arglist__15779);
          var y = cljs.core.first(arglist__15779);
          arglist__15779 = cljs.core.next(arglist__15779);
          var z = cljs.core.first(arglist__15779);
          var args = cljs.core.rest(arglist__15779);
          return G__15777__delegate(x, y, z, args);
        };
        G__15777.cljs$core$IFn$_invoke$arity$variadic = G__15777__delegate;
        return G__15777;
      }();
      G__15776 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15776__0.call(this);
          case 1:
            return G__15776__1.call(this, x);
          case 2:
            return G__15776__2.call(this, x, y);
          case 3:
            return G__15776__3.call(this, x, y, z);
          default:
            var G__15780 = null;
            if (arguments.length > 3) {
              var G__15781__i = 0, G__15781__a = new Array(arguments.length - 3);
              while (G__15781__i < G__15781__a.length) {
                G__15781__a[G__15781__i] = arguments[G__15781__i + 3];
                ++G__15781__i;
              }
              G__15780 = new cljs.core.IndexedSeq(G__15781__a, 0);
            }
            return G__15776__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15780);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15776.cljs$lang$maxFixedArity = 3;
      G__15776.cljs$lang$applyTo = G__15776__4.cljs$lang$applyTo;
      G__15776.cljs$core$IFn$_invoke$arity$0 = G__15776__0;
      G__15776.cljs$core$IFn$_invoke$arity$1 = G__15776__1;
      G__15776.cljs$core$IFn$_invoke$arity$2 = G__15776__2;
      G__15776.cljs$core$IFn$_invoke$arity$3 = G__15776__3;
      G__15776.cljs$core$IFn$_invoke$arity$variadic = G__15776__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15776;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15782 = null;
      var G__15782__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__15782__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15746 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15746) : f.call(null, G__15746);
        }(), function() {
          var G__15747 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15747) : g.call(null, G__15747);
        }(), function() {
          var G__15748 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15748) : h.call(null, G__15748);
        }()], null);
      };
      var G__15782__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15749 = x;
          var G__15750 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15749, G__15750) : f.call(null, G__15749, G__15750);
        }(), function() {
          var G__15751 = x;
          var G__15752 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15751, G__15752) : g.call(null, G__15751, G__15752);
        }(), function() {
          var G__15753 = x;
          var G__15754 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15753, G__15754) : h.call(null, G__15753, G__15754);
        }()], null);
      };
      var G__15782__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__15755 = x;
          var G__15756 = y;
          var G__15757 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15755, G__15756, G__15757) : f.call(null, G__15755, G__15756, G__15757);
        }(), function() {
          var G__15758 = x;
          var G__15759 = y;
          var G__15760 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15758, G__15759, G__15760) : g.call(null, G__15758, G__15759, G__15760);
        }(), function() {
          var G__15761 = x;
          var G__15762 = y;
          var G__15763 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15761, G__15762, G__15763) : h.call(null, G__15761, G__15762, G__15763);
        }()], null);
      };
      var G__15782__4 = function() {
        var G__15783__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__15783 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15784__i = 0, G__15784__a = new Array(arguments.length - 3);
            while (G__15784__i < G__15784__a.length) {
              G__15784__a[G__15784__i] = arguments[G__15784__i + 3];
              ++G__15784__i;
            }
            args = new cljs.core.IndexedSeq(G__15784__a, 0);
          }
          return G__15783__delegate.call(this, x, y, z, args);
        };
        G__15783.cljs$lang$maxFixedArity = 3;
        G__15783.cljs$lang$applyTo = function(arglist__15785) {
          var x = cljs.core.first(arglist__15785);
          arglist__15785 = cljs.core.next(arglist__15785);
          var y = cljs.core.first(arglist__15785);
          arglist__15785 = cljs.core.next(arglist__15785);
          var z = cljs.core.first(arglist__15785);
          var args = cljs.core.rest(arglist__15785);
          return G__15783__delegate(x, y, z, args);
        };
        G__15783.cljs$core$IFn$_invoke$arity$variadic = G__15783__delegate;
        return G__15783;
      }();
      G__15782 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15782__0.call(this);
          case 1:
            return G__15782__1.call(this, x);
          case 2:
            return G__15782__2.call(this, x, y);
          case 3:
            return G__15782__3.call(this, x, y, z);
          default:
            var G__15786 = null;
            if (arguments.length > 3) {
              var G__15787__i = 0, G__15787__a = new Array(arguments.length - 3);
              while (G__15787__i < G__15787__a.length) {
                G__15787__a[G__15787__i] = arguments[G__15787__i + 3];
                ++G__15787__i;
              }
              G__15786 = new cljs.core.IndexedSeq(G__15787__a, 0);
            }
            return G__15782__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15786);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15782.cljs$lang$maxFixedArity = 3;
      G__15782.cljs$lang$applyTo = G__15782__4.cljs$lang$applyTo;
      G__15782.cljs$core$IFn$_invoke$arity$0 = G__15782__0;
      G__15782.cljs$core$IFn$_invoke$arity$1 = G__15782__1;
      G__15782.cljs$core$IFn$_invoke$arity$2 = G__15782__2;
      G__15782.cljs$core$IFn$_invoke$arity$3 = G__15782__3;
      G__15782.cljs$core$IFn$_invoke$arity$variadic = G__15782__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15782;
    }();
  };
  var juxt__4 = function() {
    var G__15788__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__15789 = null;
          var G__15789__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15676_SHARP_, p2__15677_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15676_SHARP_, function() {
                  return p2__15677_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15677_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15677_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15789__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15678_SHARP_, p2__15679_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15678_SHARP_, function() {
                  var G__15764 = x;
                  return p2__15679_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15679_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15764) : p2__15679_SHARP_.call(null, G__15764);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15789__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15680_SHARP_, p2__15681_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15680_SHARP_, function() {
                  var G__15765 = x;
                  var G__15766 = y;
                  return p2__15681_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15681_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15765, G__15766) : p2__15681_SHARP_.call(null, G__15765, G__15766);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15789__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__15682_SHARP_, p2__15683_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15682_SHARP_, function() {
                  var G__15767 = x;
                  var G__15768 = y;
                  var G__15769 = z;
                  return p2__15683_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15683_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15767, G__15768, G__15769) : p2__15683_SHARP_.call(null, G__15767, G__15768, G__15769);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15789__4 = function() {
            var G__15790__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__15684_SHARP_, p2__15685_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15684_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15685_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__15790 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__15791__i = 0, G__15791__a = new Array(arguments.length - 3);
                while (G__15791__i < G__15791__a.length) {
                  G__15791__a[G__15791__i] = arguments[G__15791__i + 3];
                  ++G__15791__i;
                }
                args = new cljs.core.IndexedSeq(G__15791__a, 0);
              }
              return G__15790__delegate.call(this, x, y, z, args);
            };
            G__15790.cljs$lang$maxFixedArity = 3;
            G__15790.cljs$lang$applyTo = function(arglist__15792) {
              var x = cljs.core.first(arglist__15792);
              arglist__15792 = cljs.core.next(arglist__15792);
              var y = cljs.core.first(arglist__15792);
              arglist__15792 = cljs.core.next(arglist__15792);
              var z = cljs.core.first(arglist__15792);
              var args = cljs.core.rest(arglist__15792);
              return G__15790__delegate(x, y, z, args);
            };
            G__15790.cljs$core$IFn$_invoke$arity$variadic = G__15790__delegate;
            return G__15790;
          }();
          G__15789 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__15789__0.call(this);
              case 1:
                return G__15789__1.call(this, x);
              case 2:
                return G__15789__2.call(this, x, y);
              case 3:
                return G__15789__3.call(this, x, y, z);
              default:
                var G__15793 = null;
                if (arguments.length > 3) {
                  var G__15794__i = 0, G__15794__a = new Array(arguments.length - 3);
                  while (G__15794__i < G__15794__a.length) {
                    G__15794__a[G__15794__i] = arguments[G__15794__i + 3];
                    ++G__15794__i;
                  }
                  G__15793 = new cljs.core.IndexedSeq(G__15794__a, 0);
                }
                return G__15789__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15793);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15789.cljs$lang$maxFixedArity = 3;
          G__15789.cljs$lang$applyTo = G__15789__4.cljs$lang$applyTo;
          G__15789.cljs$core$IFn$_invoke$arity$0 = G__15789__0;
          G__15789.cljs$core$IFn$_invoke$arity$1 = G__15789__1;
          G__15789.cljs$core$IFn$_invoke$arity$2 = G__15789__2;
          G__15789.cljs$core$IFn$_invoke$arity$3 = G__15789__3;
          G__15789.cljs$core$IFn$_invoke$arity$variadic = G__15789__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__15789;
        }();
      }(fs__$1);
    };
    var G__15788 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__15795__i = 0, G__15795__a = new Array(arguments.length - 3);
        while (G__15795__i < G__15795__a.length) {
          G__15795__a[G__15795__i] = arguments[G__15795__i + 3];
          ++G__15795__i;
        }
        fs = new cljs.core.IndexedSeq(G__15795__a, 0);
      }
      return G__15788__delegate.call(this, f, g, h, fs);
    };
    G__15788.cljs$lang$maxFixedArity = 3;
    G__15788.cljs$lang$applyTo = function(arglist__15796) {
      var f = cljs.core.first(arglist__15796);
      arglist__15796 = cljs.core.next(arglist__15796);
      var g = cljs.core.first(arglist__15796);
      arglist__15796 = cljs.core.next(arglist__15796);
      var h = cljs.core.first(arglist__15796);
      var fs = cljs.core.rest(arglist__15796);
      return G__15788__delegate(f, g, h, fs);
    };
    G__15788.cljs$core$IFn$_invoke$arity$variadic = G__15788__delegate;
    return G__15788;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__15797 = null;
        if (arguments.length > 3) {
          var G__15798__i = 0, G__15798__a = new Array(arguments.length - 3);
          while (G__15798__i < G__15798__a.length) {
            G__15798__a[G__15798__i] = arguments[G__15798__i + 3];
            ++G__15798__i;
          }
          G__15797 = new cljs.core.IndexedSeq(G__15798__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__15797);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__15799 = cljs.core.next(coll);
        coll = G__15799;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__15800 = n - 1;
        var G__15801 = cljs.core.next(coll);
        n = G__15800;
        coll = G__15801;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__15805 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15805, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15805, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15805, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15813 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__15814_15820 = cljs.core.first(coll);
        var G__15815_15821 = writer;
        var G__15816_15822 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15814_15820, G__15815_15821, G__15816_15822) : print_one.call(null, G__15814_15820, G__15815_15821, G__15816_15822);
      } else {
      }
      var coll_15823__$1 = cljs.core.next(coll);
      var n_15824 = cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_15823__$1 && (n_15824 == null || !(n_15824 === 0))) {
          cljs.core._write(writer, sep);
          var G__15817_15825 = cljs.core.first(coll_15823__$1);
          var G__15818_15826 = writer;
          var G__15819_15827 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15817_15825, G__15818_15826, G__15819_15827) : print_one.call(null, G__15817_15825, G__15818_15826, G__15819_15827);
          var G__15828 = cljs.core.next(coll_15823__$1);
          var G__15829 = n_15824 - 1;
          coll_15823__$1 = G__15828;
          n_15824 = G__15829;
          continue;
        } else {
          if (cljs.core.seq(coll_15823__$1) && n_15824 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15813;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15834 = cljs.core.seq(ss);
    var chunk__15835 = null;
    var count__15836 = 0;
    var i__15837 = 0;
    while (true) {
      if (i__15837 < count__15836) {
        var s = chunk__15835.cljs$core$IIndexed$_nth$arity$2(null, i__15837);
        cljs.core._write(writer, s);
        var G__15838 = seq__15834;
        var G__15839 = chunk__15835;
        var G__15840 = count__15836;
        var G__15841 = i__15837 + 1;
        seq__15834 = G__15838;
        chunk__15835 = G__15839;
        count__15836 = G__15840;
        i__15837 = G__15841;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__15834);
        if (temp__4126__auto__) {
          var seq__15834__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15834__$1)) {
            var c__4530__auto__ = cljs.core.chunk_first(seq__15834__$1);
            var G__15842 = cljs.core.chunk_rest(seq__15834__$1);
            var G__15843 = c__4530__auto__;
            var G__15844 = cljs.core.count(c__4530__auto__);
            var G__15845 = 0;
            seq__15834 = G__15842;
            chunk__15835 = G__15843;
            count__15836 = G__15844;
            i__15837 = G__15845;
            continue;
          } else {
            var s = cljs.core.first(seq__15834__$1);
            cljs.core._write(writer, s);
            var G__15846 = cljs.core.next(seq__15834__$1);
            var G__15847 = null;
            var G__15848 = 0;
            var G__15849 = 0;
            seq__15834 = G__15846;
            chunk__15835 = G__15847;
            count__15836 = G__15848;
            i__15837 = G__15849;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__15850__i = 0, G__15850__a = new Array(arguments.length - 1);
      while (G__15850__i < G__15850__a.length) {
        G__15850__a[G__15850__i] = arguments[G__15850__i + 1];
        ++G__15850__i;
      }
      ss = new cljs.core.IndexedSeq(G__15850__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15851) {
    var writer = cljs.core.first(arglist__15851);
    var ss = cljs.core.rest(arglist__15851);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15853 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15853;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__15856 = '[\\\\"\b\f\n\r\t]';
    var G__15857 = "g";
    return RegExp(G__15856, G__15857);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3731__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.constant$keyword$3);
        if (cljs.core.truth_(and__3731__auto__)) {
          var and__3731__auto____$1 = function() {
            var G__15871 = obj;
            if (G__15871) {
              var bit__4424__auto__ = G__15871.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4424__auto__ || G__15871.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__15871.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15871);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15871);
            }
          }();
          if (and__3731__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3731__auto____$1;
          }
        } else {
          return and__3731__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__15872 = obj;
            if (G__15872) {
              var bit__4417__auto__ = G__15872.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4417__auto__ || G__15872.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__15873 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__15874 = pr_writer;
                var G__15875 = writer;
                var G__15876 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15873, G__15874, G__15875, G__15876) : cljs.core.print_map.call(null, G__15873, G__15874, G__15875, G__15876);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__15877 = obj;
                    return goog.isString(G__15877);
                  }())) {
                    if (cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__15879 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__15879;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__15878 = obj;
                            if (G__15878) {
                              var bit__4424__auto__ = G__15878.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4424__auto__ || G__15878.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__15878.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15878);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15878);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__15884 = cljs.core.seq(cljs.core.next(objs));
  var chunk__15885 = null;
  var count__15886 = 0;
  var i__15887 = 0;
  while (true) {
    if (i__15887 < count__15886) {
      var obj = chunk__15885.cljs$core$IIndexed$_nth$arity$2(null, i__15887);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__15888 = seq__15884;
      var G__15889 = chunk__15885;
      var G__15890 = count__15886;
      var G__15891 = i__15887 + 1;
      seq__15884 = G__15888;
      chunk__15885 = G__15889;
      count__15886 = G__15890;
      i__15887 = G__15891;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15884);
      if (temp__4126__auto__) {
        var seq__15884__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15884__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__15884__$1);
          var G__15892 = cljs.core.chunk_rest(seq__15884__$1);
          var G__15893 = c__4530__auto__;
          var G__15894 = cljs.core.count(c__4530__auto__);
          var G__15895 = 0;
          seq__15884 = G__15892;
          chunk__15885 = G__15893;
          count__15886 = G__15894;
          i__15887 = G__15895;
          continue;
        } else {
          var obj = cljs.core.first(seq__15884__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__15896 = cljs.core.next(seq__15884__$1);
          var G__15897 = null;
          var G__15898 = 0;
          var G__15899 = 0;
          seq__15884 = G__15896;
          chunk__15885 = G__15897;
          count__15886 = G__15898;
          i__15887 = G__15899;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.constant$keyword$1))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15900__i = 0, G__15900__a = new Array(arguments.length - 0);
      while (G__15900__i < G__15900__a.length) {
        G__15900__a[G__15900__i] = arguments[G__15900__i + 0];
        ++G__15900__i;
      }
      objs = new cljs.core.IndexedSeq(G__15900__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15901) {
    var objs = cljs.core.seq(arglist__15901);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15902__i = 0, G__15902__a = new Array(arguments.length - 0);
      while (G__15902__i < G__15902__a.length) {
        G__15902__a[G__15902__i] = arguments[G__15902__i + 0];
        ++G__15902__i;
      }
      objs = new cljs.core.IndexedSeq(G__15902__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15903) {
    var objs = cljs.core.seq(arglist__15903);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15904__i = 0, G__15904__a = new Array(arguments.length - 0);
      while (G__15904__i < G__15904__a.length) {
        G__15904__a[G__15904__i] = arguments[G__15904__i + 0];
        ++G__15904__i;
      }
      objs = new cljs.core.IndexedSeq(G__15904__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15905) {
    var objs = cljs.core.seq(arglist__15905);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs.core.constant$keyword$2, false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15906__i = 0, G__15906__a = new Array(arguments.length - 0);
      while (G__15906__i < G__15906__a.length) {
        G__15906__a[G__15906__i] = arguments[G__15906__i + 0];
        ++G__15906__i;
      }
      objs = new cljs.core.IndexedSeq(G__15906__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15907) {
    var objs = cljs.core.seq(arglist__15907);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs.core.constant$keyword$2, false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15908__i = 0, G__15908__a = new Array(arguments.length - 0);
      while (G__15908__i < G__15908__a.length) {
        G__15908__a[G__15908__i] = arguments[G__15908__i + 0];
        ++G__15908__i;
      }
      objs = new cljs.core.IndexedSeq(G__15908__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15909) {
    var objs = cljs.core.seq(arglist__15909);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs.core.constant$keyword$2, false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15910__i = 0, G__15910__a = new Array(arguments.length - 0);
      while (G__15910__i < G__15910__a.length) {
        G__15910__a[G__15910__i] = arguments[G__15910__i + 0];
        ++G__15910__i;
      }
      objs = new cljs.core.IndexedSeq(G__15910__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15911) {
    var objs = cljs.core.seq(arglist__15911);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), cljs.core.constant$keyword$2, false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15912__i = 0, G__15912__a = new Array(arguments.length - 0);
      while (G__15912__i < G__15912__a.length) {
        G__15912__a[G__15912__i] = arguments[G__15912__i + 0];
        ++G__15912__i;
      }
      objs = new cljs.core.IndexedSeq(G__15912__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15913) {
    var objs = cljs.core.seq(arglist__15913);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15914__i = 0, G__15914__a = new Array(arguments.length - 0);
      while (G__15914__i < G__15914__a.length) {
        G__15914__a[G__15914__i] = arguments[G__15914__i + 0];
        ++G__15914__i;
      }
      objs = new cljs.core.IndexedSeq(G__15914__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15915) {
    var objs = cljs.core.seq(arglist__15915);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__15922_15928 = cljs.core.key(e);
    var G__15923_15929 = w;
    var G__15924_15930 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15922_15928, G__15923_15929, G__15924_15930) : print_one.call(null, G__15922_15928, G__15923_15929, G__15924_15930);
    cljs.core._write(w, " ");
    var G__15925 = cljs.core.val(e);
    var G__15926 = w;
    var G__15927 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15925, G__15926, G__15927) : print_one.call(null, G__15925, G__15926, G__15927);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__15931__i = 0, G__15931__a = new Array(arguments.length - 2);
      while (G__15931__i < G__15931__a.length) {
        G__15931__a[G__15931__i] = arguments[G__15931__i + 2];
        ++G__15931__i;
      }
      args = new cljs.core.IndexedSeq(G__15931__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15932) {
    var iref = cljs.core.first(arglist__15932);
    arglist__15932 = cljs.core.next(arglist__15932);
    var f = cljs.core.first(arglist__15932);
    var args = cljs.core.rest(arglist__15932);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__15935 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15935) : cljs.core.atom.call(null, G__15935);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__15937 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15937) : cljs.core.deref.call(null, G__15937);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__15938_SHARP_, p2__15939_SHARP_) {
    var ret = function() {
      var G__15942 = p1__15938_SHARP_;
      var G__15943 = p2__15939_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15942, G__15943) : rf.call(null, G__15942, G__15943);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__15946 = null;
      var G__15946__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15946__1 = function(result) {
        var G__15945 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15945) : rf.call(null, G__15945);
      };
      var G__15946__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__15946 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15946__0.call(this);
          case 1:
            return G__15946__1.call(this, result);
          case 2:
            return G__15946__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15946.cljs$core$IFn$_invoke$arity$0 = G__15946__0;
      G__15946.cljs$core$IFn$_invoke$arity$1 = G__15946__1;
      G__15946.cljs$core$IFn$_invoke$arity$2 = G__15946__2;
      return G__15946;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
      return function(pa) {
        return function() {
          var G__15955 = null;
          var G__15955__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15955__1 = function(result) {
            var G__15951 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15951) : rf.call(null, G__15951);
          };
          var G__15955__2 = function(result, input) {
            var prior = function() {
              var G__15952 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15952) : cljs.core.deref.call(null, G__15952);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__15953 = result;
              var G__15954 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15953, G__15954) : rf.call(null, G__15953, G__15954);
            }
          };
          G__15955 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15955__0.call(this);
              case 1:
                return G__15955__1.call(this, result);
              case 2:
                return G__15955__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15955.cljs$core$IFn$_invoke$arity$0 = G__15955__0;
          G__15955.cljs$core$IFn$_invoke$arity$1 = G__15955__1;
          G__15955.cljs$core$IFn$_invoke$arity$2 = G__15955__2;
          return G__15955;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4721__auto__ = this;
  return cljs.core.es6_iterator(this__4721__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15957_SHARP_, p2__15956_SHARP_) {
    var G__15959 = p2__15956_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15959) : proc.call(null, G__15959);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj15961 = {};
  return obj15961;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._clj__GT_js[function() {
        var G__15965 = x__4387__auto__;
        return goog.typeOf(G__15965);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._key__GT_js[function() {
        var G__15969 = x__4387__auto__;
        return goog.typeOf(G__15969);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__15972 = k;
    if (G__15972) {
      var bit__4424__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3743__auto__ = bit__4424__auto__;
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          return G__15972.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__15972.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15972);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15972);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__15973 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15973) : cljs.core.clj__GT_js.call(null, G__15973);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__15989 = x;
      if (G__15989) {
        var bit__4424__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3743__auto__ = bit__4424__auto__;
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return G__15989.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__15989.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15989);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15989);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj15991 = {};
              return obj15991;
            }();
            var seq__15992_16002 = cljs.core.seq(x);
            var chunk__15993_16003 = null;
            var count__15994_16004 = 0;
            var i__15995_16005 = 0;
            while (true) {
              if (i__15995_16005 < count__15994_16004) {
                var vec__15996_16006 = chunk__15993_16003.cljs$core$IIndexed$_nth$arity$2(null, i__15995_16005);
                var k_16007 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15996_16006, 0, null);
                var v_16008 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15996_16006, 1, null);
                m[cljs.core.key__GT_js(k_16007)] = clj__GT_js(v_16008);
                var G__16009 = seq__15992_16002;
                var G__16010 = chunk__15993_16003;
                var G__16011 = count__15994_16004;
                var G__16012 = i__15995_16005 + 1;
                seq__15992_16002 = G__16009;
                chunk__15993_16003 = G__16010;
                count__15994_16004 = G__16011;
                i__15995_16005 = G__16012;
                continue;
              } else {
                var temp__4126__auto___16013 = cljs.core.seq(seq__15992_16002);
                if (temp__4126__auto___16013) {
                  var seq__15992_16014__$1 = temp__4126__auto___16013;
                  if (cljs.core.chunked_seq_QMARK_(seq__15992_16014__$1)) {
                    var c__4530__auto___16015 = cljs.core.chunk_first(seq__15992_16014__$1);
                    var G__16016 = cljs.core.chunk_rest(seq__15992_16014__$1);
                    var G__16017 = c__4530__auto___16015;
                    var G__16018 = cljs.core.count(c__4530__auto___16015);
                    var G__16019 = 0;
                    seq__15992_16002 = G__16016;
                    chunk__15993_16003 = G__16017;
                    count__15994_16004 = G__16018;
                    i__15995_16005 = G__16019;
                    continue;
                  } else {
                    var vec__15997_16020 = cljs.core.first(seq__15992_16014__$1);
                    var k_16021 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15997_16020, 0, null);
                    var v_16022 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15997_16020, 1, null);
                    m[cljs.core.key__GT_js(k_16021)] = clj__GT_js(v_16022);
                    var G__16023 = cljs.core.next(seq__15992_16014__$1);
                    var G__16024 = null;
                    var G__16025 = 0;
                    var G__16026 = 0;
                    seq__15992_16002 = G__16023;
                    chunk__15993_16003 = G__16024;
                    count__15994_16004 = G__16025;
                    i__15995_16005 = G__16026;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__15998_16027 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__15999_16028 = null;
              var count__16000_16029 = 0;
              var i__16001_16030 = 0;
              while (true) {
                if (i__16001_16030 < count__16000_16029) {
                  var x_16031__$1 = chunk__15999_16028.cljs$core$IIndexed$_nth$arity$2(null, i__16001_16030);
                  arr.push(x_16031__$1);
                  var G__16032 = seq__15998_16027;
                  var G__16033 = chunk__15999_16028;
                  var G__16034 = count__16000_16029;
                  var G__16035 = i__16001_16030 + 1;
                  seq__15998_16027 = G__16032;
                  chunk__15999_16028 = G__16033;
                  count__16000_16029 = G__16034;
                  i__16001_16030 = G__16035;
                  continue;
                } else {
                  var temp__4126__auto___16036 = cljs.core.seq(seq__15998_16027);
                  if (temp__4126__auto___16036) {
                    var seq__15998_16037__$1 = temp__4126__auto___16036;
                    if (cljs.core.chunked_seq_QMARK_(seq__15998_16037__$1)) {
                      var c__4530__auto___16038 = cljs.core.chunk_first(seq__15998_16037__$1);
                      var G__16039 = cljs.core.chunk_rest(seq__15998_16037__$1);
                      var G__16040 = c__4530__auto___16038;
                      var G__16041 = cljs.core.count(c__4530__auto___16038);
                      var G__16042 = 0;
                      seq__15998_16027 = G__16039;
                      chunk__15999_16028 = G__16040;
                      count__16000_16029 = G__16041;
                      i__16001_16030 = G__16042;
                      continue;
                    } else {
                      var x_16043__$1 = cljs.core.first(seq__15998_16037__$1);
                      arr.push(x_16043__$1);
                      var G__16044 = cljs.core.next(seq__15998_16037__$1);
                      var G__16045 = null;
                      var G__16046 = 0;
                      var G__16047 = 0;
                      seq__15998_16027 = G__16044;
                      chunk__15999_16028 = G__16045;
                      count__16000_16029 = G__16046;
                      i__16001_16030 = G__16047;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj16049 = {};
  return obj16049;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3731__auto__ = x;
    if (and__3731__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4387__auto__ = x == null ? null : x;
    return function() {
      var or__3743__auto__ = cljs.core._js__GT_clj[function() {
        var G__16053 = x__4387__auto__;
        return goog.typeOf(G__16053);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16, false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__16110__delegate = function(x, opts) {
      var map__16083 = opts;
      var map__16083__$1 = cljs.core.seq_QMARK_(map__16083) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__16083) : map__16083;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16083__$1, cljs.core.constant$keyword$16);
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__16083, map__16083__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__16099 = x__$1;
            if (G__16099) {
              var bit__4424__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3743__auto__ = bit__4424__auto__;
                if (cljs.core.truth_(or__3743__auto__)) {
                  return or__3743__auto__;
                } else {
                  return G__16099.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__16099.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16099);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__16099);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4499__auto__ = function(map__16083, map__16083__$1, keywordize_keys, keyfn) {
                        return function iter__16100(s__16101) {
                          return new cljs.core.LazySeq(null, function(map__16083, map__16083__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__16101__$1 = s__16101;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__16101__$1);
                                if (temp__4126__auto__) {
                                  var s__16101__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__16101__$2)) {
                                    var c__4497__auto__ = cljs.core.chunk_first(s__16101__$2);
                                    var size__4498__auto__ = cljs.core.count(c__4497__auto__);
                                    var b__16103 = cljs.core.chunk_buffer(size__4498__auto__);
                                    if (function() {
                                      var i__16102 = 0;
                                      while (true) {
                                        if (i__16102 < size__4498__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4497__auto__, i__16102);
                                          cljs.core.chunk_append(b__16103, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__16108 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16108) : keyfn.call(null, G__16108);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__16111 = i__16102 + 1;
                                          i__16102 = G__16111;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16103), iter__16100(cljs.core.chunk_rest(s__16101__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__16103), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__16101__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__16109 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16109) : keyfn.call(null, G__16109);
                                    }(), thisfn(x__$1[k])], null), iter__16100(cljs.core.rest(s__16101__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__16083, map__16083__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__16083, map__16083__$1, keywordize_keys, keyfn);
                      return iter__4499__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__16083, map__16083__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__16110 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__16112__i = 0, G__16112__a = new Array(arguments.length - 1);
        while (G__16112__i < G__16112__a.length) {
          G__16112__a[G__16112__i] = arguments[G__16112__i + 1];
          ++G__16112__i;
        }
        opts = new cljs.core.IndexedSeq(G__16112__a, 0);
      }
      return G__16110__delegate.call(this, x, opts);
    };
    G__16110.cljs$lang$maxFixedArity = 1;
    G__16110.cljs$lang$applyTo = function(arglist__16113) {
      var x = cljs.core.first(arglist__16113);
      var opts = cljs.core.rest(arglist__16113);
      return G__16110__delegate(x, opts);
    };
    G__16110.cljs$core$IFn$_invoke$arity$variadic = G__16110__delegate;
    return G__16110;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__16114 = null;
        if (arguments.length > 1) {
          var G__16115__i = 0, G__16115__a = new Array(arguments.length - 1);
          while (G__16115__i < G__16115__a.length) {
            G__16115__a[G__16115__i] = arguments[G__16115__i + 1];
            ++G__16115__i;
          }
          G__16114 = new cljs.core.IndexedSeq(G__16115__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16114);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__16118 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16118) : cljs.core.atom.call(null, G__16118);
  }();
  return function(mem) {
    return function() {
      var G__16120__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16119 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16119) : cljs.core.deref.call(null, G__16119);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16120 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__16121__i = 0, G__16121__a = new Array(arguments.length - 0);
          while (G__16121__i < G__16121__a.length) {
            G__16121__a[G__16121__i] = arguments[G__16121__i + 0];
            ++G__16121__i;
          }
          args = new cljs.core.IndexedSeq(G__16121__a, 0);
        }
        return G__16120__delegate.call(this, args);
      };
      G__16120.cljs$lang$maxFixedArity = 0;
      G__16120.cljs$lang$applyTo = function(arglist__16122) {
        var args = cljs.core.seq(arglist__16122);
        return G__16120__delegate(args);
      };
      G__16120.cljs$core$IFn$_invoke$arity$variadic = G__16120__delegate;
      return G__16120;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__16124 = ret;
        f = G__16124;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__16125__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__16125 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__16126__i = 0, G__16126__a = new Array(arguments.length - 1);
        while (G__16126__i < G__16126__a.length) {
          G__16126__a[G__16126__i] = arguments[G__16126__i + 1];
          ++G__16126__i;
        }
        args = new cljs.core.IndexedSeq(G__16126__a, 0);
      }
      return G__16125__delegate.call(this, f, args);
    };
    G__16125.cljs$lang$maxFixedArity = 1;
    G__16125.cljs$lang$applyTo = function(arglist__16127) {
      var f = cljs.core.first(arglist__16127);
      var args = cljs.core.rest(arglist__16127);
      return G__16125__delegate(f, args);
    };
    G__16125.cljs$core$IFn$_invoke$arity$variadic = G__16125__delegate;
    return G__16125;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__16128 = null;
        if (arguments.length > 1) {
          var G__16129__i = 0, G__16129__a = new Array(arguments.length - 1);
          while (G__16129__i < G__16129__a.length) {
            G__16129__a[G__16129__i] = arguments[G__16129__i + 1];
            ++G__16129__i;
          }
          G__16128 = new cljs.core.IndexedSeq(G__16129__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16128);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__16132 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16132) : Math.floor.call(null, G__16132);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__16134 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16134) : f.call(null, G__16134);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17, cljs.core.PersistentArrayMap.EMPTY, cljs.core.constant$keyword$18, cljs.core.PersistentArrayMap.EMPTY, cljs.core.constant$keyword$19, cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__16136 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16136) : cljs.core.atom.call(null, G__16136);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__16137__i = 0, G__16137__a = new Array(arguments.length - 1);
      while (G__16137__i < G__16137__a.length) {
        G__16137__a[G__16137__i] = arguments[G__16137__i + 1];
        ++G__16137__i;
      }
      args = new cljs.core.IndexedSeq(G__16137__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16138) {
    var f = cljs.core.first(arglist__16138);
    var args = cljs.core.rest(arglist__16138);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16203 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16203) : cljs.core.deref.call(null, G__16203);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3743__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3743__auto__) {
      return or__3743__auto__;
    } else {
      var or__3743__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3743__auto____$1) {
        return or__3743__auto____$1;
      } else {
        var and__3731__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3731__auto__) {
          var and__3731__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3731__auto____$1) {
            var and__3731__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3731__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__16228 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__16226 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16226) : child.call(null, G__16226);
                  }(), function() {
                    var G__16227 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16227) : parent.call(null, G__16227);
                  }());
                  var G__16229 = i + 1;
                  ret = G__16228;
                  i = G__16229;
                  continue;
                }
                break;
              }
            } else {
              return and__3731__auto____$2;
            }
          } else {
            return and__3731__auto____$1;
          }
        } else {
          return and__3731__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16233 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16233) : cljs.core.deref.call(null, G__16233);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16237 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16237) : cljs.core.deref.call(null, G__16237);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16241 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16241) : cljs.core.deref.call(null, G__16241);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
    var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
    var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__16250 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16250) : targets.call(null, G__16250);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__16251 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16251) : sources.call(null, G__16251);
        }()));
      };
    }(tp, td, ta);
    var or__3743__auto__ = cljs.core.contains_QMARK_(function() {
      var G__16255 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16255) : tp.call(null, G__16255);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__16256 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16256) : ta.call(null, G__16256);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__16257 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16257) : ta.call(null, G__16257);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), cljs.core.constant$keyword$19, tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), cljs.core.constant$keyword$18, tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h), 
      parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3743__auto__)) {
      return or__3743__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__16264 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16264) : parentMap.call(null, G__16264);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16265 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16265) : parentMap.call(null, G__16265);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__16258_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__16258_SHARP_), cljs.core.interpose(cljs.core.first(p1__16258_SHARP_), cljs.core.second(p1__16258_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__16266 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16266) : parentMap.call(null, G__16266);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16259_SHARP_, p2__16260_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__16259_SHARP_, p2__16260_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__16269 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16269) : cljs.core.deref.call(null, G__16269);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__16270 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16270) : cljs.core.deref.call(null, G__16270);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__16286 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16286) : cljs.core.deref.call(null, G__16286);
  }().call(null, x);
  var or__3743__auto__ = cljs.core.truth_(function() {
    var and__3731__auto__ = xprefs;
    if (cljs.core.truth_(and__3731__auto__)) {
      var G__16288 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16288) : xprefs.call(null, G__16288);
    } else {
      return and__3731__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    var or__3743__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__16289 = cljs.core.rest(ps);
          ps = G__16289;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3743__auto____$1)) {
      return or__3743__auto____$1;
    } else {
      var or__3743__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__16290 = cljs.core.rest(ps);
            ps = G__16290;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3743__auto____$2)) {
        return or__3743__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3743__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__16304) {
    var vec__16305 = p__16304;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16305, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16305, 1, null);
    var e = vec__16305;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__16306 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16306) : cljs.core.deref.call(null, G__16306);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3743__auto__ = be == null;
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__16307 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16307) : cljs.core.deref.call(null, G__16307);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__16308 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16308) : cljs.core.deref.call(null, G__16308);
    }(), function() {
      var G__16309 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16309) : cljs.core.deref.call(null, G__16309);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16311 = {};
  return obj16311;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._reset[function() {
        var G__16315 = x__4387__auto__;
        return goog.typeOf(G__16315);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._reset["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._add_method[function() {
        var G__16319 = x__4387__auto__;
        return goog.typeOf(G__16319);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._add_method["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._remove_method[function() {
        var G__16323 = x__4387__auto__;
        return goog.typeOf(G__16323);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._remove_method["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._prefer_method[function() {
        var G__16327 = x__4387__auto__;
        return goog.typeOf(G__16327);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._get_method[function() {
        var G__16331 = x__4387__auto__;
        return goog.typeOf(G__16331);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._get_method["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._methods[function() {
        var G__16335 = x__4387__auto__;
        return goog.typeOf(G__16335);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._methods["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3731__auto__ = mf;
    if (and__3731__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4387__auto__ = mf == null ? null : mf;
    return function() {
      var or__3743__auto__ = cljs.core._prefers[function() {
        var G__16339 = x__4387__auto__;
        return goog.typeOf(G__16339);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.core._prefers["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16341 = this$__$1;
  return goog.getUid(G__16341);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16342 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16342) : cljs.core.deref.call(null, G__16342);
  }(), function() {
    var G__16343 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16343) : cljs.core.deref.call(null, G__16343);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__16344 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16344) : cljs.core.deref.call(null, G__16344);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__16345 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16345) : cljs.core.deref.call(null, G__16345);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16346 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16346) : cljs.core.deref.call(null, G__16346);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__16347 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16347) : cljs.core.deref.call(null, G__16347);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__17188 = null;
  var G__17188__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__17188__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16348 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16348) : self__.dispatch_fn.call(null, G__16348);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16349 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16349) : target_fn.call(null, G__16349);
  };
  var G__17188__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16350 = a;
      var G__16351 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16350, G__16351) : self__.dispatch_fn.call(null, G__16350, G__16351);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16352 = a;
    var G__16353 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16352, G__16353) : target_fn.call(null, G__16352, G__16353);
  };
  var G__17188__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16354 = a;
      var G__16355 = b;
      var G__16356 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16354, G__16355, G__16356) : self__.dispatch_fn.call(null, G__16354, G__16355, G__16356);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16357 = a;
    var G__16358 = b;
    var G__16359 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16357, G__16358, G__16359) : target_fn.call(null, G__16357, G__16358, G__16359);
  };
  var G__17188__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16360 = a;
      var G__16361 = b;
      var G__16362 = c;
      var G__16363 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16360, G__16361, G__16362, G__16363) : self__.dispatch_fn.call(null, G__16360, G__16361, G__16362, G__16363);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16364 = a;
    var G__16365 = b;
    var G__16366 = c;
    var G__16367 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16364, G__16365, G__16366, G__16367) : target_fn.call(null, G__16364, G__16365, G__16366, G__16367);
  };
  var G__17188__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16368 = a;
      var G__16369 = b;
      var G__16370 = c;
      var G__16371 = d;
      var G__16372 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16368, G__16369, G__16370, G__16371, G__16372) : self__.dispatch_fn.call(null, G__16368, G__16369, G__16370, G__16371, G__16372);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16373 = a;
    var G__16374 = b;
    var G__16375 = c;
    var G__16376 = d;
    var G__16377 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16373, G__16374, G__16375, G__16376, G__16377) : target_fn.call(null, G__16373, G__16374, G__16375, G__16376, G__16377);
  };
  var G__17188__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16378 = a;
      var G__16379 = b;
      var G__16380 = c;
      var G__16381 = d;
      var G__16382 = e;
      var G__16383 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16378, G__16379, G__16380, G__16381, G__16382, G__16383) : self__.dispatch_fn.call(null, G__16378, G__16379, G__16380, G__16381, G__16382, G__16383);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16384 = a;
    var G__16385 = b;
    var G__16386 = c;
    var G__16387 = d;
    var G__16388 = e;
    var G__16389 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16384, G__16385, G__16386, G__16387, G__16388, G__16389) : target_fn.call(null, G__16384, G__16385, G__16386, G__16387, G__16388, G__16389);
  };
  var G__17188__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16390 = a;
      var G__16391 = b;
      var G__16392 = c;
      var G__16393 = d;
      var G__16394 = e;
      var G__16395 = f;
      var G__16396 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16390, G__16391, G__16392, G__16393, G__16394, G__16395, G__16396) : self__.dispatch_fn.call(null, G__16390, G__16391, G__16392, G__16393, G__16394, G__16395, G__16396);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16397 = a;
    var G__16398 = b;
    var G__16399 = c;
    var G__16400 = d;
    var G__16401 = e;
    var G__16402 = f;
    var G__16403 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403) : target_fn.call(null, G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403);
  };
  var G__17188__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16404 = a;
      var G__16405 = b;
      var G__16406 = c;
      var G__16407 = d;
      var G__16408 = e;
      var G__16409 = f;
      var G__16410 = g;
      var G__16411 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16404, G__16405, G__16406, G__16407, G__16408, G__16409, G__16410, G__16411) : self__.dispatch_fn.call(null, G__16404, G__16405, G__16406, G__16407, G__16408, G__16409, G__16410, G__16411);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16412 = a;
    var G__16413 = b;
    var G__16414 = c;
    var G__16415 = d;
    var G__16416 = e;
    var G__16417 = f;
    var G__16418 = g;
    var G__16419 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16412, G__16413, G__16414, G__16415, G__16416, G__16417, G__16418, G__16419) : target_fn.call(null, G__16412, G__16413, G__16414, G__16415, G__16416, G__16417, G__16418, G__16419);
  };
  var G__17188__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16420 = a;
      var G__16421 = b;
      var G__16422 = c;
      var G__16423 = d;
      var G__16424 = e;
      var G__16425 = f;
      var G__16426 = g;
      var G__16427 = h;
      var G__16428 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16420, G__16421, G__16422, G__16423, G__16424, G__16425, G__16426, G__16427, G__16428) : self__.dispatch_fn.call(null, G__16420, G__16421, G__16422, G__16423, G__16424, G__16425, G__16426, G__16427, G__16428);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16429 = a;
    var G__16430 = b;
    var G__16431 = c;
    var G__16432 = d;
    var G__16433 = e;
    var G__16434 = f;
    var G__16435 = g;
    var G__16436 = h;
    var G__16437 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16429, G__16430, G__16431, G__16432, G__16433, G__16434, G__16435, G__16436, G__16437) : target_fn.call(null, G__16429, G__16430, G__16431, G__16432, G__16433, G__16434, G__16435, G__16436, G__16437);
  };
  var G__17188__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16438 = a;
      var G__16439 = b;
      var G__16440 = c;
      var G__16441 = d;
      var G__16442 = e;
      var G__16443 = f;
      var G__16444 = g;
      var G__16445 = h;
      var G__16446 = i;
      var G__16447 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16438, G__16439, G__16440, G__16441, G__16442, G__16443, G__16444, G__16445, G__16446, G__16447) : self__.dispatch_fn.call(null, G__16438, G__16439, G__16440, G__16441, G__16442, G__16443, G__16444, G__16445, G__16446, G__16447);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16448 = a;
    var G__16449 = b;
    var G__16450 = c;
    var G__16451 = d;
    var G__16452 = e;
    var G__16453 = f;
    var G__16454 = g;
    var G__16455 = h;
    var G__16456 = i;
    var G__16457 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16448, G__16449, G__16450, G__16451, G__16452, G__16453, G__16454, G__16455, G__16456, G__16457) : target_fn.call(null, G__16448, G__16449, G__16450, G__16451, G__16452, G__16453, G__16454, G__16455, G__16456, G__16457);
  };
  var G__17188__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16458 = a;
      var G__16459 = b;
      var G__16460 = c;
      var G__16461 = d;
      var G__16462 = e;
      var G__16463 = f;
      var G__16464 = g;
      var G__16465 = h;
      var G__16466 = i;
      var G__16467 = j;
      var G__16468 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16458, G__16459, G__16460, G__16461, G__16462, G__16463, G__16464, G__16465, G__16466, G__16467, G__16468) : self__.dispatch_fn.call(null, G__16458, G__16459, G__16460, G__16461, G__16462, G__16463, G__16464, G__16465, G__16466, G__16467, G__16468);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16469 = a;
    var G__16470 = b;
    var G__16471 = c;
    var G__16472 = d;
    var G__16473 = e;
    var G__16474 = f;
    var G__16475 = g;
    var G__16476 = h;
    var G__16477 = i;
    var G__16478 = j;
    var G__16479 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16469, G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476, G__16477, G__16478, G__16479) : target_fn.call(null, G__16469, G__16470, G__16471, G__16472, G__16473, G__16474, G__16475, G__16476, G__16477, G__16478, G__16479);
  };
  var G__17188__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16480 = a;
      var G__16481 = b;
      var G__16482 = c;
      var G__16483 = d;
      var G__16484 = e;
      var G__16485 = f;
      var G__16486 = g;
      var G__16487 = h;
      var G__16488 = i;
      var G__16489 = j;
      var G__16490 = k;
      var G__16491 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16480, G__16481, G__16482, G__16483, G__16484, G__16485, G__16486, G__16487, G__16488, G__16489, G__16490, G__16491) : self__.dispatch_fn.call(null, G__16480, G__16481, G__16482, G__16483, G__16484, G__16485, G__16486, G__16487, G__16488, G__16489, G__16490, G__16491);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16492 = a;
    var G__16493 = b;
    var G__16494 = c;
    var G__16495 = d;
    var G__16496 = e;
    var G__16497 = f;
    var G__16498 = g;
    var G__16499 = h;
    var G__16500 = i;
    var G__16501 = j;
    var G__16502 = k;
    var G__16503 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16492, G__16493, G__16494, G__16495, G__16496, G__16497, G__16498, G__16499, G__16500, G__16501, G__16502, G__16503) : target_fn.call(null, G__16492, G__16493, G__16494, G__16495, G__16496, G__16497, G__16498, G__16499, G__16500, G__16501, G__16502, G__16503);
  };
  var G__17188__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16504 = a;
      var G__16505 = b;
      var G__16506 = c;
      var G__16507 = d;
      var G__16508 = e;
      var G__16509 = f;
      var G__16510 = g;
      var G__16511 = h;
      var G__16512 = i;
      var G__16513 = j;
      var G__16514 = k;
      var G__16515 = l;
      var G__16516 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16504, G__16505, G__16506, G__16507, G__16508, G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516) : self__.dispatch_fn.call(null, G__16504, G__16505, G__16506, G__16507, G__16508, G__16509, G__16510, G__16511, G__16512, G__16513, G__16514, G__16515, G__16516);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16517 = a;
    var G__16518 = b;
    var G__16519 = c;
    var G__16520 = d;
    var G__16521 = e;
    var G__16522 = f;
    var G__16523 = g;
    var G__16524 = h;
    var G__16525 = i;
    var G__16526 = j;
    var G__16527 = k;
    var G__16528 = l;
    var G__16529 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16517, G__16518, G__16519, G__16520, G__16521, G__16522, G__16523, G__16524, G__16525, G__16526, G__16527, G__16528, G__16529) : target_fn.call(null, G__16517, G__16518, G__16519, G__16520, G__16521, G__16522, G__16523, G__16524, G__16525, G__16526, G__16527, G__16528, G__16529);
  };
  var G__17188__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16530 = a;
      var G__16531 = b;
      var G__16532 = c;
      var G__16533 = d;
      var G__16534 = e;
      var G__16535 = f;
      var G__16536 = g;
      var G__16537 = h;
      var G__16538 = i;
      var G__16539 = j;
      var G__16540 = k;
      var G__16541 = l;
      var G__16542 = m;
      var G__16543 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16530, G__16531, G__16532, G__16533, G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, G__16540, G__16541, G__16542, G__16543) : self__.dispatch_fn.call(null, G__16530, G__16531, G__16532, G__16533, G__16534, G__16535, G__16536, G__16537, G__16538, G__16539, G__16540, G__16541, G__16542, G__16543);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16544 = a;
    var G__16545 = b;
    var G__16546 = c;
    var G__16547 = d;
    var G__16548 = e;
    var G__16549 = f;
    var G__16550 = g;
    var G__16551 = h;
    var G__16552 = i;
    var G__16553 = j;
    var G__16554 = k;
    var G__16555 = l;
    var G__16556 = m;
    var G__16557 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16544, G__16545, G__16546, G__16547, G__16548, G__16549, G__16550, G__16551, G__16552, G__16553, G__16554, G__16555, G__16556, G__16557) : target_fn.call(null, G__16544, G__16545, G__16546, G__16547, G__16548, G__16549, G__16550, G__16551, G__16552, G__16553, G__16554, G__16555, G__16556, G__16557);
  };
  var G__17188__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16558 = a;
      var G__16559 = b;
      var G__16560 = c;
      var G__16561 = d;
      var G__16562 = e;
      var G__16563 = f;
      var G__16564 = g;
      var G__16565 = h;
      var G__16566 = i;
      var G__16567 = j;
      var G__16568 = k;
      var G__16569 = l;
      var G__16570 = m;
      var G__16571 = n;
      var G__16572 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16558, G__16559, G__16560, G__16561, G__16562, G__16563, G__16564, G__16565, G__16566, G__16567, G__16568, G__16569, G__16570, G__16571, G__16572) : self__.dispatch_fn.call(null, G__16558, G__16559, G__16560, G__16561, G__16562, G__16563, G__16564, G__16565, G__16566, G__16567, G__16568, G__16569, G__16570, G__16571, G__16572);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16573 = a;
    var G__16574 = b;
    var G__16575 = c;
    var G__16576 = d;
    var G__16577 = e;
    var G__16578 = f;
    var G__16579 = g;
    var G__16580 = h;
    var G__16581 = i;
    var G__16582 = j;
    var G__16583 = k;
    var G__16584 = l;
    var G__16585 = m;
    var G__16586 = n;
    var G__16587 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16573, G__16574, G__16575, G__16576, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584, G__16585, G__16586, G__16587) : target_fn.call(null, G__16573, G__16574, G__16575, G__16576, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584, G__16585, G__16586, G__16587);
  };
  var G__17188__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16588 = a;
      var G__16589 = b;
      var G__16590 = c;
      var G__16591 = d;
      var G__16592 = e;
      var G__16593 = f;
      var G__16594 = g;
      var G__16595 = h;
      var G__16596 = i;
      var G__16597 = j;
      var G__16598 = k;
      var G__16599 = l;
      var G__16600 = m;
      var G__16601 = n;
      var G__16602 = o;
      var G__16603 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603) : self__.dispatch_fn.call(null, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16604 = a;
    var G__16605 = b;
    var G__16606 = c;
    var G__16607 = d;
    var G__16608 = e;
    var G__16609 = f;
    var G__16610 = g;
    var G__16611 = h;
    var G__16612 = i;
    var G__16613 = j;
    var G__16614 = k;
    var G__16615 = l;
    var G__16616 = m;
    var G__16617 = n;
    var G__16618 = o;
    var G__16619 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16604, G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619) : target_fn.call(null, G__16604, G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619);
  };
  var G__17188__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16620 = a;
      var G__16621 = b;
      var G__16622 = c;
      var G__16623 = d;
      var G__16624 = e;
      var G__16625 = f;
      var G__16626 = g;
      var G__16627 = h;
      var G__16628 = i;
      var G__16629 = j;
      var G__16630 = k;
      var G__16631 = l;
      var G__16632 = m;
      var G__16633 = n;
      var G__16634 = o;
      var G__16635 = p;
      var G__16636 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16620, G__16621, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634, G__16635, G__16636) : self__.dispatch_fn.call(null, G__16620, G__16621, G__16622, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634, G__16635, G__16636);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16637 = a;
    var G__16638 = b;
    var G__16639 = c;
    var G__16640 = d;
    var G__16641 = e;
    var G__16642 = f;
    var G__16643 = g;
    var G__16644 = h;
    var G__16645 = i;
    var G__16646 = j;
    var G__16647 = k;
    var G__16648 = l;
    var G__16649 = m;
    var G__16650 = n;
    var G__16651 = o;
    var G__16652 = p;
    var G__16653 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650, G__16651, G__16652, G__16653) : target_fn.call(null, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650, G__16651, G__16652, G__16653);
  };
  var G__17188__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16654 = a;
      var G__16655 = b;
      var G__16656 = c;
      var G__16657 = d;
      var G__16658 = e;
      var G__16659 = f;
      var G__16660 = g;
      var G__16661 = h;
      var G__16662 = i;
      var G__16663 = j;
      var G__16664 = k;
      var G__16665 = l;
      var G__16666 = m;
      var G__16667 = n;
      var G__16668 = o;
      var G__16669 = p;
      var G__16670 = q;
      var G__16671 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671) : self__.dispatch_fn.call(null, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667, G__16668, G__16669, G__16670, G__16671);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16672 = a;
    var G__16673 = b;
    var G__16674 = c;
    var G__16675 = d;
    var G__16676 = e;
    var G__16677 = f;
    var G__16678 = g;
    var G__16679 = h;
    var G__16680 = i;
    var G__16681 = j;
    var G__16682 = k;
    var G__16683 = l;
    var G__16684 = m;
    var G__16685 = n;
    var G__16686 = o;
    var G__16687 = p;
    var G__16688 = q;
    var G__16689 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689) : target_fn.call(null, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684, G__16685, G__16686, G__16687, G__16688, G__16689);
  };
  var G__17188__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16690 = a;
      var G__16691 = b;
      var G__16692 = c;
      var G__16693 = d;
      var G__16694 = e;
      var G__16695 = f;
      var G__16696 = g;
      var G__16697 = h;
      var G__16698 = i;
      var G__16699 = j;
      var G__16700 = k;
      var G__16701 = l;
      var G__16702 = m;
      var G__16703 = n;
      var G__16704 = o;
      var G__16705 = p;
      var G__16706 = q;
      var G__16707 = r;
      var G__16708 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708) : self__.dispatch_fn.call(null, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702, G__16703, G__16704, G__16705, G__16706, 
      G__16707, G__16708);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16709 = a;
    var G__16710 = b;
    var G__16711 = c;
    var G__16712 = d;
    var G__16713 = e;
    var G__16714 = f;
    var G__16715 = g;
    var G__16716 = h;
    var G__16717 = i;
    var G__16718 = j;
    var G__16719 = k;
    var G__16720 = l;
    var G__16721 = m;
    var G__16722 = n;
    var G__16723 = o;
    var G__16724 = p;
    var G__16725 = q;
    var G__16726 = r;
    var G__16727 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724, G__16725, G__16726, G__16727) : target_fn.call(null, G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721, G__16722, G__16723, G__16724, G__16725, G__16726, G__16727);
  };
  var G__17188__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__16728 = a;
      var G__16729 = b;
      var G__16730 = c;
      var G__16731 = d;
      var G__16732 = e;
      var G__16733 = f;
      var G__16734 = g;
      var G__16735 = h;
      var G__16736 = i;
      var G__16737 = j;
      var G__16738 = k;
      var G__16739 = l;
      var G__16740 = m;
      var G__16741 = n;
      var G__16742 = o;
      var G__16743 = p;
      var G__16744 = q;
      var G__16745 = r;
      var G__16746 = s;
      var G__16747 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747) : self__.dispatch_fn.call(null, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741, G__16742, G__16743, 
      G__16744, G__16745, G__16746, G__16747);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__16748 = a;
    var G__16749 = b;
    var G__16750 = c;
    var G__16751 = d;
    var G__16752 = e;
    var G__16753 = f;
    var G__16754 = g;
    var G__16755 = h;
    var G__16756 = i;
    var G__16757 = j;
    var G__16758 = k;
    var G__16759 = l;
    var G__16760 = m;
    var G__16761 = n;
    var G__16762 = o;
    var G__16763 = p;
    var G__16764 = q;
    var G__16765 = r;
    var G__16766 = s;
    var G__16767 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, G__16767) : target_fn.call(null, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763, G__16764, G__16765, G__16766, 
    G__16767);
  };
  var G__17188__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__17188 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17188__1.call(this, self__);
      case 2:
        return G__17188__2.call(this, self__, a);
      case 3:
        return G__17188__3.call(this, self__, a, b);
      case 4:
        return G__17188__4.call(this, self__, a, b, c);
      case 5:
        return G__17188__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17188__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17188__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17188__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17188__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17188__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17188__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17188__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17188__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17188__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17188__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17188__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17188__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17188__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17188__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17188__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17188__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17188__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17188.cljs$core$IFn$_invoke$arity$1 = G__17188__1;
  G__17188.cljs$core$IFn$_invoke$arity$2 = G__17188__2;
  G__17188.cljs$core$IFn$_invoke$arity$3 = G__17188__3;
  G__17188.cljs$core$IFn$_invoke$arity$4 = G__17188__4;
  G__17188.cljs$core$IFn$_invoke$arity$5 = G__17188__5;
  G__17188.cljs$core$IFn$_invoke$arity$6 = G__17188__6;
  G__17188.cljs$core$IFn$_invoke$arity$7 = G__17188__7;
  G__17188.cljs$core$IFn$_invoke$arity$8 = G__17188__8;
  G__17188.cljs$core$IFn$_invoke$arity$9 = G__17188__9;
  G__17188.cljs$core$IFn$_invoke$arity$10 = G__17188__10;
  G__17188.cljs$core$IFn$_invoke$arity$11 = G__17188__11;
  G__17188.cljs$core$IFn$_invoke$arity$12 = G__17188__12;
  G__17188.cljs$core$IFn$_invoke$arity$13 = G__17188__13;
  G__17188.cljs$core$IFn$_invoke$arity$14 = G__17188__14;
  G__17188.cljs$core$IFn$_invoke$arity$15 = G__17188__15;
  G__17188.cljs$core$IFn$_invoke$arity$16 = G__17188__16;
  G__17188.cljs$core$IFn$_invoke$arity$17 = G__17188__17;
  G__17188.cljs$core$IFn$_invoke$arity$18 = G__17188__18;
  G__17188.cljs$core$IFn$_invoke$arity$19 = G__17188__19;
  G__17188.cljs$core$IFn$_invoke$arity$20 = G__17188__20;
  G__17188.cljs$core$IFn$_invoke$arity$21 = G__17188__21;
  G__17188.cljs$core$IFn$_invoke$arity$22 = G__17188__22;
  return G__17188;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16340) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16340)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16768 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16768) : self__.dispatch_fn.call(null, G__16768);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16769 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16769) : target_fn.call(null, G__16769);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16770 = a;
    var G__16771 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16770, G__16771) : self__.dispatch_fn.call(null, G__16770, G__16771);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16772 = a;
  var G__16773 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16772, G__16773) : target_fn.call(null, G__16772, G__16773);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16774 = a;
    var G__16775 = b;
    var G__16776 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16774, G__16775, G__16776) : self__.dispatch_fn.call(null, G__16774, G__16775, G__16776);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16777 = a;
  var G__16778 = b;
  var G__16779 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16777, G__16778, G__16779) : target_fn.call(null, G__16777, G__16778, G__16779);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16780 = a;
    var G__16781 = b;
    var G__16782 = c;
    var G__16783 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16780, G__16781, G__16782, G__16783) : self__.dispatch_fn.call(null, G__16780, G__16781, G__16782, G__16783);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16784 = a;
  var G__16785 = b;
  var G__16786 = c;
  var G__16787 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16784, G__16785, G__16786, G__16787) : target_fn.call(null, G__16784, G__16785, G__16786, G__16787);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16788 = a;
    var G__16789 = b;
    var G__16790 = c;
    var G__16791 = d;
    var G__16792 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16788, G__16789, G__16790, G__16791, G__16792) : self__.dispatch_fn.call(null, G__16788, G__16789, G__16790, G__16791, G__16792);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16793 = a;
  var G__16794 = b;
  var G__16795 = c;
  var G__16796 = d;
  var G__16797 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16793, G__16794, G__16795, G__16796, G__16797) : target_fn.call(null, G__16793, G__16794, G__16795, G__16796, G__16797);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16798 = a;
    var G__16799 = b;
    var G__16800 = c;
    var G__16801 = d;
    var G__16802 = e;
    var G__16803 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16798, G__16799, G__16800, G__16801, G__16802, G__16803) : self__.dispatch_fn.call(null, G__16798, G__16799, G__16800, G__16801, G__16802, G__16803);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16804 = a;
  var G__16805 = b;
  var G__16806 = c;
  var G__16807 = d;
  var G__16808 = e;
  var G__16809 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16804, G__16805, G__16806, G__16807, G__16808, G__16809) : target_fn.call(null, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16810 = a;
    var G__16811 = b;
    var G__16812 = c;
    var G__16813 = d;
    var G__16814 = e;
    var G__16815 = f;
    var G__16816 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816) : self__.dispatch_fn.call(null, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16817 = a;
  var G__16818 = b;
  var G__16819 = c;
  var G__16820 = d;
  var G__16821 = e;
  var G__16822 = f;
  var G__16823 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823) : target_fn.call(null, G__16817, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16824 = a;
    var G__16825 = b;
    var G__16826 = c;
    var G__16827 = d;
    var G__16828 = e;
    var G__16829 = f;
    var G__16830 = g;
    var G__16831 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831) : self__.dispatch_fn.call(null, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829, G__16830, G__16831);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16832 = a;
  var G__16833 = b;
  var G__16834 = c;
  var G__16835 = d;
  var G__16836 = e;
  var G__16837 = f;
  var G__16838 = g;
  var G__16839 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839) : target_fn.call(null, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16840 = a;
    var G__16841 = b;
    var G__16842 = c;
    var G__16843 = d;
    var G__16844 = e;
    var G__16845 = f;
    var G__16846 = g;
    var G__16847 = h;
    var G__16848 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848) : self__.dispatch_fn.call(null, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16849 = a;
  var G__16850 = b;
  var G__16851 = c;
  var G__16852 = d;
  var G__16853 = e;
  var G__16854 = f;
  var G__16855 = g;
  var G__16856 = h;
  var G__16857 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857) : target_fn.call(null, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16858 = a;
    var G__16859 = b;
    var G__16860 = c;
    var G__16861 = d;
    var G__16862 = e;
    var G__16863 = f;
    var G__16864 = g;
    var G__16865 = h;
    var G__16866 = i;
    var G__16867 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867) : self__.dispatch_fn.call(null, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16868 = a;
  var G__16869 = b;
  var G__16870 = c;
  var G__16871 = d;
  var G__16872 = e;
  var G__16873 = f;
  var G__16874 = g;
  var G__16875 = h;
  var G__16876 = i;
  var G__16877 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877) : target_fn.call(null, G__16868, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16878 = a;
    var G__16879 = b;
    var G__16880 = c;
    var G__16881 = d;
    var G__16882 = e;
    var G__16883 = f;
    var G__16884 = g;
    var G__16885 = h;
    var G__16886 = i;
    var G__16887 = j;
    var G__16888 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888) : self__.dispatch_fn.call(null, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886, G__16887, G__16888);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16889 = a;
  var G__16890 = b;
  var G__16891 = c;
  var G__16892 = d;
  var G__16893 = e;
  var G__16894 = f;
  var G__16895 = g;
  var G__16896 = h;
  var G__16897 = i;
  var G__16898 = j;
  var G__16899 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899) : target_fn.call(null, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16900 = a;
    var G__16901 = b;
    var G__16902 = c;
    var G__16903 = d;
    var G__16904 = e;
    var G__16905 = f;
    var G__16906 = g;
    var G__16907 = h;
    var G__16908 = i;
    var G__16909 = j;
    var G__16910 = k;
    var G__16911 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911) : self__.dispatch_fn.call(null, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16912 = a;
  var G__16913 = b;
  var G__16914 = c;
  var G__16915 = d;
  var G__16916 = e;
  var G__16917 = f;
  var G__16918 = g;
  var G__16919 = h;
  var G__16920 = i;
  var G__16921 = j;
  var G__16922 = k;
  var G__16923 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923) : target_fn.call(null, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16924 = a;
    var G__16925 = b;
    var G__16926 = c;
    var G__16927 = d;
    var G__16928 = e;
    var G__16929 = f;
    var G__16930 = g;
    var G__16931 = h;
    var G__16932 = i;
    var G__16933 = j;
    var G__16934 = k;
    var G__16935 = l;
    var G__16936 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936) : self__.dispatch_fn.call(null, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934, G__16935, G__16936);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16937 = a;
  var G__16938 = b;
  var G__16939 = c;
  var G__16940 = d;
  var G__16941 = e;
  var G__16942 = f;
  var G__16943 = g;
  var G__16944 = h;
  var G__16945 = i;
  var G__16946 = j;
  var G__16947 = k;
  var G__16948 = l;
  var G__16949 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949) : target_fn.call(null, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16950 = a;
    var G__16951 = b;
    var G__16952 = c;
    var G__16953 = d;
    var G__16954 = e;
    var G__16955 = f;
    var G__16956 = g;
    var G__16957 = h;
    var G__16958 = i;
    var G__16959 = j;
    var G__16960 = k;
    var G__16961 = l;
    var G__16962 = m;
    var G__16963 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963) : self__.dispatch_fn.call(null, G__16950, G__16951, G__16952, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16964 = a;
  var G__16965 = b;
  var G__16966 = c;
  var G__16967 = d;
  var G__16968 = e;
  var G__16969 = f;
  var G__16970 = g;
  var G__16971 = h;
  var G__16972 = i;
  var G__16973 = j;
  var G__16974 = k;
  var G__16975 = l;
  var G__16976 = m;
  var G__16977 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977) : target_fn.call(null, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16978 = a;
    var G__16979 = b;
    var G__16980 = c;
    var G__16981 = d;
    var G__16982 = e;
    var G__16983 = f;
    var G__16984 = g;
    var G__16985 = h;
    var G__16986 = i;
    var G__16987 = j;
    var G__16988 = k;
    var G__16989 = l;
    var G__16990 = m;
    var G__16991 = n;
    var G__16992 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992) : self__.dispatch_fn.call(null, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16993 = a;
  var G__16994 = b;
  var G__16995 = c;
  var G__16996 = d;
  var G__16997 = e;
  var G__16998 = f;
  var G__16999 = g;
  var G__17000 = h;
  var G__17001 = i;
  var G__17002 = j;
  var G__17003 = k;
  var G__17004 = l;
  var G__17005 = m;
  var G__17006 = n;
  var G__17007 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16993, G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, G__17007) : target_fn.call(null, G__16993, G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, G__17007);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17008 = a;
    var G__17009 = b;
    var G__17010 = c;
    var G__17011 = d;
    var G__17012 = e;
    var G__17013 = f;
    var G__17014 = g;
    var G__17015 = h;
    var G__17016 = i;
    var G__17017 = j;
    var G__17018 = k;
    var G__17019 = l;
    var G__17020 = m;
    var G__17021 = n;
    var G__17022 = o;
    var G__17023 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014, G__17015, G__17016, G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023) : self__.dispatch_fn.call(null, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013, G__17014, G__17015, G__17016, G__17017, G__17018, G__17019, G__17020, G__17021, G__17022, G__17023);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17024 = a;
  var G__17025 = b;
  var G__17026 = c;
  var G__17027 = d;
  var G__17028 = e;
  var G__17029 = f;
  var G__17030 = g;
  var G__17031 = h;
  var G__17032 = i;
  var G__17033 = j;
  var G__17034 = k;
  var G__17035 = l;
  var G__17036 = m;
  var G__17037 = n;
  var G__17038 = o;
  var G__17039 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17024, G__17025, G__17026, G__17027, G__17028, G__17029, G__17030, G__17031, G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039) : target_fn.call(null, G__17024, G__17025, G__17026, G__17027, G__17028, G__17029, G__17030, G__17031, G__17032, G__17033, G__17034, G__17035, G__17036, G__17037, G__17038, G__17039);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17040 = a;
    var G__17041 = b;
    var G__17042 = c;
    var G__17043 = d;
    var G__17044 = e;
    var G__17045 = f;
    var G__17046 = g;
    var G__17047 = h;
    var G__17048 = i;
    var G__17049 = j;
    var G__17050 = k;
    var G__17051 = l;
    var G__17052 = m;
    var G__17053 = n;
    var G__17054 = o;
    var G__17055 = p;
    var G__17056 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17040, G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054, G__17055, G__17056) : self__.dispatch_fn.call(null, G__17040, G__17041, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049, G__17050, G__17051, G__17052, G__17053, G__17054, G__17055, G__17056);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17057 = a;
  var G__17058 = b;
  var G__17059 = c;
  var G__17060 = d;
  var G__17061 = e;
  var G__17062 = f;
  var G__17063 = g;
  var G__17064 = h;
  var G__17065 = i;
  var G__17066 = j;
  var G__17067 = k;
  var G__17068 = l;
  var G__17069 = m;
  var G__17070 = n;
  var G__17071 = o;
  var G__17072 = p;
  var G__17073 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070, G__17071, G__17072, G__17073) : target_fn.call(null, G__17057, G__17058, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068, G__17069, G__17070, G__17071, G__17072, G__17073);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17074 = a;
    var G__17075 = b;
    var G__17076 = c;
    var G__17077 = d;
    var G__17078 = e;
    var G__17079 = f;
    var G__17080 = g;
    var G__17081 = h;
    var G__17082 = i;
    var G__17083 = j;
    var G__17084 = k;
    var G__17085 = l;
    var G__17086 = m;
    var G__17087 = n;
    var G__17088 = o;
    var G__17089 = p;
    var G__17090 = q;
    var G__17091 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091) : self__.dispatch_fn.call(null, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17092 = a;
  var G__17093 = b;
  var G__17094 = c;
  var G__17095 = d;
  var G__17096 = e;
  var G__17097 = f;
  var G__17098 = g;
  var G__17099 = h;
  var G__17100 = i;
  var G__17101 = j;
  var G__17102 = k;
  var G__17103 = l;
  var G__17104 = m;
  var G__17105 = n;
  var G__17106 = o;
  var G__17107 = p;
  var G__17108 = q;
  var G__17109 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109) : target_fn.call(null, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104, G__17105, G__17106, G__17107, G__17108, G__17109);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17110 = a;
    var G__17111 = b;
    var G__17112 = c;
    var G__17113 = d;
    var G__17114 = e;
    var G__17115 = f;
    var G__17116 = g;
    var G__17117 = h;
    var G__17118 = i;
    var G__17119 = j;
    var G__17120 = k;
    var G__17121 = l;
    var G__17122 = m;
    var G__17123 = n;
    var G__17124 = o;
    var G__17125 = p;
    var G__17126 = q;
    var G__17127 = r;
    var G__17128 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128) : self__.dispatch_fn.call(null, G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118, G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, 
    G__17127, G__17128);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17129 = a;
  var G__17130 = b;
  var G__17131 = c;
  var G__17132 = d;
  var G__17133 = e;
  var G__17134 = f;
  var G__17135 = g;
  var G__17136 = h;
  var G__17137 = i;
  var G__17138 = j;
  var G__17139 = k;
  var G__17140 = l;
  var G__17141 = m;
  var G__17142 = n;
  var G__17143 = o;
  var G__17144 = p;
  var G__17145 = q;
  var G__17146 = r;
  var G__17147 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17129, G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147) : target_fn.call(null, G__17129, G__17130, G__17131, G__17132, G__17133, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17148 = a;
    var G__17149 = b;
    var G__17150 = c;
    var G__17151 = d;
    var G__17152 = e;
    var G__17153 = f;
    var G__17154 = g;
    var G__17155 = h;
    var G__17156 = i;
    var G__17157 = j;
    var G__17158 = k;
    var G__17159 = l;
    var G__17160 = m;
    var G__17161 = n;
    var G__17162 = o;
    var G__17163 = p;
    var G__17164 = q;
    var G__17165 = r;
    var G__17166 = s;
    var G__17167 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166, G__17167) : self__.dispatch_fn.call(null, G__17148, G__17149, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, 
    G__17164, G__17165, G__17166, G__17167);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17168 = a;
  var G__17169 = b;
  var G__17170 = c;
  var G__17171 = d;
  var G__17172 = e;
  var G__17173 = f;
  var G__17174 = g;
  var G__17175 = h;
  var G__17176 = i;
  var G__17177 = j;
  var G__17178 = k;
  var G__17179 = l;
  var G__17180 = m;
  var G__17181 = n;
  var G__17182 = o;
  var G__17183 = p;
  var G__17184 = q;
  var G__17185 = r;
  var G__17186 = s;
  var G__17187 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, G__17187) : target_fn.call(null, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184, G__17185, G__17186, 
  G__17187);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__17189 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__17189);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__17194 = x;
      var G__17195 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17194, G__17195) : pred.call(null, G__17194, G__17195);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__17196 = y;
        var G__17197 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17196, G__17197) : pred.call(null, G__17196, G__17197);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return cljs.core.constant$keyword$20;
  } else {
    return cljs.core.constant$keyword$21;
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(function() {
      var G__19235 = match;
      return goog.string.regExpEscape(G__19235);
    }(), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var G__19236 = sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
        var G__19237 = cljs.core.next(coll__$1);
        sb = G__19236;
        coll__$1 = G__19237;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
        var coll__$2 = cljs.core.next(coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__19238 = sb;
        var G__19239 = coll__$2;
        sb = G__19238;
        coll__$1 = G__19239;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count(s) < 2) {
    return clojure.string.upper_case(s);
  } else {
    return[cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1))), cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", cljs.core.peek(v__$1))) {
      var G__19240 = cljs.core.pop(v__$1);
      v__$1 = G__19240;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, limit)) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__19248 = cljs.core._EQ_;
    var expr__19249 = limit;
    if (cljs.core.truth_(function() {
      var G__19251 = 1;
      var G__19252 = expr__19249;
      return pred__19248.cljs$core$IFn$_invoke$arity$2 ? pred__19248.cljs$core$IFn$_invoke$arity$2(G__19251, G__19252) : pred__19248.call(null, G__19251, G__19252);
    }())) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(function() {
        var G__19253 = 2;
        var G__19254 = expr__19249;
        return pred__19248.cljs$core$IFn$_invoke$arity$2 ? pred__19248.cljs$core$IFn$_invoke$arity$2(G__19253, G__19254) : pred__19248.call(null, G__19253, G__19254);
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed(limit, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2([cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec([cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(limit__$1, 1)) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find(re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__19258 = s__$1.substring(index + cljs.core.count(m));
            var G__19259 = limit__$1 - 1;
            var G__19260 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
            s__$1 = G__19258;
            limit__$1 = G__19259;
            parts = G__19260;
            continue;
          } else {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  var G__19262 = s;
  return goog.string.trim(G__19262);
};
clojure.string.triml = function triml(s) {
  var G__19264 = s;
  return goog.string.trimLeft(G__19264);
};
clojure.string.trimr = function trimr(s) {
  var G__19266 = s;
  return goog.string.trimRight(G__19266);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\n") || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "\r")) {
        var G__19267 = index - 1;
        index = G__19267;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var G__19269 = s;
  return goog.string.isEmptySafe(G__19269);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___19270 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___19270)) {
        var replacement_19271 = temp__4124__auto___19270;
        buffer.append([cljs.core.str(replacement_19271)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__19272 = index + 1;
      index = G__19272;
      continue;
    }
    break;
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj19783 = {};
  return obj19783;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3731__auto__ = reader;
    if (and__3731__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4387__auto__ = reader == null ? null : reader;
    return function() {
      var or__3743__auto__ = cljs.reader.read_char[function() {
        var G__19787 = x__4387__auto__;
        return goog.typeOf(G__19787);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.reader.read_char["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3731__auto__ = reader;
    if (and__3731__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4387__auto__ = reader == null ? null : reader;
    return function() {
      var or__3743__auto__ = cljs.reader.unread[function() {
        var G__19791 = x__4387__auto__;
        return goog.typeOf(G__19791);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.reader.unread["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
  return cljs.core._write(writer__4331__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3743__auto__ = function() {
    var G__19795 = ch;
    return goog.string.isBreakingWhitespace(G__19795);
  }();
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  var G__19797 = ch;
  return goog.string.isNumeric(G__19797);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_(initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_(function() {
    var next_ch = cljs.reader.read_char(reader);
    cljs.reader.unread(reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__19798__i = 0, G__19798__a = new Array(arguments.length - 1);
      while (G__19798__i < G__19798__a.length) {
        G__19798__a[G__19798__i] = arguments[G__19798__i + 1];
        ++G__19798__i;
      }
      msg = new cljs.core.IndexedSeq(G__19798__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__19799) {
    var rdr = cljs.core.first(arglist__19799);
    var msg = cljs.core.rest(arglist__19799);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3731__auto__ = !(ch === "#");
  if (and__3731__auto__) {
    var and__3731__auto____$1 = !(ch === "'");
    if (and__3731__auto____$1) {
      var and__3731__auto____$2 = !(ch === ":");
      if (and__3731__auto____$2) {
        var G__19807 = ch;
        return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(G__19807) : cljs.reader.macros.call(null, G__19807);
      } else {
        return and__3731__auto____$2;
      }
    } else {
      return and__3731__auto____$1;
    }
  } else {
    return and__3731__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_(ch) || cljs.reader.macro_terminating_QMARK_(ch)) {
      cljs.reader.unread(rdr, ch);
      return sb.toString();
    } else {
      var G__19808 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__19809 = cljs.reader.read_char(rdr);
      sb = G__19808;
      ch = G__19809;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern("^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern("^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern("^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern("^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], function() {
      var G__19814 = groups[6];
      var G__19815 = 10;
      return parseInt(G__19814, G__19815);
    }()] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = function() {
        var G__19816 = n;
        var G__19817 = radix;
        return parseInt(G__19816, G__19817);
      }();
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return function() {
    var G__19822 = numinator;
    var G__19823 = 10;
    return parseInt(G__19822, G__19823);
  }() / function() {
    var G__19824 = denominator;
    var G__19825 = 10;
    return parseInt(G__19824, G__19825);
  }();
};
cljs.reader.match_float = function match_float(s) {
  var G__19827 = s;
  return parseFloat(G__19827);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int(s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio(s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float(s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches(unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", escape_char, unicode_str], 0));
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = function() {
    var G__19830 = code_str;
    var G__19831 = 16;
    return parseInt(G__19830, G__19831);
  }();
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char(reader);
  var mapresult = cljs.reader.escape_char_map(ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars(reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars(reader)));
      } else {
        if (cljs.reader.numeric_QMARK_(ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", ch], 0));
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var G__19833 = ch;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19833) : pred.call(null, G__19833);
    }())) {
      var G__19834 = cljs.reader.read_char(rdr);
      ch = G__19834;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past(cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_(a);
    } else {
      var temp__4124__auto__ = function() {
        var G__19842 = ch;
        return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(G__19842) : cljs.reader.macros.call(null, G__19842);
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = function() {
          var G__19843 = rdr;
          var G__19844 = ch;
          return macrofn.cljs$core$IFn$_invoke$arity$2 ? macrofn.cljs$core$IFn$_invoke$arity$2(G__19843, G__19844) : macrofn.call(null, G__19843, G__19844);
        }();
        var G__19849 = mret === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, mret);
        a = G__19849;
        continue;
      } else {
        cljs.reader.unread(rdr, ch);
        var o = function() {
          var G__19845 = rdr;
          var G__19846 = true;
          var G__19847 = null;
          var G__19848 = recursive_QMARK_;
          return cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(G__19845, G__19846, G__19847, G__19848) : cljs.reader.read.call(null, G__19845, G__19846, G__19847, G__19848);
        }();
        var G__19850 = o === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, o);
        a = G__19850;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Reader for ", ch, " not implemented yet"], 0));
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char(rdr);
  var dm = function() {
    var G__19856 = ch;
    return cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(G__19856) : cljs.reader.dispatch_macros.call(null, G__19856);
  }();
  if (cljs.core.truth_(dm)) {
    var G__19857 = rdr;
    var G__19858 = _;
    return dm.cljs$core$IFn$_invoke$arity$2 ? dm.cljs$core$IFn$_invoke$arity$2(G__19857, G__19858) : dm.call(null, G__19857, G__19858);
  } else {
    var temp__4124__auto__ = function() {
      var G__19859 = rdr;
      var G__19860 = ch;
      return cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2(G__19859, G__19860) : cljs.reader.maybe_read_tagged_type.call(null, G__19859, G__19860);
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["No dispatch macro for ", ch], 0));
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unmatched delimiter ", ch], 0));
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, cljs.reader.read_delimited_list(")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list("]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list("}", rdr, true);
  if (cljs.core.odd_QMARK_(cljs.core.count(l))) {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Map literal must contain an even number of forms"], 0));
  } else {
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3743__auto__ = ch == null;
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = cljs.reader.whitespace_QMARK_(ch);
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          var G__19866 = ch;
          return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(G__19866) : cljs.reader.macros.call(null, G__19866);
        }
      }
    }())) {
      cljs.reader.unread(reader, ch);
      var s = buffer.toString();
      var or__3743__auto__ = cljs.reader.match_number(s);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid number format [", s, "]"], 0));
      }
    } else {
      var G__19867 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__19868 = cljs.reader.read_char(reader);
      buffer = G__19867;
      ch = G__19868;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        var G__19869 = function() {
          buffer.append(cljs.reader.escape_char(buffer, reader));
          return buffer;
        }();
        var G__19870 = cljs.reader.read_char(reader);
        buffer = G__19869;
        ch = G__19870;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19871 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__19872 = cljs.reader.read_char(reader);
          buffer = G__19871;
          ch = G__19872;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char(reader);
        if (nch == null) {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
        } else {
          var G__19877 = function() {
            var G__19875 = buffer;
            G__19875.append(nch);
            return G__19875;
          }();
          var G__19878 = cljs.reader.read_char(reader);
          buffer = G__19877;
          ch = G__19878;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19879 = function() {
            var G__19876 = buffer;
            G__19876.append(ch);
            return G__19876;
          }();
          var G__19880 = cljs.reader.read_char(reader);
          buffer = G__19879;
          ch = G__19880;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token(reader, initch);
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = function() {
      var G__19887 = token;
      var G__19888 = "/";
      return goog.string.contains(G__19887, G__19888);
    }();
    if (cljs.core.truth_(and__3731__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3731__auto__;
    }
  }())) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, 0, token.indexOf("/")), cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols(token, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token(reader, cljs.reader.read_char(reader));
  var a = cljs.reader.re_matches_STAR_(cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: ", token__$1], 0));
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$33, f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$33, f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__19893 = rdr;
      var G__19894 = true;
      var G__19895 = null;
      var G__19896 = true;
      return cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(G__19893, G__19894, G__19895, G__19896) : cljs.reader.read.call(null, G__19893, G__19894, G__19895, G__19896);
    }()), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([msg], 0));
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta(function() {
    var G__19906 = rdr;
    var G__19907 = true;
    var G__19908 = null;
    var G__19909 = true;
    return cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(G__19906, G__19907, G__19908, G__19909) : cljs.reader.read.call(null, G__19906, G__19907, G__19908, G__19909);
  }());
  if (cljs.core.map_QMARK_(m)) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol,Keyword,String or Map"], 0));
  }
  var o = function() {
    var G__19910 = rdr;
    var G__19911 = true;
    var G__19912 = null;
    var G__19913 = true;
    return cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(G__19910, G__19911, G__19912, G__19913) : cljs.reader.read.call(null, G__19910, G__19911, G__19912, G__19913);
  }();
  if (function() {
    var G__19914 = o;
    if (G__19914) {
      var bit__4424__auto__ = G__19914.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4424__auto__ || G__19914.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__19914.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__19914);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__19914);
    }
  }()) {
    return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m], 0)));
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IWithMetas"], 0));
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set(cljs.reader.read_delimited_list("}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern(cljs.reader.read_raw_string_STAR_(rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  var G__19919_19923 = rdr;
  var G__19920_19924 = true;
  var G__19921_19925 = null;
  var G__19922_19926 = true;
  cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(G__19919_19923, G__19920_19924, G__19921_19925, G__19922_19926) : cljs.reader.read.call(null, G__19919_19923, G__19920_19924, G__19921_19925, G__19922_19926);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader(new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader("Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_(ch)) {
        var G__19935 = reader;
        var G__19936 = eof_is_error;
        var G__19937 = sentinel;
        var G__19938 = is_recursive;
        reader = G__19935;
        eof_is_error = G__19936;
        sentinel = G__19937;
        is_recursive = G__19938;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_(ch)) {
          var G__19939 = function() {
            var G__19931 = reader;
            var G__19932 = ch;
            return cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2(G__19931, G__19932) : cljs.reader.read_comment.call(null, G__19931, G__19932);
          }();
          var G__19940 = eof_is_error;
          var G__19941 = sentinel;
          var G__19942 = is_recursive;
          reader = G__19939;
          eof_is_error = G__19940;
          sentinel = G__19941;
          is_recursive = G__19942;
          continue;
        } else {
          var f = cljs.reader.macros(ch);
          var res = cljs.core.truth_(f) ? function() {
            var G__19933 = reader;
            var G__19934 = ch;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19933, G__19934) : f.call(null, G__19933, G__19934);
          }() : cljs.reader.number_literal_QMARK_(reader, ch) ? cljs.reader.read_number(reader, ch) : cljs.reader.read_symbol(reader, ch);
          if (res === reader) {
            var G__19943 = reader;
            var G__19944 = eof_is_error;
            var G__19945 = sentinel;
            var G__19946 = is_recursive;
            reader = G__19943;
            eof_is_error = G__19944;
            sentinel = G__19945;
            is_recursive = G__19946;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader(s);
  return cljs.reader.read(r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(width, cljs.core.count(s))) {
    return s;
  } else {
    if (width < cljs.core.count(s)) {
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__19947 = b.append("0");
          b = G__19947;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod(num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_(num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_(year, 4) && (cljs.reader.indivisible_QMARK_(year, 100) || cljs.reader.divisible_QMARK_(year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = function() {
    var G__19951 = s;
    var G__19952 = 10;
    return parseInt(G__19951, G__19952);
  }();
  if (cljs.core.not(function() {
    var G__19953 = n;
    return isNaN(G__19953);
  }())) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join("")], 0));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__19957 = cljs.core.re_matches(cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 0, null);
  var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 1, null);
  var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 2, null);
  var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 3, null);
  var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 4, null);
  var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 5, null);
  var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 6, null);
  var fraction = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 7, null);
  var offset_sign = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 8, null);
  var offset_hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 9, null);
  var offset_minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19957, 10, null);
  var v = vec__19957;
  if (cljs.core.not(v)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join("")], 0));
  } else {
    var years__$1 = cljs.reader.parse_int(years);
    var months__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(months);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(days);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(hours);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(minutes);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(seconds);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(cljs.reader.zero_fill_right_and_truncate(fraction, 3));
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(offset_hours);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3743__auto__ = cljs.reader.parse_int(offset_minutes);
      if (cljs.core.truth_(or__3743__auto__)) {
        return or__3743__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check(1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check(1, days__$1, function() {
      var G__19958 = months__$1;
      var G__19959 = cljs.reader.leap_year_QMARK_(years__$1);
      return cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2(G__19958, G__19959) : cljs.reader.days_in_month.call(null, G__19958, G__19959);
    }(), "timestamp day field must be in range 1..last day in month"), cljs.reader.check(0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check(0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check(0, seconds__$1, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check(0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], 
    null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp(ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__19961 = temp__4124__auto__;
    var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 0, null);
    var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 1, null);
    var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 2, null);
    var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 3, null);
    var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 4, null);
    var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 5, null);
    var ms = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 6, null);
    var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19961, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join("")], 0));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp(s);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Instance literal expects a string for its timestamp."], 0));
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_(elems)) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Queue literal expects a vector for its elements."], 0));
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_(form)) {
    var arr = [];
    var seq__19974_19986 = cljs.core.seq(form);
    var chunk__19975_19987 = null;
    var count__19976_19988 = 0;
    var i__19977_19989 = 0;
    while (true) {
      if (i__19977_19989 < count__19976_19988) {
        var x_19990 = chunk__19975_19987.cljs$core$IIndexed$_nth$arity$2(null, i__19977_19989);
        arr.push(x_19990);
        var G__19991 = seq__19974_19986;
        var G__19992 = chunk__19975_19987;
        var G__19993 = count__19976_19988;
        var G__19994 = i__19977_19989 + 1;
        seq__19974_19986 = G__19991;
        chunk__19975_19987 = G__19992;
        count__19976_19988 = G__19993;
        i__19977_19989 = G__19994;
        continue;
      } else {
        var temp__4126__auto___19995 = cljs.core.seq(seq__19974_19986);
        if (temp__4126__auto___19995) {
          var seq__19974_19996__$1 = temp__4126__auto___19995;
          if (cljs.core.chunked_seq_QMARK_(seq__19974_19996__$1)) {
            var c__4530__auto___19997 = cljs.core.chunk_first(seq__19974_19996__$1);
            var G__19998 = cljs.core.chunk_rest(seq__19974_19996__$1);
            var G__19999 = c__4530__auto___19997;
            var G__20000 = cljs.core.count(c__4530__auto___19997);
            var G__20001 = 0;
            seq__19974_19986 = G__19998;
            chunk__19975_19987 = G__19999;
            count__19976_19988 = G__20000;
            i__19977_19989 = G__20001;
            continue;
          } else {
            var x_20002 = cljs.core.first(seq__19974_19996__$1);
            arr.push(x_20002);
            var G__20003 = cljs.core.next(seq__19974_19996__$1);
            var G__20004 = null;
            var G__20005 = 0;
            var G__20006 = 0;
            seq__19974_19986 = G__20003;
            chunk__19975_19987 = G__20004;
            count__19976_19988 = G__20005;
            i__19977_19989 = G__20006;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_(form)) {
      var obj = function() {
        var obj19979 = {};
        return obj19979;
      }();
      var seq__19980_20007 = cljs.core.seq(form);
      var chunk__19981_20008 = null;
      var count__19982_20009 = 0;
      var i__19983_20010 = 0;
      while (true) {
        if (i__19983_20010 < count__19982_20009) {
          var vec__19984_20011 = chunk__19981_20008.cljs$core$IIndexed$_nth$arity$2(null, i__19983_20010);
          var k_20012 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19984_20011, 0, null);
          var v_20013 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19984_20011, 1, null);
          obj[cljs.core.name(k_20012)] = v_20013;
          var G__20014 = seq__19980_20007;
          var G__20015 = chunk__19981_20008;
          var G__20016 = count__19982_20009;
          var G__20017 = i__19983_20010 + 1;
          seq__19980_20007 = G__20014;
          chunk__19981_20008 = G__20015;
          count__19982_20009 = G__20016;
          i__19983_20010 = G__20017;
          continue;
        } else {
          var temp__4126__auto___20018 = cljs.core.seq(seq__19980_20007);
          if (temp__4126__auto___20018) {
            var seq__19980_20019__$1 = temp__4126__auto___20018;
            if (cljs.core.chunked_seq_QMARK_(seq__19980_20019__$1)) {
              var c__4530__auto___20020 = cljs.core.chunk_first(seq__19980_20019__$1);
              var G__20021 = cljs.core.chunk_rest(seq__19980_20019__$1);
              var G__20022 = c__4530__auto___20020;
              var G__20023 = cljs.core.count(c__4530__auto___20020);
              var G__20024 = 0;
              seq__19980_20007 = G__20021;
              chunk__19981_20008 = G__20022;
              count__19982_20009 = G__20023;
              i__19983_20010 = G__20024;
              continue;
            } else {
              var vec__19985_20025 = cljs.core.first(seq__19980_20019__$1);
              var k_20026 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19985_20025, 0, null);
              var v_20027 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19985_20025, 1, null);
              obj[cljs.core.name(k_20026)] = v_20027;
              var G__20028 = cljs.core.next(seq__19980_20019__$1);
              var G__20029 = null;
              var G__20030 = 0;
              var G__20031 = 0;
              seq__19980_20007 = G__20028;
              chunk__19981_20008 = G__20029;
              count__19982_20009 = G__20030;
              i__19983_20010 = G__20031;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join("")], 0));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["UUID literal expects a string as its representation."], 0));
  }
};
cljs.reader._STAR_tag_table_STAR_ = function() {
  var G__20032 = new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20032) : cljs.core.atom.call(null, G__20032);
}();
cljs.reader._STAR_default_data_reader_fn_STAR_ = function() {
  var G__20033 = null;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20033) : cljs.core.atom.call(null, G__20033);
}();
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol(rdr, initch);
  var pfn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20040 = cljs.reader._STAR_tag_table_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20040) : cljs.core.deref.call(null, G__20040);
  }(), [cljs.core.str(tag)].join(""));
  var dfn = function() {
    var G__20041 = cljs.reader._STAR_default_data_reader_fn_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20041) : cljs.core.deref.call(null, G__20041);
  }();
  if (cljs.core.truth_(pfn)) {
    var G__20042 = cljs.reader.read(rdr, true, null, false);
    return pfn.cljs$core$IFn$_invoke$arity$1 ? pfn.cljs$core$IFn$_invoke$arity$1(G__20042) : pfn.call(null, G__20042);
  } else {
    if (cljs.core.truth_(dfn)) {
      var G__20043 = tag;
      var G__20044 = cljs.reader.read(rdr, true, null, false);
      return dfn.cljs$core$IFn$_invoke$arity$2 ? dfn.cljs$core$IFn$_invoke$arity$2(G__20043, G__20044) : dfn.call(null, G__20043, G__20044);
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.keys(function() {
        var G__20045 = cljs.reader._STAR_tag_table_STAR_;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20045) : cljs.core.deref.call(null, G__20045);
      }())], 0))], 0));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20047 = cljs.reader._STAR_tag_table_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20047) : cljs.core.deref.call(null, G__20047);
  }(), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(function() {
    var G__20049 = cljs.reader._STAR_tag_table_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20049) : cljs.core.deref.call(null, G__20049);
  }(), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = function() {
    var G__20051 = cljs.reader._STAR_default_data_reader_fn_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20051) : cljs.core.deref.call(null, G__20051);
  }();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = function() {
    var G__20053 = cljs.reader._STAR_default_data_reader_fn_STAR_;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20053) : cljs.core.deref.call(null, G__20053);
  }();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup;
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    if (cljs.core.fn_QMARK_(sel)) {
      var temp__4124__auto__ = jayq.core.crate_meta(sel);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var cm = temp__4124__auto__;
        return[cljs.core.str("[crateGroup\x3d"), cljs.core.str(cm), cljs.core.str("]")].join("");
      } else {
        return sel;
      }
    } else {
      if (sel instanceof cljs.core.Keyword) {
        return cljs.core.name(sel);
      } else {
        return sel;
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    var G__19701 = jayq.core.__GT_selector(sel);
    return jQuery(G__19701);
  };
  var $__2 = function(sel, context) {
    var G__19702 = jayq.core.__GT_selector(sel);
    var G__19703 = context;
    return jQuery(G__19702, G__19703);
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $;
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__19705 = null;
  var G__19705__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this$, k);
  };
  var G__19705__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$, k, not_found);
  };
  G__19705 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19705__2.call(this, self__, k);
      case 3:
        return G__19705__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19705.cljs$core$IFn$_invoke$arity$2 = G__19705__2;
  G__19705.cljs$core$IFn$_invoke$arity$3 = G__19705__3;
  return G__19705;
}();
jQuery.prototype.apply = function(self__, args19704) {
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19704)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var this$ = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this$, k);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var this$ = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$, k, not_found);
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this$__$1, f);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this$__$1, f, start);
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var this$__$1 = this;
  var or__3743__auto__ = this$__$1.slice(k, k + 1);
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var this$__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this$__$1, k, not_found);
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var this$__$1 = this;
  if (n < cljs.core.count(this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var this$__$1 = this;
  if (n < cljs.core.count(this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    if (void 0 === not_found) {
      return null;
    } else {
      return not_found;
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.length;
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.count(this$__$1) > 1) {
    return this$__$1.slice(1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(this$__$1.get(0))) {
    return this$__$1;
  } else {
    return null;
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js(props), dur);
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text();
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt);
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js(opts));
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name(p), v);
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css;
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js(x));
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name(n), v);
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js(x));
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name(n), v);
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop;
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name(a));
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name(a));
};
jayq.core.data = function() {
  var data = null;
  var data__1 = function($elem) {
    return $elem.data();
  };
  var data__2 = function($elem, k) {
    return $elem.data(cljs.core.clj__GT_js(k));
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name(k), cljs.core.clj__GT_js(v));
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 1:
        return data__1.call(this, $elem);
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$1 = data__1;
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data;
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name(cl));
};
jayq.core.remove_class = function() {
  var remove_class = null;
  var remove_class__1 = function($elem) {
    return $elem.removeClass();
  };
  var remove_class__2 = function($elem, cl) {
    return $elem.removeClass(cljs.core.name(cl));
  };
  remove_class = function($elem, cl) {
    switch(arguments.length) {
      case 1:
        return remove_class__1.call(this, $elem);
      case 2:
        return remove_class__2.call(this, $elem, cl);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class.cljs$core$IFn$_invoke$arity$1 = remove_class__1;
  remove_class.cljs$core$IFn$_invoke$arity$2 = remove_class__2;
  return remove_class;
}();
jayq.core.toggle_class = function() {
  var toggle_class = null;
  var toggle_class__2 = function($elem, cl) {
    return $elem.toggleClass(cljs.core.name(cl));
  };
  var toggle_class__3 = function($elem, cl, switch$) {
    return $elem.toggleClass(cljs.core.name(cl), cljs.core.boolean$(switch$));
  };
  toggle_class = function($elem, cl, switch$) {
    switch(arguments.length) {
      case 2:
        return toggle_class__2.call(this, $elem, cl);
      case 3:
        return toggle_class__3.call(this, $elem, cl, switch$);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class.cljs$core$IFn$_invoke$arity$2 = toggle_class__2;
  toggle_class.cljs$core$IFn$_invoke$arity$3 = toggle_class__3;
  return toggle_class;
}();
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name(cl));
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector(selector));
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content);
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content);
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content);
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content);
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector(target));
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector(target));
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector(target));
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector(target));
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content);
};
jayq.core.remove = function remove($elem) {
  return $elem.remove();
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__19706) {
    var vec__19708 = p__19706;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19708, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19708, 1, null);
    return $elem.hide(speed, on_finish);
  };
  var hide = function($elem, var_args) {
    var p__19706 = null;
    if (arguments.length > 1) {
      var G__19709__i = 0, G__19709__a = new Array(arguments.length - 1);
      while (G__19709__i < G__19709__a.length) {
        G__19709__a[G__19709__i] = arguments[G__19709__i + 1];
        ++G__19709__i;
      }
      p__19706 = new cljs.core.IndexedSeq(G__19709__a, 0);
    }
    return hide__delegate.call(this, $elem, p__19706);
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__19710) {
    var $elem = cljs.core.first(arglist__19710);
    var p__19706 = cljs.core.rest(arglist__19710);
    return hide__delegate($elem, p__19706);
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide;
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__19711) {
    var vec__19713 = p__19711;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19713, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19713, 1, null);
    return $elem.show(speed, on_finish);
  };
  var show = function($elem, var_args) {
    var p__19711 = null;
    if (arguments.length > 1) {
      var G__19714__i = 0, G__19714__a = new Array(arguments.length - 1);
      while (G__19714__i < G__19714__a.length) {
        G__19714__a[G__19714__i] = arguments[G__19714__i + 1];
        ++G__19714__i;
      }
      p__19711 = new cljs.core.IndexedSeq(G__19714__a, 0);
    }
    return show__delegate.call(this, $elem, p__19711);
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__19715) {
    var $elem = cljs.core.first(arglist__19715);
    var p__19711 = cljs.core.rest(arglist__19715);
    return show__delegate($elem, p__19711);
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show;
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__19716) {
    var vec__19718 = p__19716;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19718, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19718, 1, null);
    return $elem.toggle(speed, on_finish);
  };
  var toggle = function($elem, var_args) {
    var p__19716 = null;
    if (arguments.length > 1) {
      var G__19719__i = 0, G__19719__a = new Array(arguments.length - 1);
      while (G__19719__i < G__19719__a.length) {
        G__19719__a[G__19719__i] = arguments[G__19719__i + 1];
        ++G__19719__i;
      }
      p__19716 = new cljs.core.IndexedSeq(G__19719__a, 0);
    }
    return toggle__delegate.call(this, $elem, p__19716);
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__19720) {
    var $elem = cljs.core.first(arglist__19720);
    var p__19716 = cljs.core.rest(arglist__19720);
    return toggle__delegate($elem, p__19716);
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle;
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__19721) {
    var vec__19723 = p__19721;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19723, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19723, 1, null);
    return $elem.fadeOut(speed, on_finish);
  };
  var fade_out = function($elem, var_args) {
    var p__19721 = null;
    if (arguments.length > 1) {
      var G__19724__i = 0, G__19724__a = new Array(arguments.length - 1);
      while (G__19724__i < G__19724__a.length) {
        G__19724__a[G__19724__i] = arguments[G__19724__i + 1];
        ++G__19724__i;
      }
      p__19721 = new cljs.core.IndexedSeq(G__19724__a, 0);
    }
    return fade_out__delegate.call(this, $elem, p__19721);
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__19725) {
    var $elem = cljs.core.first(arglist__19725);
    var p__19721 = cljs.core.rest(arglist__19725);
    return fade_out__delegate($elem, p__19721);
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out;
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__19726) {
    var vec__19728 = p__19726;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19728, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19728, 1, null);
    return $elem.fadeIn(speed, on_finish);
  };
  var fade_in = function($elem, var_args) {
    var p__19726 = null;
    if (arguments.length > 1) {
      var G__19729__i = 0, G__19729__a = new Array(arguments.length - 1);
      while (G__19729__i < G__19729__a.length) {
        G__19729__a[G__19729__i] = arguments[G__19729__i + 1];
        ++G__19729__i;
      }
      p__19726 = new cljs.core.IndexedSeq(G__19729__a, 0);
    }
    return fade_in__delegate.call(this, $elem, p__19726);
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__19730) {
    var $elem = cljs.core.first(arglist__19730);
    var p__19726 = cljs.core.rest(arglist__19730);
    return fade_in__delegate($elem, p__19726);
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in;
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__19731) {
    var vec__19733 = p__19731;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19733, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19733, 1, null);
    return $elem.slideUp(speed, on_finish);
  };
  var slide_up = function($elem, var_args) {
    var p__19731 = null;
    if (arguments.length > 1) {
      var G__19734__i = 0, G__19734__a = new Array(arguments.length - 1);
      while (G__19734__i < G__19734__a.length) {
        G__19734__a[G__19734__i] = arguments[G__19734__i + 1];
        ++G__19734__i;
      }
      p__19731 = new cljs.core.IndexedSeq(G__19734__a, 0);
    }
    return slide_up__delegate.call(this, $elem, p__19731);
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__19735) {
    var $elem = cljs.core.first(arglist__19735);
    var p__19731 = cljs.core.rest(arglist__19735);
    return slide_up__delegate($elem, p__19731);
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up;
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__19736) {
    var vec__19738 = p__19736;
    var speed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19738, 0, null);
    var on_finish = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19738, 1, null);
    return $elem.slideDown(speed, on_finish);
  };
  var slide_down = function($elem, var_args) {
    var p__19736 = null;
    if (arguments.length > 1) {
      var G__19739__i = 0, G__19739__a = new Array(arguments.length - 1);
      while (G__19739__i < G__19739__a.length) {
        G__19739__a[G__19739__i] = arguments[G__19739__i + 1];
        ++G__19739__i;
      }
      p__19736 = new cljs.core.IndexedSeq(G__19739__a, 0);
    }
    return slide_down__delegate.call(this, $elem, p__19736);
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__19740) {
    var $elem = cljs.core.first(arglist__19740);
    var p__19736 = cljs.core.rest(arglist__19740);
    return slide_down__delegate($elem, p__19736);
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down;
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings();
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name(selector));
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings;
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent();
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents();
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name(selector));
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil();
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector(selector));
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector(selector), cljs.core.name(filtr));
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until;
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children();
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name(selector));
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children;
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next();
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name(selector));
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next;
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev();
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name(selector));
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev;
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll();
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name(selector));
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all;
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll();
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name(selector));
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all;
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil();
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector(selector));
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector(selector), cljs.core.name(filtr));
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until;
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil();
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector(selector));
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector(selector), cljs.core.name(filtr));
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until;
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name(selector));
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__19741) {
    var vec__19743 = p__19741;
    var context = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19743, 0, null);
    return $elem.closest(jayq.core.__GT_selector(selector), context);
  };
  var closest = function($elem, selector, var_args) {
    var p__19741 = null;
    if (arguments.length > 2) {
      var G__19744__i = 0, G__19744__a = new Array(arguments.length - 2);
      while (G__19744__i < G__19744__a.length) {
        G__19744__a[G__19744__i] = arguments[G__19744__i + 2];
        ++G__19744__i;
      }
      p__19741 = new cljs.core.IndexedSeq(G__19744__a, 0);
    }
    return closest__delegate.call(this, $elem, selector, p__19741);
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__19745) {
    var $elem = cljs.core.first(arglist__19745);
    arglist__19745 = cljs.core.next(arglist__19745);
    var selector = cljs.core.first(arglist__19745);
    var p__19741 = cljs.core.rest(arglist__19745);
    return closest__delegate($elem, selector, p__19741);
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest;
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone();
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html();
  };
  var html__2 = function($elem, v) {
    return $elem.html(v);
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html;
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty();
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val();
  };
  var val__2 = function($elem, v) {
    return $elem.val(v);
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize();
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue();
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x);
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y);
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue;
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue();
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name);
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue;
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.cljs$core$IFn$_invoke$arity$1(document).ready(func);
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string([cljs.core.str(s)].join(""));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$34, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$37, "application/edn, text/edn", cljs.core.constant$keyword$38, "application/clojure, text/clojure"], null), cljs.core.constant$keyword$35, new cljs.core.PersistentArrayMap(null, 1, ["clojure", /edn|clojure/], null), cljs.core.constant$keyword$36, new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, 
"text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find(/^(text|application)\/(clojure|edn)/, x);
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if (typeof ct === "string") {
    return ct;
  } else {
    if (ct instanceof cljs.core.Keyword) {
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ct)].join(""), 1);
    } else {
      return null;
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__19748) {
  var map__19750 = p__19748;
  var map__19750__$1 = cljs.core.seq_QMARK_(map__19750) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19750) : map__19750;
  var request = map__19750__$1;
  var contentType = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19750__$1, cljs.core.constant$keyword$39);
  var data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19750__$1, cljs.core.constant$keyword$40);
  var ct = jayq.core.__GT_content_type(contentType);
  return function(ct, map__19750, map__19750__$1, request, contentType, data) {
    return function(p1__19747_SHARP_) {
      if (cljs.core.truth_(function() {
        var and__3731__auto__ = ct;
        if (cljs.core.truth_(and__3731__auto__)) {
          return jayq.core.clj_content_type_QMARK_(ct);
        } else {
          return and__3731__auto__;
        }
      }())) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__19747_SHARP_, cljs.core.constant$keyword$40, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([data], 0)));
      } else {
        return p1__19747_SHARP_;
      }
    };
  }(ct, map__19750, map__19750__$1, request, contentType, data).call(null, function(ct, map__19750, map__19750__$1, request, contentType, data) {
    return function(p1__19746_SHARP_) {
      if (cljs.core.truth_(ct)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__19746_SHARP_, cljs.core.constant$keyword$39, ct);
      } else {
        return p1__19746_SHARP_;
      }
    };
  }(ct, map__19750, map__19750__$1, request, contentType, data).call(null, request));
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js(jayq.core.preprocess_request(request));
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings(settings));
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings(settings));
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax;
}();
jayq.core.xhr = function xhr(p__19751, content, callback) {
  var vec__19753 = p__19751;
  var method = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19753, 0, null);
  var uri = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19753, 1, null);
  var params = cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$41, clojure.string.upper_case(cljs.core.name(method)), cljs.core.constant$keyword$40, cljs.core.clj__GT_js(content), cljs.core.constant$keyword$42, callback], null));
  return jQuery.ajax(uri, params);
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string(jayq.core.html.cljs$core$IFn$_invoke$arity$1($elem));
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name(ev), func);
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__19754) {
    var vec__19756 = p__19754;
    var func = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19756, 0, null);
    return $elem.unbind(cljs.core.name(ev), func);
  };
  var unbind = function($elem, ev, var_args) {
    var p__19754 = null;
    if (arguments.length > 2) {
      var G__19757__i = 0, G__19757__a = new Array(arguments.length - 2);
      while (G__19757__i < G__19757__a.length) {
        G__19757__a[G__19757__i] = arguments[G__19757__i + 2];
        ++G__19757__i;
      }
      p__19754 = new cljs.core.IndexedSeq(G__19757__a, 0);
    }
    return unbind__delegate.call(this, $elem, ev, p__19754);
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__19758) {
    var $elem = cljs.core.first(arglist__19758);
    arglist__19758 = cljs.core.next(arglist__19758);
    var ev = cljs.core.first(arglist__19758);
    var p__19754 = cljs.core.rest(arglist__19758);
    return unbind__delegate($elem, ev, p__19754);
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind;
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name(ev));
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector(sel), cljs.core.name(ev), func);
};
jayq.core.__GT_event = function __GT_event(e) {
  if (cljs.core.coll_QMARK_(e)) {
    return clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.name, e));
  } else {
    return cljs.core.clj__GT_js(e);
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__19759) {
    var vec__19761 = p__19759;
    var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19761, 0, null);
    var data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19761, 1, null);
    var handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19761, 2, null);
    return $elem.on(jayq.core.__GT_event(events), jayq.core.__GT_selector(sel), data, handler);
  };
  var on = function($elem, events, var_args) {
    var p__19759 = null;
    if (arguments.length > 2) {
      var G__19762__i = 0, G__19762__a = new Array(arguments.length - 2);
      while (G__19762__i < G__19762__a.length) {
        G__19762__a[G__19762__i] = arguments[G__19762__i + 2];
        ++G__19762__i;
      }
      p__19759 = new cljs.core.IndexedSeq(G__19762__a, 0);
    }
    return on__delegate.call(this, $elem, events, p__19759);
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__19763) {
    var $elem = cljs.core.first(arglist__19763);
    arglist__19763 = cljs.core.next(arglist__19763);
    var events = cljs.core.first(arglist__19763);
    var p__19759 = cljs.core.rest(arglist__19763);
    return on__delegate($elem, events, p__19759);
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on;
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__19764) {
    var vec__19766 = p__19764;
    var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19766, 0, null);
    var data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19766, 1, null);
    var handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19766, 2, null);
    return $elem.one(jayq.core.__GT_event(events), jayq.core.__GT_selector(sel), data, handler);
  };
  var one = function($elem, events, var_args) {
    var p__19764 = null;
    if (arguments.length > 2) {
      var G__19767__i = 0, G__19767__a = new Array(arguments.length - 2);
      while (G__19767__i < G__19767__a.length) {
        G__19767__a[G__19767__i] = arguments[G__19767__i + 2];
        ++G__19767__i;
      }
      p__19764 = new cljs.core.IndexedSeq(G__19767__a, 0);
    }
    return one__delegate.call(this, $elem, events, p__19764);
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__19768) {
    var $elem = cljs.core.first(arglist__19768);
    arglist__19768 = cljs.core.next(arglist__19768);
    var events = cljs.core.first(arglist__19768);
    var p__19764 = cljs.core.rest(arglist__19768);
    return one__delegate($elem, events, p__19764);
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one;
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__19769) {
    var vec__19771 = p__19769;
    var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19771, 0, null);
    var handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19771, 1, null);
    return $elem.off(jayq.core.__GT_event(events), jayq.core.__GT_selector(sel), handler);
  };
  var off = function($elem, events, var_args) {
    var p__19769 = null;
    if (arguments.length > 2) {
      var G__19772__i = 0, G__19772__a = new Array(arguments.length - 2);
      while (G__19772__i < G__19772__a.length) {
        G__19772__a[G__19772__i] = arguments[G__19772__i + 2];
        ++G__19772__i;
      }
      p__19769 = new cljs.core.IndexedSeq(G__19772__a, 0);
    }
    return off__delegate.call(this, $elem, events, p__19769);
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__19773) {
    var $elem = cljs.core.first(arglist__19773);
    arglist__19773 = cljs.core.next(arglist__19773);
    var events = cljs.core.first(arglist__19773);
    var p__19769 = cljs.core.rest(arglist__19773);
    return off__delegate($elem, events, p__19769);
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off;
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault();
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height();
  };
  var height__2 = function($elem, x) {
    return $elem.height(x);
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height;
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width();
  };
  var width__2 = function($elem, x) {
    return $elem.width(x);
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width;
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight();
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth();
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight();
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth();
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic($elem.offset(), cljs.core.array_seq([cljs.core.constant$keyword$16, true], 0));
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js(coords).offset();
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset;
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent();
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic($elem.position(), cljs.core.array_seq([cljs.core.constant$keyword$16, true], 0));
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft();
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x);
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left;
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop();
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x);
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top;
}();
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js(done_fn), cljs.core.clj__GT_js(fail_fn));
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js(done_fn), cljs.core.clj__GT_js(fail_fn), cljs.core.clj__GT_js(progress_fn));
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then;
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js(fns_args));
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      var G__19774__i = 0, G__19774__a = new Array(arguments.length - 1);
      while (G__19774__i < G__19774__a.length) {
        G__19774__a[G__19774__i] = arguments[G__19774__i + 1];
        ++G__19774__i;
      }
      fns_args = new cljs.core.IndexedSeq(G__19774__a, 0);
    }
    return done__delegate.call(this, deferred, fns_args);
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__19775) {
    var deferred = cljs.core.first(arglist__19775);
    var fns_args = cljs.core.rest(arglist__19775);
    return done__delegate(deferred, fns_args);
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done;
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js(fns_args));
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      var G__19776__i = 0, G__19776__a = new Array(arguments.length - 1);
      while (G__19776__i < G__19776__a.length) {
        G__19776__a[G__19776__i] = arguments[G__19776__i + 1];
        ++G__19776__i;
      }
      fns_args = new cljs.core.IndexedSeq(G__19776__a, 0);
    }
    return fail__delegate.call(this, deferred, fns_args);
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__19777) {
    var deferred = cljs.core.first(arglist__19777);
    var fns_args = cljs.core.rest(arglist__19777);
    return fail__delegate(deferred, fns_args);
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail;
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js(fns_args));
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise();
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type);
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target);
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise;
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js(fns_args));
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      var G__19778__i = 0, G__19778__a = new Array(arguments.length - 1);
      while (G__19778__i < G__19778__a.length) {
        G__19778__a[G__19778__i] = arguments[G__19778__i + 1];
        ++G__19778__i;
      }
      fns_args = new cljs.core.IndexedSeq(G__19778__a, 0);
    }
    return always__delegate.call(this, deferred, fns_args);
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__19779) {
    var deferred = cljs.core.first(arglist__19779);
    var fns_args = cljs.core.rest(arglist__19779);
    return always__delegate(deferred, fns_args);
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always;
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args);
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args);
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args);
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args);
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args);
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args);
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter);
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter);
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter);
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe;
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(deferred.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$43, jayq.core.$when, cljs.core.constant$keyword$44, function(x, f) {
  var dfd = function() {
    return jayq.core.$deferred.cljs$core$IFn$_invoke$arity$0 ? jayq.core.$deferred.cljs$core$IFn$_invoke$arity$0() : jayq.core.$deferred.call(null);
  }();
  jayq.core.done.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([function(dfd) {
    return function(v) {
      return jayq.core.done.cljs$core$IFn$_invoke$arity$variadic(function() {
        var G__19780 = v;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19780) : f.call(null, G__19780);
      }(), cljs.core.array_seq([cljs.core.partial.cljs$core$IFn$_invoke$arity$2(jayq.core.resolve, dfd)], 0));
    };
  }(dfd)], 0));
  return jayq.core.promise.cljs$core$IFn$_invoke$arity$1(dfd);
}, cljs.core.constant$keyword$45, cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$43, cljs.core.identity, cljs.core.constant$keyword$44, function(x, f) {
  return jayq.core.done.cljs$core$IFn$_invoke$arity$variadic(jayq.core.ajax.cljs$core$IFn$_invoke$arity$1(x), cljs.core.array_seq([f], 0));
}, cljs.core.constant$keyword$45, cljs.core.identity], null);
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_18209 = document.createElement("div");
var test_html_18210 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_18209.innerHTML = test_html_18210;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(div_18209.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(div_18209.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(div_18209.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return!goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return(prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS", false);
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return{"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top);
  } else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
    var pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y);
  }
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
    return goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
  } else {
    return pos;
  }
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var be = (el);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && be.getBrowserEvent().targetTouches) {
        targetEvent = be.getBrowserEvent().targetTouches[0];
      }
    }
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.style");
goog.require("clojure.string");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_17546 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_17547 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_17548 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", cljs.core.constant$keyword$7, "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_17548, opt_wrapper_17546, table_section_wrapper_17547, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_17546, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_17547, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"], 
null), table_section_wrapper_17547, cell_wrapper_17548, table_section_wrapper_17547, table_section_wrapper_17547]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not(cljs.core.re_find(domina.re_tbody, html));
  var tbody = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3731__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3731__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3731__auto__;
    }
  }() : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__17553 = cljs.core.seq(tbody);
  var chunk__17554 = null;
  var count__17555 = 0;
  var i__17556 = 0;
  while (true) {
    if (i__17556 < count__17555) {
      var child = chunk__17554.cljs$core$IIndexed$_nth$arity$2(null, i__17556);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child.nodeName, "tbody") && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__17557 = seq__17553;
      var G__17558 = chunk__17554;
      var G__17559 = count__17555;
      var G__17560 = i__17556 + 1;
      seq__17553 = G__17557;
      chunk__17554 = G__17558;
      count__17555 = G__17559;
      i__17556 = G__17560;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__17553);
      if (temp__4126__auto__) {
        var seq__17553__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17553__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__17553__$1);
          var G__17561 = cljs.core.chunk_rest(seq__17553__$1);
          var G__17562 = c__4530__auto__;
          var G__17563 = cljs.core.count(c__4530__auto__);
          var G__17564 = 0;
          seq__17553 = G__17561;
          chunk__17554 = G__17562;
          count__17555 = G__17563;
          i__17556 = G__17564;
          continue;
        } else {
          var child = cljs.core.first(seq__17553__$1);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child.nodeName, "tbody") && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__17565 = cljs.core.next(seq__17553__$1);
          var G__17566 = null;
          var G__17567 = 0;
          var G__17568 = 0;
          seq__17553 = G__17565;
          chunk__17554 = G__17566;
          count__17555 = G__17567;
          i__17556 = G__17568;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first(cljs.core.re_find(domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace(html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second(cljs.core.re_find(domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__17570 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(domina.wrap_map, tag_name, cljs.core.constant$keyword$7.cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17570, 0, null);
  var start_wrap = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17570, 1, null);
  var end_wrap = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17570, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__17571 = wrapper.lastChild;
        var G__17572 = level - 1;
        wrapper = G__17571;
        level = G__17572;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_(div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = cljs.core.not(domina.support.leading_whitespace_QMARK_);
    if (and__3731__auto__) {
      return cljs.core.re_find(domina.re_leading_whitespace, html__$1);
    } else {
      return and__3731__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_(div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find(domina.re_html, s))) {
    return domina.html_to_dom(s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj17574 = {};
  return obj17574;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3731__auto__ = content;
    if (and__3731__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4387__auto__ = content == null ? null : content;
    return function() {
      var or__3743__auto__ = domina.nodes[function() {
        var G__17578 = x__4387__auto__;
        return goog.typeOf(G__17578);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = domina.nodes["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3731__auto__ = nodeseq;
    if (and__3731__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3731__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4387__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3743__auto__ = domina.single_node[function() {
        var G__17582 = x__4387__auto__;
        return goog.typeOf(G__17582);
      }()];
      if (or__3743__auto__) {
        return or__3743__auto__;
      } else {
        var or__3743__auto____$1 = domina.single_node["_"];
        if (or__3743__auto____$1) {
          return or__3743__auto____$1;
        } else {
          throw cljs.core.missing_protocol("DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3731__auto__)) {
        return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(window.console, undefined);
      } else {
        return and__3731__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__17583__i = 0, G__17583__a = new Array(arguments.length - 0);
      while (G__17583__i < G__17583__a.length) {
        G__17583__a[G__17583__i] = arguments[G__17583__i + 0];
        ++G__17583__i;
      }
      mesg = new cljs.core.IndexedSeq(G__17583__a, 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__17584) {
    var mesg = cljs.core.seq(arglist__17584);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__17585__i = 0, G__17585__a = new Array(arguments.length - 0);
      while (G__17585__i < G__17585__a.length) {
        G__17585__a[G__17585__i] = arguments[G__17585__i + 0];
        ++G__17585__i;
      }
      mesg = new cljs.core.IndexedSeq(G__17585__a, 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__17586) {
    var mesg = cljs.core.seq(arglist__17586);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  var G__17588 = cljs.core.name(id);
  return goog.dom.getElement(G__17588);
};
domina.by_class = function by_class(class_name) {
  var G__17591 = function() {
    var G__17592 = cljs.core.name(class_name);
    return goog.dom.getElementsByClass(G__17592);
  }();
  return domina.normalize_seq.cljs$core$IFn$_invoke$arity$1 ? domina.normalize_seq.cljs$core$IFn$_invoke$arity$1(G__17591) : domina.normalize_seq.call(null, G__17591);
};
domina.children = function children(content) {
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(goog.dom.getChildren, cljs.core.array_seq([domina.nodes(content)], 0)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.dom.findCommonAncestor, cljs.core.map.cljs$core$IFn$_invoke$arity$2(domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      var G__17593__i = 0, G__17593__a = new Array(arguments.length - 0);
      while (G__17593__i < G__17593__a.length) {
        G__17593__a[G__17593__i] = arguments[G__17593__i + 0];
        ++G__17593__i;
      }
      contents = new cljs.core.IndexedSeq(G__17593__a, 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__17594) {
    var contents = cljs.core.seq(arglist__17594);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(domina.common_ancestor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([ancestor_content, descendant_content], 0)), domina.single_node(ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__17595_SHARP_) {
    return p1__17595_SHARP_.cloneNode(true);
  }, domina.nodes(content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  var G__17599_17602 = goog.dom.appendChild;
  var G__17600_17603 = parent_content;
  var G__17601_17604 = child_content;
  domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3 ? domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3(G__17599_17602, G__17600_17603, G__17601_17604) : domina.apply_with_cloning.call(null, G__17599_17602, G__17600_17603, G__17601_17604);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  var G__17613_17619 = function(p1__17605_SHARP_, p2__17606_SHARP_) {
    var G__17616 = p1__17605_SHARP_;
    var G__17617 = p2__17606_SHARP_;
    var G__17618 = idx;
    return goog.dom.insertChildAt(G__17616, G__17617, G__17618);
  };
  var G__17614_17620 = parent_content;
  var G__17615_17621 = child_content;
  domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3 ? domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3(G__17613_17619, G__17614_17620, G__17615_17621) : domina.apply_with_cloning.call(null, G__17613_17619, G__17614_17620, G__17615_17621);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_(parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  var G__17629_17634 = function(p1__17623_SHARP_, p2__17622_SHARP_) {
    var G__17632 = p2__17622_SHARP_;
    var G__17633 = p1__17623_SHARP_;
    return goog.dom.insertSiblingBefore(G__17632, G__17633);
  };
  var G__17630_17635 = content;
  var G__17631_17636 = new_content;
  domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3 ? domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3(G__17629_17634, G__17630_17635, G__17631_17636) : domina.apply_with_cloning.call(null, G__17629_17634, G__17630_17635, G__17631_17636);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  var G__17644_17649 = function(p1__17638_SHARP_, p2__17637_SHARP_) {
    var G__17647 = p2__17637_SHARP_;
    var G__17648 = p1__17638_SHARP_;
    return goog.dom.insertSiblingAfter(G__17647, G__17648);
  };
  var G__17645_17650 = content;
  var G__17646_17651 = new_content;
  domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3 ? domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3(G__17644_17649, G__17645_17650, G__17646_17651) : domina.apply_with_cloning.call(null, G__17644_17649, G__17645_17650, G__17646_17651);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  var G__17659_17664 = function(p1__17653_SHARP_, p2__17652_SHARP_) {
    var G__17662 = p2__17652_SHARP_;
    var G__17663 = p1__17653_SHARP_;
    return goog.dom.replaceNode(G__17662, G__17663);
  };
  var G__17660_17665 = old_content;
  var G__17661_17666 = new_content;
  domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3 ? domina.apply_with_cloning.cljs$core$IFn$_invoke$arity$3(G__17659_17664, G__17660_17665, G__17661_17666) : domina.apply_with_cloning.call(null, G__17659_17664, G__17660_17665, G__17661_17666);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(goog.dom.removeNode, domina.nodes(content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(goog.dom.removeNode, domina.nodes(content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(goog.dom.removeChildren, domina.nodes(content)));
  return content;
};
domina.style = function style(content, name) {
  var s = function() {
    var G__17669 = domina.single_node(content);
    var G__17670 = cljs.core.name(name);
    return goog.style.getStyle(G__17669, G__17670);
  }();
  if (cljs.core.truth_(clojure.string.blank_QMARK_(s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node(content).getAttribute(cljs.core.name(name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__17681_17691 = cljs.core.seq(domina.nodes(content));
    var chunk__17682_17692 = null;
    var count__17683_17693 = 0;
    var i__17684_17694 = 0;
    while (true) {
      if (i__17684_17694 < count__17683_17693) {
        var n_17695 = chunk__17682_17692.cljs$core$IIndexed$_nth$arity$2(null, i__17684_17694);
        var G__17685_17696 = n_17695;
        var G__17686_17697 = cljs.core.name(name);
        var G__17687_17698 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, value);
        goog.style.setStyle(G__17685_17696, G__17686_17697, G__17687_17698);
        var G__17699 = seq__17681_17691;
        var G__17700 = chunk__17682_17692;
        var G__17701 = count__17683_17693;
        var G__17702 = i__17684_17694 + 1;
        seq__17681_17691 = G__17699;
        chunk__17682_17692 = G__17700;
        count__17683_17693 = G__17701;
        i__17684_17694 = G__17702;
        continue;
      } else {
        var temp__4126__auto___17703 = cljs.core.seq(seq__17681_17691);
        if (temp__4126__auto___17703) {
          var seq__17681_17704__$1 = temp__4126__auto___17703;
          if (cljs.core.chunked_seq_QMARK_(seq__17681_17704__$1)) {
            var c__4530__auto___17705 = cljs.core.chunk_first(seq__17681_17704__$1);
            var G__17706 = cljs.core.chunk_rest(seq__17681_17704__$1);
            var G__17707 = c__4530__auto___17705;
            var G__17708 = cljs.core.count(c__4530__auto___17705);
            var G__17709 = 0;
            seq__17681_17691 = G__17706;
            chunk__17682_17692 = G__17707;
            count__17683_17693 = G__17708;
            i__17684_17694 = G__17709;
            continue;
          } else {
            var n_17710 = cljs.core.first(seq__17681_17704__$1);
            var G__17688_17711 = n_17710;
            var G__17689_17712 = cljs.core.name(name);
            var G__17690_17713 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, value);
            goog.style.setStyle(G__17688_17711, G__17689_17712, G__17690_17713);
            var G__17714 = cljs.core.next(seq__17681_17704__$1);
            var G__17715 = null;
            var G__17716 = 0;
            var G__17717 = 0;
            seq__17681_17691 = G__17714;
            chunk__17682_17692 = G__17715;
            count__17683_17693 = G__17716;
            i__17684_17694 = G__17717;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__17718__i = 0, G__17718__a = new Array(arguments.length - 2);
      while (G__17718__i < G__17718__a.length) {
        G__17718__a[G__17718__i] = arguments[G__17718__i + 2];
        ++G__17718__i;
      }
      value = new cljs.core.IndexedSeq(G__17718__a, 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__17719) {
    var content = cljs.core.first(arglist__17719);
    arglist__17719 = cljs.core.next(arglist__17719);
    var name = cljs.core.first(arglist__17719);
    var value = cljs.core.rest(arglist__17719);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__17724_17728 = cljs.core.seq(domina.nodes(content));
    var chunk__17725_17729 = null;
    var count__17726_17730 = 0;
    var i__17727_17731 = 0;
    while (true) {
      if (i__17727_17731 < count__17726_17730) {
        var n_17732 = chunk__17725_17729.cljs$core$IIndexed$_nth$arity$2(null, i__17727_17731);
        n_17732.setAttribute(cljs.core.name(name), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, value));
        var G__17733 = seq__17724_17728;
        var G__17734 = chunk__17725_17729;
        var G__17735 = count__17726_17730;
        var G__17736 = i__17727_17731 + 1;
        seq__17724_17728 = G__17733;
        chunk__17725_17729 = G__17734;
        count__17726_17730 = G__17735;
        i__17727_17731 = G__17736;
        continue;
      } else {
        var temp__4126__auto___17737 = cljs.core.seq(seq__17724_17728);
        if (temp__4126__auto___17737) {
          var seq__17724_17738__$1 = temp__4126__auto___17737;
          if (cljs.core.chunked_seq_QMARK_(seq__17724_17738__$1)) {
            var c__4530__auto___17739 = cljs.core.chunk_first(seq__17724_17738__$1);
            var G__17740 = cljs.core.chunk_rest(seq__17724_17738__$1);
            var G__17741 = c__4530__auto___17739;
            var G__17742 = cljs.core.count(c__4530__auto___17739);
            var G__17743 = 0;
            seq__17724_17728 = G__17740;
            chunk__17725_17729 = G__17741;
            count__17726_17730 = G__17742;
            i__17727_17731 = G__17743;
            continue;
          } else {
            var n_17744 = cljs.core.first(seq__17724_17738__$1);
            n_17744.setAttribute(cljs.core.name(name), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, value));
            var G__17745 = cljs.core.next(seq__17724_17738__$1);
            var G__17746 = null;
            var G__17747 = 0;
            var G__17748 = 0;
            seq__17724_17728 = G__17745;
            chunk__17725_17729 = G__17746;
            count__17726_17730 = G__17747;
            i__17727_17731 = G__17748;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__17749__i = 0, G__17749__a = new Array(arguments.length - 2);
      while (G__17749__i < G__17749__a.length) {
        G__17749__a[G__17749__i] = arguments[G__17749__i + 2];
        ++G__17749__i;
      }
      value = new cljs.core.IndexedSeq(G__17749__a, 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__17750) {
    var content = cljs.core.first(arglist__17750);
    arglist__17750 = cljs.core.next(arglist__17750);
    var name = cljs.core.first(arglist__17750);
    var value = cljs.core.rest(arglist__17750);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__17755_17759 = cljs.core.seq(domina.nodes(content));
  var chunk__17756_17760 = null;
  var count__17757_17761 = 0;
  var i__17758_17762 = 0;
  while (true) {
    if (i__17758_17762 < count__17757_17761) {
      var n_17763 = chunk__17756_17760.cljs$core$IIndexed$_nth$arity$2(null, i__17758_17762);
      n_17763.removeAttribute(cljs.core.name(name));
      var G__17764 = seq__17755_17759;
      var G__17765 = chunk__17756_17760;
      var G__17766 = count__17757_17761;
      var G__17767 = i__17758_17762 + 1;
      seq__17755_17759 = G__17764;
      chunk__17756_17760 = G__17765;
      count__17757_17761 = G__17766;
      i__17758_17762 = G__17767;
      continue;
    } else {
      var temp__4126__auto___17768 = cljs.core.seq(seq__17755_17759);
      if (temp__4126__auto___17768) {
        var seq__17755_17769__$1 = temp__4126__auto___17768;
        if (cljs.core.chunked_seq_QMARK_(seq__17755_17769__$1)) {
          var c__4530__auto___17770 = cljs.core.chunk_first(seq__17755_17769__$1);
          var G__17771 = cljs.core.chunk_rest(seq__17755_17769__$1);
          var G__17772 = c__4530__auto___17770;
          var G__17773 = cljs.core.count(c__4530__auto___17770);
          var G__17774 = 0;
          seq__17755_17759 = G__17771;
          chunk__17756_17760 = G__17772;
          count__17757_17761 = G__17773;
          i__17758_17762 = G__17774;
          continue;
        } else {
          var n_17775 = cljs.core.first(seq__17755_17769__$1);
          n_17775.removeAttribute(cljs.core.name(name));
          var G__17776 = cljs.core.next(seq__17755_17769__$1);
          var G__17777 = null;
          var G__17778 = 0;
          var G__17779 = 0;
          seq__17755_17759 = G__17776;
          chunk__17756_17760 = G__17777;
          count__17757_17761 = G__17778;
          i__17758_17762 = G__17779;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(acc, pair) {
    var vec__17781 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17781, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17781, 1, null);
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = k;
      if (cljs.core.truth_(and__3731__auto__)) {
        return v;
      } else {
        return and__3731__auto__;
      }
    }())) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc, cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr(content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes(style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes(style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node(content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs.core.nil_QMARK_), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(node, attrs__$1) {
    return function(p1__17782_SHARP_) {
      var attr = attrs__$1.item(p1__17782_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(null, value) && cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2("", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.cljs$core$IFn$_invoke$arity$1(attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__17789_17795 = cljs.core.seq(styles);
  var chunk__17790_17796 = null;
  var count__17791_17797 = 0;
  var i__17792_17798 = 0;
  while (true) {
    if (i__17792_17798 < count__17791_17797) {
      var vec__17793_17799 = chunk__17790_17796.cljs$core$IIndexed$_nth$arity$2(null, i__17792_17798);
      var name_17800 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17793_17799, 0, null);
      var value_17801 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17793_17799, 1, null);
      domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(content, name_17800, cljs.core.array_seq([value_17801], 0));
      var G__17802 = seq__17789_17795;
      var G__17803 = chunk__17790_17796;
      var G__17804 = count__17791_17797;
      var G__17805 = i__17792_17798 + 1;
      seq__17789_17795 = G__17802;
      chunk__17790_17796 = G__17803;
      count__17791_17797 = G__17804;
      i__17792_17798 = G__17805;
      continue;
    } else {
      var temp__4126__auto___17806 = cljs.core.seq(seq__17789_17795);
      if (temp__4126__auto___17806) {
        var seq__17789_17807__$1 = temp__4126__auto___17806;
        if (cljs.core.chunked_seq_QMARK_(seq__17789_17807__$1)) {
          var c__4530__auto___17808 = cljs.core.chunk_first(seq__17789_17807__$1);
          var G__17809 = cljs.core.chunk_rest(seq__17789_17807__$1);
          var G__17810 = c__4530__auto___17808;
          var G__17811 = cljs.core.count(c__4530__auto___17808);
          var G__17812 = 0;
          seq__17789_17795 = G__17809;
          chunk__17790_17796 = G__17810;
          count__17791_17797 = G__17811;
          i__17792_17798 = G__17812;
          continue;
        } else {
          var vec__17794_17813 = cljs.core.first(seq__17789_17807__$1);
          var name_17814 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17794_17813, 0, null);
          var value_17815 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17794_17813, 1, null);
          domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(content, name_17814, cljs.core.array_seq([value_17815], 0));
          var G__17816 = cljs.core.next(seq__17789_17807__$1);
          var G__17817 = null;
          var G__17818 = 0;
          var G__17819 = 0;
          seq__17789_17795 = G__17816;
          chunk__17790_17796 = G__17817;
          count__17791_17797 = G__17818;
          i__17792_17798 = G__17819;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__17826_17832 = cljs.core.seq(attrs);
  var chunk__17827_17833 = null;
  var count__17828_17834 = 0;
  var i__17829_17835 = 0;
  while (true) {
    if (i__17829_17835 < count__17828_17834) {
      var vec__17830_17836 = chunk__17827_17833.cljs$core$IIndexed$_nth$arity$2(null, i__17829_17835);
      var name_17837 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17830_17836, 0, null);
      var value_17838 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17830_17836, 1, null);
      domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(content, name_17837, cljs.core.array_seq([value_17838], 0));
      var G__17839 = seq__17826_17832;
      var G__17840 = chunk__17827_17833;
      var G__17841 = count__17828_17834;
      var G__17842 = i__17829_17835 + 1;
      seq__17826_17832 = G__17839;
      chunk__17827_17833 = G__17840;
      count__17828_17834 = G__17841;
      i__17829_17835 = G__17842;
      continue;
    } else {
      var temp__4126__auto___17843 = cljs.core.seq(seq__17826_17832);
      if (temp__4126__auto___17843) {
        var seq__17826_17844__$1 = temp__4126__auto___17843;
        if (cljs.core.chunked_seq_QMARK_(seq__17826_17844__$1)) {
          var c__4530__auto___17845 = cljs.core.chunk_first(seq__17826_17844__$1);
          var G__17846 = cljs.core.chunk_rest(seq__17826_17844__$1);
          var G__17847 = c__4530__auto___17845;
          var G__17848 = cljs.core.count(c__4530__auto___17845);
          var G__17849 = 0;
          seq__17826_17832 = G__17846;
          chunk__17827_17833 = G__17847;
          count__17828_17834 = G__17848;
          i__17829_17835 = G__17849;
          continue;
        } else {
          var vec__17831_17850 = cljs.core.first(seq__17826_17844__$1);
          var name_17851 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17831_17850, 0, null);
          var value_17852 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17831_17850, 1, null);
          domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(content, name_17851, cljs.core.array_seq([value_17852], 0));
          var G__17853 = cljs.core.next(seq__17826_17844__$1);
          var G__17854 = null;
          var G__17855 = 0;
          var G__17856 = 0;
          seq__17826_17832 = G__17853;
          chunk__17827_17833 = G__17854;
          count__17828_17834 = G__17855;
          i__17829_17835 = G__17856;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  var G__17859 = domina.single_node(content);
  var G__17860 = class$;
  return goog.dom.classes.has(G__17859, G__17860);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__17869_17877 = cljs.core.seq(domina.nodes(content));
  var chunk__17870_17878 = null;
  var count__17871_17879 = 0;
  var i__17872_17880 = 0;
  while (true) {
    if (i__17872_17880 < count__17871_17879) {
      var node_17881 = chunk__17870_17878.cljs$core$IIndexed$_nth$arity$2(null, i__17872_17880);
      var G__17873_17882 = node_17881;
      var G__17874_17883 = class$;
      goog.dom.classes.add(G__17873_17882, G__17874_17883);
      var G__17884 = seq__17869_17877;
      var G__17885 = chunk__17870_17878;
      var G__17886 = count__17871_17879;
      var G__17887 = i__17872_17880 + 1;
      seq__17869_17877 = G__17884;
      chunk__17870_17878 = G__17885;
      count__17871_17879 = G__17886;
      i__17872_17880 = G__17887;
      continue;
    } else {
      var temp__4126__auto___17888 = cljs.core.seq(seq__17869_17877);
      if (temp__4126__auto___17888) {
        var seq__17869_17889__$1 = temp__4126__auto___17888;
        if (cljs.core.chunked_seq_QMARK_(seq__17869_17889__$1)) {
          var c__4530__auto___17890 = cljs.core.chunk_first(seq__17869_17889__$1);
          var G__17891 = cljs.core.chunk_rest(seq__17869_17889__$1);
          var G__17892 = c__4530__auto___17890;
          var G__17893 = cljs.core.count(c__4530__auto___17890);
          var G__17894 = 0;
          seq__17869_17877 = G__17891;
          chunk__17870_17878 = G__17892;
          count__17871_17879 = G__17893;
          i__17872_17880 = G__17894;
          continue;
        } else {
          var node_17895 = cljs.core.first(seq__17869_17889__$1);
          var G__17875_17896 = node_17895;
          var G__17876_17897 = class$;
          goog.dom.classes.add(G__17875_17896, G__17876_17897);
          var G__17898 = cljs.core.next(seq__17869_17889__$1);
          var G__17899 = null;
          var G__17900 = 0;
          var G__17901 = 0;
          seq__17869_17877 = G__17898;
          chunk__17870_17878 = G__17899;
          count__17871_17879 = G__17900;
          i__17872_17880 = G__17901;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__17910_17918 = cljs.core.seq(domina.nodes(content));
  var chunk__17911_17919 = null;
  var count__17912_17920 = 0;
  var i__17913_17921 = 0;
  while (true) {
    if (i__17913_17921 < count__17912_17920) {
      var node_17922 = chunk__17911_17919.cljs$core$IIndexed$_nth$arity$2(null, i__17913_17921);
      var G__17914_17923 = node_17922;
      var G__17915_17924 = class$;
      goog.dom.classes.remove(G__17914_17923, G__17915_17924);
      var G__17925 = seq__17910_17918;
      var G__17926 = chunk__17911_17919;
      var G__17927 = count__17912_17920;
      var G__17928 = i__17913_17921 + 1;
      seq__17910_17918 = G__17925;
      chunk__17911_17919 = G__17926;
      count__17912_17920 = G__17927;
      i__17913_17921 = G__17928;
      continue;
    } else {
      var temp__4126__auto___17929 = cljs.core.seq(seq__17910_17918);
      if (temp__4126__auto___17929) {
        var seq__17910_17930__$1 = temp__4126__auto___17929;
        if (cljs.core.chunked_seq_QMARK_(seq__17910_17930__$1)) {
          var c__4530__auto___17931 = cljs.core.chunk_first(seq__17910_17930__$1);
          var G__17932 = cljs.core.chunk_rest(seq__17910_17930__$1);
          var G__17933 = c__4530__auto___17931;
          var G__17934 = cljs.core.count(c__4530__auto___17931);
          var G__17935 = 0;
          seq__17910_17918 = G__17932;
          chunk__17911_17919 = G__17933;
          count__17912_17920 = G__17934;
          i__17913_17921 = G__17935;
          continue;
        } else {
          var node_17936 = cljs.core.first(seq__17910_17930__$1);
          var G__17916_17937 = node_17936;
          var G__17917_17938 = class$;
          goog.dom.classes.remove(G__17916_17937, G__17917_17938);
          var G__17939 = cljs.core.next(seq__17910_17930__$1);
          var G__17940 = null;
          var G__17941 = 0;
          var G__17942 = 0;
          seq__17910_17918 = G__17939;
          chunk__17911_17919 = G__17940;
          count__17912_17920 = G__17941;
          i__17913_17921 = G__17942;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__17951_17959 = cljs.core.seq(domina.nodes(content));
  var chunk__17952_17960 = null;
  var count__17953_17961 = 0;
  var i__17954_17962 = 0;
  while (true) {
    if (i__17954_17962 < count__17953_17961) {
      var node_17963 = chunk__17952_17960.cljs$core$IIndexed$_nth$arity$2(null, i__17954_17962);
      var G__17955_17964 = node_17963;
      var G__17956_17965 = class$;
      goog.dom.classes.toggle(G__17955_17964, G__17956_17965);
      var G__17966 = seq__17951_17959;
      var G__17967 = chunk__17952_17960;
      var G__17968 = count__17953_17961;
      var G__17969 = i__17954_17962 + 1;
      seq__17951_17959 = G__17966;
      chunk__17952_17960 = G__17967;
      count__17953_17961 = G__17968;
      i__17954_17962 = G__17969;
      continue;
    } else {
      var temp__4126__auto___17970 = cljs.core.seq(seq__17951_17959);
      if (temp__4126__auto___17970) {
        var seq__17951_17971__$1 = temp__4126__auto___17970;
        if (cljs.core.chunked_seq_QMARK_(seq__17951_17971__$1)) {
          var c__4530__auto___17972 = cljs.core.chunk_first(seq__17951_17971__$1);
          var G__17973 = cljs.core.chunk_rest(seq__17951_17971__$1);
          var G__17974 = c__4530__auto___17972;
          var G__17975 = cljs.core.count(c__4530__auto___17972);
          var G__17976 = 0;
          seq__17951_17959 = G__17973;
          chunk__17952_17960 = G__17974;
          count__17953_17961 = G__17975;
          i__17954_17962 = G__17976;
          continue;
        } else {
          var node_17977 = cljs.core.first(seq__17951_17971__$1);
          var G__17957_17978 = node_17977;
          var G__17958_17979 = class$;
          goog.dom.classes.toggle(G__17957_17978, G__17958_17979);
          var G__17980 = cljs.core.next(seq__17951_17971__$1);
          var G__17981 = null;
          var G__17982 = 0;
          var G__17983 = 0;
          seq__17951_17959 = G__17980;
          chunk__17952_17960 = G__17981;
          count__17953_17961 = G__17982;
          i__17954_17962 = G__17983;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq(function() {
    var G__17985 = domina.single_node(content);
    return goog.dom.classes.get(G__17985);
  }());
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_18002__$1 = cljs.core.coll_QMARK_(classes) ? clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", classes) : classes;
  var seq__17994_18003 = cljs.core.seq(domina.nodes(content));
  var chunk__17995_18004 = null;
  var count__17996_18005 = 0;
  var i__17997_18006 = 0;
  while (true) {
    if (i__17997_18006 < count__17996_18005) {
      var node_18007 = chunk__17995_18004.cljs$core$IIndexed$_nth$arity$2(null, i__17997_18006);
      var G__17998_18008 = node_18007;
      var G__17999_18009 = classes_18002__$1;
      goog.dom.classes.set(G__17998_18008, G__17999_18009);
      var G__18010 = seq__17994_18003;
      var G__18011 = chunk__17995_18004;
      var G__18012 = count__17996_18005;
      var G__18013 = i__17997_18006 + 1;
      seq__17994_18003 = G__18010;
      chunk__17995_18004 = G__18011;
      count__17996_18005 = G__18012;
      i__17997_18006 = G__18013;
      continue;
    } else {
      var temp__4126__auto___18014 = cljs.core.seq(seq__17994_18003);
      if (temp__4126__auto___18014) {
        var seq__17994_18015__$1 = temp__4126__auto___18014;
        if (cljs.core.chunked_seq_QMARK_(seq__17994_18015__$1)) {
          var c__4530__auto___18016 = cljs.core.chunk_first(seq__17994_18015__$1);
          var G__18017 = cljs.core.chunk_rest(seq__17994_18015__$1);
          var G__18018 = c__4530__auto___18016;
          var G__18019 = cljs.core.count(c__4530__auto___18016);
          var G__18020 = 0;
          seq__17994_18003 = G__18017;
          chunk__17995_18004 = G__18018;
          count__17996_18005 = G__18019;
          i__17997_18006 = G__18020;
          continue;
        } else {
          var node_18021 = cljs.core.first(seq__17994_18015__$1);
          var G__18000_18022 = node_18021;
          var G__18001_18023 = classes_18002__$1;
          goog.dom.classes.set(G__18000_18022, G__18001_18023);
          var G__18024 = cljs.core.next(seq__17994_18015__$1);
          var G__18025 = null;
          var G__18026 = 0;
          var G__18027 = 0;
          seq__17994_18003 = G__18024;
          chunk__17995_18004 = G__18025;
          count__17996_18005 = G__18026;
          i__17997_18006 = G__18027;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  var G__18030 = function() {
    var G__18031 = domina.single_node(content);
    return goog.dom.getTextContent(G__18031);
  }();
  return goog.string.trim(G__18030);
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__18040_18048 = cljs.core.seq(domina.nodes(content));
  var chunk__18041_18049 = null;
  var count__18042_18050 = 0;
  var i__18043_18051 = 0;
  while (true) {
    if (i__18043_18051 < count__18042_18050) {
      var node_18052 = chunk__18041_18049.cljs$core$IIndexed$_nth$arity$2(null, i__18043_18051);
      var G__18044_18053 = node_18052;
      var G__18045_18054 = value;
      goog.dom.setTextContent(G__18044_18053, G__18045_18054);
      var G__18055 = seq__18040_18048;
      var G__18056 = chunk__18041_18049;
      var G__18057 = count__18042_18050;
      var G__18058 = i__18043_18051 + 1;
      seq__18040_18048 = G__18055;
      chunk__18041_18049 = G__18056;
      count__18042_18050 = G__18057;
      i__18043_18051 = G__18058;
      continue;
    } else {
      var temp__4126__auto___18059 = cljs.core.seq(seq__18040_18048);
      if (temp__4126__auto___18059) {
        var seq__18040_18060__$1 = temp__4126__auto___18059;
        if (cljs.core.chunked_seq_QMARK_(seq__18040_18060__$1)) {
          var c__4530__auto___18061 = cljs.core.chunk_first(seq__18040_18060__$1);
          var G__18062 = cljs.core.chunk_rest(seq__18040_18060__$1);
          var G__18063 = c__4530__auto___18061;
          var G__18064 = cljs.core.count(c__4530__auto___18061);
          var G__18065 = 0;
          seq__18040_18048 = G__18062;
          chunk__18041_18049 = G__18063;
          count__18042_18050 = G__18064;
          i__18043_18051 = G__18065;
          continue;
        } else {
          var node_18066 = cljs.core.first(seq__18040_18060__$1);
          var G__18046_18067 = node_18066;
          var G__18047_18068 = value;
          goog.dom.setTextContent(G__18046_18067, G__18047_18068);
          var G__18069 = cljs.core.next(seq__18040_18060__$1);
          var G__18070 = null;
          var G__18071 = 0;
          var G__18072 = 0;
          seq__18040_18048 = G__18069;
          chunk__18041_18049 = G__18070;
          count__18042_18050 = G__18071;
          i__18043_18051 = G__18072;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  var G__18074 = domina.single_node(content);
  return goog.dom.forms.getValue(G__18074);
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__18083_18091 = cljs.core.seq(domina.nodes(content));
  var chunk__18084_18092 = null;
  var count__18085_18093 = 0;
  var i__18086_18094 = 0;
  while (true) {
    if (i__18086_18094 < count__18085_18093) {
      var node_18095 = chunk__18084_18092.cljs$core$IIndexed$_nth$arity$2(null, i__18086_18094);
      var G__18087_18096 = node_18095;
      var G__18088_18097 = value;
      goog.dom.forms.setValue(G__18087_18096, G__18088_18097);
      var G__18098 = seq__18083_18091;
      var G__18099 = chunk__18084_18092;
      var G__18100 = count__18085_18093;
      var G__18101 = i__18086_18094 + 1;
      seq__18083_18091 = G__18098;
      chunk__18084_18092 = G__18099;
      count__18085_18093 = G__18100;
      i__18086_18094 = G__18101;
      continue;
    } else {
      var temp__4126__auto___18102 = cljs.core.seq(seq__18083_18091);
      if (temp__4126__auto___18102) {
        var seq__18083_18103__$1 = temp__4126__auto___18102;
        if (cljs.core.chunked_seq_QMARK_(seq__18083_18103__$1)) {
          var c__4530__auto___18104 = cljs.core.chunk_first(seq__18083_18103__$1);
          var G__18105 = cljs.core.chunk_rest(seq__18083_18103__$1);
          var G__18106 = c__4530__auto___18104;
          var G__18107 = cljs.core.count(c__4530__auto___18104);
          var G__18108 = 0;
          seq__18083_18091 = G__18105;
          chunk__18084_18092 = G__18106;
          count__18085_18093 = G__18107;
          i__18086_18094 = G__18108;
          continue;
        } else {
          var node_18109 = cljs.core.first(seq__18083_18103__$1);
          var G__18089_18110 = node_18109;
          var G__18090_18111 = value;
          goog.dom.forms.setValue(G__18089_18110, G__18090_18111);
          var G__18112 = cljs.core.next(seq__18083_18103__$1);
          var G__18113 = null;
          var G__18114 = 0;
          var G__18115 = 0;
          seq__18083_18091 = G__18112;
          chunk__18084_18092 = G__18113;
          count__18085_18093 = G__18114;
          i__18086_18094 = G__18115;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node(content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_(domina.destroy_children_BANG_(content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not(cljs.core.re_find(domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find(domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second(cljs.core.re_find(domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_(domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = allows_inner_html_QMARK_;
    if (and__3731__auto__) {
      var and__3731__auto____$1 = function() {
        var or__3743__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3743__auto__)) {
          return or__3743__auto__;
        } else {
          return cljs.core.not(leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3731__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3731__auto____$1;
      }
    } else {
      return and__3731__auto__;
    }
  }())) {
    var value_18126 = clojure.string.replace(html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__18122_18127 = cljs.core.seq(domina.nodes(content));
      var chunk__18123_18128 = null;
      var count__18124_18129 = 0;
      var i__18125_18130 = 0;
      while (true) {
        if (i__18125_18130 < count__18124_18129) {
          var node_18131 = chunk__18123_18128.cljs$core$IIndexed$_nth$arity$2(null, i__18125_18130);
          node_18131.innerHTML = value_18126;
          var G__18132 = seq__18122_18127;
          var G__18133 = chunk__18123_18128;
          var G__18134 = count__18124_18129;
          var G__18135 = i__18125_18130 + 1;
          seq__18122_18127 = G__18132;
          chunk__18123_18128 = G__18133;
          count__18124_18129 = G__18134;
          i__18125_18130 = G__18135;
          continue;
        } else {
          var temp__4126__auto___18136 = cljs.core.seq(seq__18122_18127);
          if (temp__4126__auto___18136) {
            var seq__18122_18137__$1 = temp__4126__auto___18136;
            if (cljs.core.chunked_seq_QMARK_(seq__18122_18137__$1)) {
              var c__4530__auto___18138 = cljs.core.chunk_first(seq__18122_18137__$1);
              var G__18139 = cljs.core.chunk_rest(seq__18122_18137__$1);
              var G__18140 = c__4530__auto___18138;
              var G__18141 = cljs.core.count(c__4530__auto___18138);
              var G__18142 = 0;
              seq__18122_18127 = G__18139;
              chunk__18123_18128 = G__18140;
              count__18124_18129 = G__18141;
              i__18125_18130 = G__18142;
              continue;
            } else {
              var node_18143 = cljs.core.first(seq__18122_18137__$1);
              node_18143.innerHTML = value_18126;
              var G__18144 = cljs.core.next(seq__18122_18137__$1);
              var G__18145 = null;
              var G__18146 = 0;
              var G__18147 = 0;
              seq__18122_18127 = G__18144;
              chunk__18123_18128 = G__18145;
              count__18124_18129 = G__18146;
              i__18125_18130 = G__18147;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e18121) {
      if (e18121 instanceof Error) {
        var e_18148 = e18121;
        domina.replace_children_BANG_(content, value_18126);
      } else {
        throw e18121;
      }
    }
  } else {
    domina.replace_children_BANG_(content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_(content, inner_content);
  } else {
    return domina.replace_children_BANG_(content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.cljs$core$IFn$_invoke$arity$3(node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node(node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3731__auto__ = bubble;
      if (cljs.core.truth_(and__3731__auto__)) {
        return value == null;
      } else {
        return and__3731__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node(node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.cljs$core$IFn$_invoke$arity$3(parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3743__auto__ = domina.single_node(node).__domina_data;
    if (cljs.core.truth_(or__3743__auto__)) {
      return or__3743__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node(node).__domina_data = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes(parent_content);
  var children = domina.nodes(child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__18165_18173 = cljs.core.seq(children);
    var chunk__18166_18174 = null;
    var count__18167_18175 = 0;
    var i__18168_18176 = 0;
    while (true) {
      if (i__18168_18176 < count__18167_18175) {
        var child_18177 = chunk__18166_18174.cljs$core$IIndexed$_nth$arity$2(null, i__18168_18176);
        frag.appendChild(child_18177);
        var G__18178 = seq__18165_18173;
        var G__18179 = chunk__18166_18174;
        var G__18180 = count__18167_18175;
        var G__18181 = i__18168_18176 + 1;
        seq__18165_18173 = G__18178;
        chunk__18166_18174 = G__18179;
        count__18167_18175 = G__18180;
        i__18168_18176 = G__18181;
        continue;
      } else {
        var temp__4126__auto___18182 = cljs.core.seq(seq__18165_18173);
        if (temp__4126__auto___18182) {
          var seq__18165_18183__$1 = temp__4126__auto___18182;
          if (cljs.core.chunked_seq_QMARK_(seq__18165_18183__$1)) {
            var c__4530__auto___18184 = cljs.core.chunk_first(seq__18165_18183__$1);
            var G__18185 = cljs.core.chunk_rest(seq__18165_18183__$1);
            var G__18186 = c__4530__auto___18184;
            var G__18187 = cljs.core.count(c__4530__auto___18184);
            var G__18188 = 0;
            seq__18165_18173 = G__18185;
            chunk__18166_18174 = G__18186;
            count__18167_18175 = G__18187;
            i__18168_18176 = G__18188;
            continue;
          } else {
            var child_18189 = cljs.core.first(seq__18165_18183__$1);
            frag.appendChild(child_18189);
            var G__18190 = cljs.core.next(seq__18165_18183__$1);
            var G__18191 = null;
            var G__18192 = 0;
            var G__18193 = 0;
            seq__18165_18173 = G__18190;
            chunk__18166_18174 = G__18191;
            count__18167_18175 = G__18192;
            i__18168_18176 = G__18193;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(cljs.core.count(parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq(parents)) {
    var G__18169_18194 = cljs.core.first(parents);
    var G__18170_18195 = first_child;
    f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18169_18194, G__18170_18195) : f.call(null, G__18169_18194, G__18170_18195);
    return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(parents, children, first_child, other_children) {
      return function(p1__18155_SHARP_, p2__18156_SHARP_) {
        var G__18171 = p1__18155_SHARP_;
        var G__18172 = p2__18156_SHARP_;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18171, G__18172) : f.call(null, G__18171, G__18172);
      };
    }(parents, children, first_child, other_children), cljs.core.rest(parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2(nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons(nl.item(n), lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2(nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2(nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons(nl[n], lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2(nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1(nl);
  } else {
    return domina.lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1(nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3731__auto__ = obj;
  if (cljs.core.truth_(and__3731__auto__)) {
    var and__3731__auto____$1 = cljs.core.not(obj.nodeName);
    if (and__3731__auto____$1) {
      return obj.length;
    } else {
      return and__3731__auto____$1;
    }
  } else {
    return and__3731__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__18205 = list_thing;
      if (G__18205) {
        var bit__4424__auto__ = G__18205.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4424__auto__ || G__18205.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18205.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18205);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18205);
      }
    }()) {
      return cljs.core.seq(list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_(list_thing))) {
        return domina.lazy_nodelist(list_thing);
      } else {
        return cljs.core.seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__18206 = content;
      if (G__18206) {
        var bit__4424__auto__ = G__18206.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4424__auto__ || G__18206.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18206.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18206);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18206);
      }
    }()) {
      return cljs.core.seq(content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_(content))) {
        return domina.lazy_nodelist(content);
      } else {
        return cljs.core.seq(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__18207 = content;
      if (G__18207) {
        var bit__4424__auto__ = G__18207.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4424__auto__ || G__18207.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18207.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18207);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__18207);
      }
    }()) {
      return cljs.core.first(content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_(content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(domina.nodes(domina.string_to_dom(s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node(domina.string_to_dom(s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist(nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist(nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist(coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return-1;
    }
    var l = tret.length;
    if (cl == l && ci >= 0 && cl >= 0) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (;te;te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx;
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond);
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return!!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw "";
          }
          var r = root[qsa](tq);
          if (goog.userAgent.IE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx;
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te;te = arr[x];x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (goog.userAgent.IE && arr.commentStrip) {
        try {
          for (var x = 1, te;te = arr[x];x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te;te = arr[x];x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, root) {
    if (!query) {
      return[];
    }
    if (query.constructor == Array) {
      return(query);
    }
    if (!goog.isString(query)) {
      return[query];
    }
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return[];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return function() {
    var G__19214 = "html";
    return goog.dom.getElementsByTagNameAndClass(G__19214);
  }()[0];
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.cljs$core$IFn$_invoke$arity$2(domina.css.root_element(), expr);
  };
  var sel__2 = function(base, expr) {
    if (typeof domina.css.t19226 !== "undefined") {
    } else {
      domina.css.t19226 = function(expr, base, sel, meta19227) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta19227 = meta19227;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.css.t19226.prototype.domina$DomContent$ = true;
      domina.css.t19226.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(___$1) {
          return function(p1__19215_SHARP_) {
            return domina.normalize_seq(function() {
              var G__19229 = self__.expr;
              var G__19230 = p1__19215_SHARP_;
              return goog.dom.query(G__19229, G__19230);
            }());
          };
        }(___$1), cljs.core.array_seq([domina.nodes(self__.base)], 0));
      };
      domina.css.t19226.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs.core.nil_QMARK_), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(___$1) {
          return function(p1__19216_SHARP_) {
            return domina.normalize_seq(function() {
              var G__19231 = self__.expr;
              var G__19232 = p1__19216_SHARP_;
              return goog.dom.query(G__19231, G__19232);
            }());
          };
        }(___$1), cljs.core.array_seq([domina.nodes(self__.base)], 0))));
      };
      domina.css.t19226.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19228) {
        var self__ = this;
        var _19228__$1 = this;
        return self__.meta19227;
      };
      domina.css.t19226.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19228, meta19227__$1) {
        var self__ = this;
        var _19228__$1 = this;
        return new domina.css.t19226(self__.expr, self__.base, self__.sel, meta19227__$1);
      };
      domina.css.t19226.cljs$lang$type = true;
      domina.css.t19226.cljs$lang$ctorStr = "domina.css/t19226";
      domina.css.t19226.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
        return cljs.core._write(writer__4331__auto__, "domina.css/t19226");
      };
      domina.css.__GT_t19226 = function __GT_t19226(expr__$1, base__$1, sel__$1, meta19227) {
        return new domina.css.t19226(expr__$1, base__$1, sel__$1, meta19227);
      };
    }
    return new domina.css.t19226(expr, base, sel, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 75, cljs.core.constant$keyword$9, 20, cljs.core.constant$keyword$10, 16, cljs.core.constant$keyword$11, 14, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/domina/css.cljs"], null));
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel;
}();
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow);
};
goog.dom.ViewportSizeMonitor.removeInstanceForWindow = function(opt_window) {
  var uid = goog.getUid(opt_window || window);
  goog.dispose(goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid]);
  delete goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid];
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null;
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if (this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null;
  }
  this.window_ = null;
  this.size_ = null;
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  var size = goog.dom.getViewportSize(this.window_);
  if (!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE);
  }
};
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = function() {
    var G__19193 = node;
    return goog.dom.getOwnerDocument(G__19193);
  }();
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3731__auto__)) {
      return doc.setProperty;
    } else {
      return and__3731__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    var G__19194 = node;
    var G__19195 = path;
    return technique_1.cljs$core$IFn$_invoke$arity$2 ? technique_1.cljs$core$IFn$_invoke$arity$2(G__19194, G__19195) : technique_1.call(null, G__19194, G__19195);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      var G__19196 = null;
      var G__19197 = doc;
      var G__19198 = node;
      var G__19199 = path;
      return technique_2.cljs$core$IFn$_invoke$arity$4 ? technique_2.cljs$core$IFn$_invoke$arity$4(G__19196, G__19197, G__19198, G__19199) : technique_2.call(null, G__19196, G__19197, G__19198, G__19199);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_(expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_(expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__19200 = i + 1;
        var G__19201 = cljs.core.cons(result.snapshotItem(i), acc);
        i = G__19200;
        acc = G__19201;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return function() {
    var G__19203 = "html";
    return goog.dom.getElementsByTagNameAndClass(G__19203);
  }()[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.cljs$core$IFn$_invoke$arity$2(domina.xpath.root_element(), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t19209 !== "undefined") {
    } else {
      domina.xpath.t19209 = function(expr, base, xpath, meta19210) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta19210 = meta19210;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t19209.prototype.domina$DomContent$ = true;
      domina.xpath.t19209.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(domina.xpath.select_nodes, self__.expr), cljs.core.array_seq([domina.nodes(self__.base)], 0));
      };
      domina.xpath.t19209.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs.core.nil_QMARK_), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(domina.xpath.select_node, self__.expr), domina.nodes(self__.base))));
      };
      domina.xpath.t19209.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19211) {
        var self__ = this;
        var _19211__$1 = this;
        return self__.meta19210;
      };
      domina.xpath.t19209.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19211, meta19210__$1) {
        var self__ = this;
        var _19211__$1 = this;
        return new domina.xpath.t19209(self__.expr, self__.base, self__.xpath, meta19210__$1);
      };
      domina.xpath.t19209.cljs$lang$type = true;
      domina.xpath.t19209.cljs$lang$ctorStr = "domina.xpath/t19209";
      domina.xpath.t19209.cljs$lang$ctorPrWriter = function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
        return cljs.core._write(writer__4331__auto__, "domina.xpath/t19209");
      };
      domina.xpath.__GT_t19209 = function __GT_t19209(expr__$1, base__$1, xpath__$1, meta19210) {
        return new domina.xpath.t19209(expr__$1, base__$1, xpath__$1, meta19210);
      };
    }
    return new domina.xpath.t19209(expr, base, xpath, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 79, cljs.core.constant$keyword$9, 59, cljs.core.constant$keyword$10, 16, cljs.core.constant$keyword$11, 55, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/domina/xpath.cljs"], null));
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_str = function sel_to_str(input) {
  var item = cljs.core.first(input);
  var rest = cljs.core.rest(input);
  var end = cljs.core.empty_QMARK_(rest) ? cljs.core.list(cljs.core.List.EMPTY) : sel_to_str(rest);
  if (item instanceof cljs.core.Keyword) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(item, rest, end) {
      return function(p1__19132_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19132_SHARP_, cljs.core.name(item));
      };
    }(item, rest, end), end);
  } else {
    if (typeof item === "string") {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(item, rest, end) {
        return function(p1__19133_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19133_SHARP_, item);
        };
      }(item, rest, end), end);
    } else {
      if (cljs.core.set_QMARK_(item)) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(item, rest, end) {
          return function(r1, it) {
            return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(r1, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(item, rest, end) {
              return function(p1__19134_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19134_SHARP_, it);
              };
            }(item, rest, end), end));
          };
        }(item, rest, end), cljs.core.PersistentVector.EMPTY, cljs.core.flatten(sel_to_str(item)));
      } else {
        if (cljs.core.coll_QMARK_(item)) {
          var x1 = sel_to_str(item);
          var sub = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(x1, item, rest, end) {
            return function(p1__19135_SHARP_) {
              return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, p1__19135_SHARP_);
            };
          }(x1, item, rest, end), sel_to_str(item));
          var iter__4499__auto__ = function(x1, sub, item, rest, end) {
            return function iter__19151(s__19152) {
              return new cljs.core.LazySeq(null, function(x1, sub, item, rest, end) {
                return function() {
                  var s__19152__$1 = s__19152;
                  while (true) {
                    var temp__4126__auto__ = cljs.core.seq(s__19152__$1);
                    if (temp__4126__auto__) {
                      var xs__4624__auto__ = temp__4126__auto__;
                      var s = cljs.core.first(xs__4624__auto__);
                      var iterys__4495__auto__ = function(s__19152__$1, s, xs__4624__auto__, temp__4126__auto__, x1, sub, item, rest, end) {
                        return function iter__19153(s__19154) {
                          return new cljs.core.LazySeq(null, function(s__19152__$1, s, xs__4624__auto__, temp__4126__auto__, x1, sub, item, rest, end) {
                            return function() {
                              var s__19154__$1 = s__19154;
                              while (true) {
                                var temp__4126__auto____$1 = cljs.core.seq(s__19154__$1);
                                if (temp__4126__auto____$1) {
                                  var s__19154__$2 = temp__4126__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_(s__19154__$2)) {
                                    var c__4497__auto__ = cljs.core.chunk_first(s__19154__$2);
                                    var size__4498__auto__ = cljs.core.count(c__4497__auto__);
                                    var b__19156 = cljs.core.chunk_buffer(size__4498__auto__);
                                    if (function() {
                                      var i__19155 = 0;
                                      while (true) {
                                        if (i__19155 < size__4498__auto__) {
                                          var e = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4497__auto__, i__19155);
                                          cljs.core.chunk_append(b__19156, function() {
                                            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s, e], 0));
                                            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(e, s);
                                          }());
                                          var G__19162 = i__19155 + 1;
                                          i__19155 = G__19162;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__19156), iter__19153(cljs.core.chunk_rest(s__19154__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__19156), null);
                                    }
                                  } else {
                                    var e = cljs.core.first(s__19154__$2);
                                    return cljs.core.cons(function() {
                                      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s, e], 0));
                                      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(e, s);
                                    }(), iter__19153(cljs.core.rest(s__19154__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(s__19152__$1, s, xs__4624__auto__, temp__4126__auto__, x1, sub, item, rest, end), null, null);
                        };
                      }(s__19152__$1, s, xs__4624__auto__, temp__4126__auto__, x1, sub, item, rest, end);
                      var fs__4496__auto__ = cljs.core.seq(iterys__4495__auto__(end));
                      if (fs__4496__auto__) {
                        return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4496__auto__, iter__19151(cljs.core.rest(s__19152__$1)));
                      } else {
                        var G__19163 = cljs.core.rest(s__19152__$1);
                        s__19152__$1 = G__19163;
                        continue;
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(x1, sub, item, rest, end), null, null);
            };
          }(x1, sub, item, rest, end);
          return iter__4499__auto__(sub);
        } else {
          return input;
        }
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    var temp__4124__auto__ = enfocus.enlive.syntax.sel_to_str(sel);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ors = temp__4124__auto__;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose(" ", cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.interpose(",", ors))));
    } else {
      return null;
    }
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts = function(p__19166) {
    var vec__19167 = p__19166;
    var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19167, 0, null);
    var y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19167, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name(x)), cljs.core.str(op), cljs.core.str("\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("");
  };
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(ts, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, elms)));
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__19168_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name(p1__19168_SHARP_)), cljs.core.str("]")].join("");
    }, elms));
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19169__i = 0, G__19169__a = new Array(arguments.length - 0);
      while (G__19169__i < G__19169__a.length) {
        G__19169__a[G__19169__i] = arguments[G__19169__i + 0];
        ++G__19169__i;
      }
      elms = new cljs.core.IndexedSeq(G__19169__a, 0);
    }
    return attr_QMARK___delegate.call(this, elms);
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__19170) {
    var elms = cljs.core.seq(arglist__19170);
    return attr_QMARK___delegate(elms);
  };
  attr_QMARK_.cljs$core$IFn$_invoke$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_;
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs("", elms);
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19171__i = 0, G__19171__a = new Array(arguments.length - 0);
      while (G__19171__i < G__19171__a.length) {
        G__19171__a[G__19171__i] = arguments[G__19171__i + 0];
        ++G__19171__i;
      }
      elms = new cljs.core.IndexedSeq(G__19171__a, 0);
    }
    return attr_EQ___delegate.call(this, elms);
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__19172) {
    var elms = cljs.core.seq(arglist__19172);
    return attr_EQ___delegate(elms);
  };
  attr_EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_EQ___delegate;
  return attr_EQ_;
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name(x)), cljs.core.str("~\x3d'"), cljs.core.str(y), cljs.core.str("']")].join("");
    };
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(ts, vals));
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if (arguments.length > 1) {
      var G__19173__i = 0, G__19173__a = new Array(arguments.length - 1);
      while (G__19173__i < G__19173__a.length) {
        G__19173__a[G__19173__i] = arguments[G__19173__i + 1];
        ++G__19173__i;
      }
      vals = new cljs.core.IndexedSeq(G__19173__a, 0);
    }
    return attr_has__delegate.call(this, x, vals);
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__19174) {
    var x = cljs.core.first(arglist__19174);
    var vals = cljs.core.rest(arglist__19174);
    return attr_has__delegate(x, vals);
  };
  attr_has.cljs$core$IFn$_invoke$arity$variadic = attr_has__delegate;
  return attr_has;
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs("^", elms);
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19175__i = 0, G__19175__a = new Array(arguments.length - 0);
      while (G__19175__i < G__19175__a.length) {
        G__19175__a[G__19175__i] = arguments[G__19175__i + 0];
        ++G__19175__i;
      }
      elms = new cljs.core.IndexedSeq(G__19175__a, 0);
    }
    return attr_starts__delegate.call(this, elms);
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__19176) {
    var elms = cljs.core.seq(arglist__19176);
    return attr_starts__delegate(elms);
  };
  attr_starts.cljs$core$IFn$_invoke$arity$variadic = attr_starts__delegate;
  return attr_starts;
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs("$", elms);
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19177__i = 0, G__19177__a = new Array(arguments.length - 0);
      while (G__19177__i < G__19177__a.length) {
        G__19177__a[G__19177__i] = arguments[G__19177__i + 0];
        ++G__19177__i;
      }
      elms = new cljs.core.IndexedSeq(G__19177__a, 0);
    }
    return attr_ends__delegate.call(this, elms);
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__19178) {
    var elms = cljs.core.seq(arglist__19178);
    return attr_ends__delegate(elms);
  };
  attr_ends.cljs$core$IFn$_invoke$arity$variadic = attr_ends__delegate;
  return attr_ends;
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs("*", elms);
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19179__i = 0, G__19179__a = new Array(arguments.length - 0);
      while (G__19179__i < G__19179__a.length) {
        G__19179__a[G__19179__i] = arguments[G__19179__i + 0];
        ++G__19179__i;
      }
      elms = new cljs.core.IndexedSeq(G__19179__a, 0);
    }
    return attr_contains__delegate.call(this, elms);
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__19180) {
    var elms = cljs.core.seq(arglist__19180);
    return attr_contains__delegate(elms);
  };
  attr_contains.cljs$core$IFn$_invoke$arity$variadic = attr_contains__delegate;
  return attr_contains;
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs("|", elms);
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if (arguments.length > 0) {
      var G__19181__i = 0, G__19181__a = new Array(arguments.length - 0);
      while (G__19181__i < G__19181__a.length) {
        G__19181__a[G__19181__i] = arguments[G__19181__i + 0];
        ++G__19181__i;
      }
      elms = new cljs.core.IndexedSeq(G__19181__a, 0);
    }
    return attr_BAR__EQ___delegate.call(this, elms);
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__19182) {
    var elms = cljs.core.seq(arglist__19182);
    return attr_BAR__EQ___delegate(elms);
  };
  attr_BAR__EQ_.cljs$core$IFn$_invoke$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_;
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("");
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("");
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_op.cljs$core$IFn$_invoke$arity$2 = nth_op__2;
  nth_op.cljs$core$IFn$_invoke$arity$3 = nth_op__3;
  return nth_op;
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2("child", x);
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3("child", x, y);
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_child.cljs$core$IFn$_invoke$arity$1 = nth_child__1;
  nth_child.cljs$core$IFn$_invoke$arity$2 = nth_child__2;
  return nth_child;
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2("last-child", x);
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3("last-child", x, y);
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_child.cljs$core$IFn$_invoke$arity$1 = nth_last_child__1;
  nth_last_child.cljs$core$IFn$_invoke$arity$2 = nth_last_child__2;
  return nth_last_child;
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2("of-type", x);
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3("of-type", x, y);
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_of_type.cljs$core$IFn$_invoke$arity$1 = nth_of_type__1;
  nth_of_type.cljs$core$IFn$_invoke$arity$2 = nth_of_type__2;
  return nth_of_type;
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$2("last-of-type", x);
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.cljs$core$IFn$_invoke$arity$3("last-of-type", x, y);
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth_last_of_type.cljs$core$IFn$_invoke$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$core$IFn$_invoke$arity$2 = nth_last_of_type__2;
  return nth_last_of_type;
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert(sel)), cljs.core.str(")")].join("");
  };
  var but = function(var_args) {
    var sel = null;
    if (arguments.length > 0) {
      var G__19183__i = 0, G__19183__a = new Array(arguments.length - 0);
      while (G__19183__i < G__19183__a.length) {
        G__19183__a[G__19183__i] = arguments[G__19183__i + 0];
        ++G__19183__i;
      }
      sel = new cljs.core.IndexedSeq(G__19183__a, 0);
    }
    return but__delegate.call(this, sel);
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__19184) {
    var sel = cljs.core.seq(arglist__19184);
    return but__delegate(sel);
  };
  but.cljs$core$IFn$_invoke$arity$variadic = but__delegate;
  return but;
}();
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("domina.css");
goog.require("goog.Timer");
goog.require("goog.net.XhrIo");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("domina");
goog.require("goog.async.Delay");
goog.require("goog.events");
goog.require("domina.xpath");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("enfocus.enlive.syntax");
enfocus.core.ISelector = function() {
  var obj18213 = {};
  return obj18213;
}();
enfocus.core.select = function() {
  var select = null;
  var select__1 = function(this$) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.enfocus$core$ISelector$select$arity$1;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$1(this$);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = enfocus.core.select[function() {
          var G__18221 = x__4387__auto__;
          return goog.typeOf(G__18221);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = enfocus.core.select["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISelector.select", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var select__2 = function(this$, root) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.enfocus$core$ISelector$select$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$2(this$, root);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = enfocus.core.select[function() {
          var G__18223 = x__4387__auto__;
          return goog.typeOf(G__18223);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = enfocus.core.select["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISelector.select", this$);
          }
        }
      }().call(null, this$, root);
    }
  };
  var select__3 = function(this$, root, id_mask) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.enfocus$core$ISelector$select$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.enfocus$core$ISelector$select$arity$3(this$, root, id_mask);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = enfocus.core.select[function() {
          var G__18225 = x__4387__auto__;
          return goog.typeOf(G__18225);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = enfocus.core.select["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISelector.select", this$);
          }
        }
      }().call(null, this$, root, id_mask);
    }
  };
  select = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, this$);
      case 2:
        return select__2.call(this, this$, root);
      case 3:
        return select__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select.cljs$core$IFn$_invoke$arity$1 = select__1;
  select.cljs$core$IFn$_invoke$arity$2 = select__2;
  select.cljs$core$IFn$_invoke$arity$3 = select__3;
  return select;
}();
enfocus.core.ITransform = function() {
  var obj18227 = {};
  return obj18227;
}();
enfocus.core.apply_transform = function() {
  var apply_transform = null;
  var apply_transform__2 = function(this$, nodes) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$2;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$2(this$, nodes);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = enfocus.core.apply_transform[function() {
          var G__18233 = x__4387__auto__;
          return goog.typeOf(G__18233);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = enfocus.core.apply_transform["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes);
    }
  };
  var apply_transform__3 = function(this$, nodes, callback) {
    if (function() {
      var and__3731__auto__ = this$;
      if (and__3731__auto__) {
        return this$.enfocus$core$ITransform$apply_transform$arity$3;
      } else {
        return and__3731__auto__;
      }
    }()) {
      return this$.enfocus$core$ITransform$apply_transform$arity$3(this$, nodes, callback);
    } else {
      var x__4387__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3743__auto__ = enfocus.core.apply_transform[function() {
          var G__18235 = x__4387__auto__;
          return goog.typeOf(G__18235);
        }()];
        if (or__3743__auto__) {
          return or__3743__auto__;
        } else {
          var or__3743__auto____$1 = enfocus.core.apply_transform["_"];
          if (or__3743__auto____$1) {
            return or__3743__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ITransform.apply-transform", this$);
          }
        }
      }().call(null, this$, nodes, callback);
    }
  };
  apply_transform = function(this$, nodes, callback) {
    switch(arguments.length) {
      case 2:
        return apply_transform__2.call(this, this$, nodes);
      case 3:
        return apply_transform__3.call(this, this$, nodes, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply_transform.cljs$core$IFn$_invoke$arity$2 = apply_transform__2;
  apply_transform.cljs$core$IFn$_invoke$arity$3 = apply_transform__3;
  return apply_transform;
}();
enfocus.core.debug = false;
enfocus.core.log_debug = function log_debug(mesg) {
  if (cljs.core.truth_(function() {
    var and__3731__auto__ = enfocus.core.debug;
    if (cljs.core.truth_(and__3731__auto__)) {
      return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(window.console, undefined);
    } else {
      return and__3731__auto__;
    }
  }())) {
    return console.log(mesg);
  } else {
    return null;
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  var G__18238 = func;
  var G__18239 = ttime;
  return goog.Timer.callOnce(G__18238, G__18239);
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  var G__18241 = tst;
  return goog.dom.isNodeLike(G__18241);
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return tst instanceof NodeList;
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if (nl === window) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [nl], null);
  } else {
    return domina.nodes(nl);
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(p1__18242_SHARP_) {
    if (typeof p1__18242_SHARP_ === "string") {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__18244 = p1__18242_SHARP_;
        return goog.dom.createTextNode(G__18244);
      }()], null);
    } else {
      return enfocus.core.nodes__GT_coll(p1__18242_SHARP_);
    }
  }, cljs.core.array_seq([values], 0));
};
enfocus.core.style_set = function style_set(obj, values) {
  var seq__18257_18269 = cljs.core.seq(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, values));
  var chunk__18258_18270 = null;
  var count__18259_18271 = 0;
  var i__18260_18272 = 0;
  while (true) {
    if (i__18260_18272 < count__18259_18271) {
      var vec__18261_18273 = chunk__18258_18270.cljs$core$IIndexed$_nth$arity$2(null, i__18260_18272);
      var attr_18274 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18261_18273, 0, null);
      var value_18275 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18261_18273, 1, null);
      var G__18262_18276 = obj;
      var G__18263_18277 = cljs.core.name(attr_18274);
      var G__18264_18278 = value_18275;
      goog.style.setStyle(G__18262_18276, G__18263_18277, G__18264_18278);
      var G__18279 = seq__18257_18269;
      var G__18280 = chunk__18258_18270;
      var G__18281 = count__18259_18271;
      var G__18282 = i__18260_18272 + 1;
      seq__18257_18269 = G__18279;
      chunk__18258_18270 = G__18280;
      count__18259_18271 = G__18281;
      i__18260_18272 = G__18282;
      continue;
    } else {
      var temp__4126__auto___18283 = cljs.core.seq(seq__18257_18269);
      if (temp__4126__auto___18283) {
        var seq__18257_18284__$1 = temp__4126__auto___18283;
        if (cljs.core.chunked_seq_QMARK_(seq__18257_18284__$1)) {
          var c__4530__auto___18285 = cljs.core.chunk_first(seq__18257_18284__$1);
          var G__18286 = cljs.core.chunk_rest(seq__18257_18284__$1);
          var G__18287 = c__4530__auto___18285;
          var G__18288 = cljs.core.count(c__4530__auto___18285);
          var G__18289 = 0;
          seq__18257_18269 = G__18286;
          chunk__18258_18270 = G__18287;
          count__18259_18271 = G__18288;
          i__18260_18272 = G__18289;
          continue;
        } else {
          var vec__18265_18290 = cljs.core.first(seq__18257_18284__$1);
          var attr_18291 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18265_18290, 0, null);
          var value_18292 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18265_18290, 1, null);
          var G__18266_18293 = obj;
          var G__18267_18294 = cljs.core.name(attr_18291);
          var G__18268_18295 = value_18292;
          goog.style.setStyle(G__18266_18293, G__18267_18294, G__18268_18295);
          var G__18296 = cljs.core.next(seq__18257_18284__$1);
          var G__18297 = null;
          var G__18298 = 0;
          var G__18299 = 0;
          seq__18257_18269 = G__18296;
          chunk__18258_18270 = G__18297;
          count__18259_18271 = G__18298;
          i__18260_18272 = G__18299;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var seq__18310 = cljs.core.seq(values);
  var chunk__18311 = null;
  var count__18312 = 0;
  var i__18313 = 0;
  while (true) {
    if (i__18313 < count__18312) {
      var attr = chunk__18311.cljs$core$IIndexed$_nth$arity$2(null, i__18313);
      if (cljs.core.truth_(goog.userAgent.IE)) {
        var G__18314_18320 = obj;
        var G__18315_18321 = cljs.core.name(attr);
        var G__18316_18322 = "";
        goog.style.setStyle(G__18314_18320, G__18315_18321, G__18316_18322);
      } else {
        obj.style.removeProperty(cljs.core.name(attr));
      }
      var G__18323 = seq__18310;
      var G__18324 = chunk__18311;
      var G__18325 = count__18312;
      var G__18326 = i__18313 + 1;
      seq__18310 = G__18323;
      chunk__18311 = G__18324;
      count__18312 = G__18325;
      i__18313 = G__18326;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__18310);
      if (temp__4126__auto__) {
        var seq__18310__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__18310__$1)) {
          var c__4530__auto__ = cljs.core.chunk_first(seq__18310__$1);
          var G__18327 = cljs.core.chunk_rest(seq__18310__$1);
          var G__18328 = c__4530__auto__;
          var G__18329 = cljs.core.count(c__4530__auto__);
          var G__18330 = 0;
          seq__18310 = G__18327;
          chunk__18311 = G__18328;
          count__18312 = G__18329;
          i__18313 = G__18330;
          continue;
        } else {
          var attr = cljs.core.first(seq__18310__$1);
          if (cljs.core.truth_(goog.userAgent.IE)) {
            var G__18317_18331 = obj;
            var G__18318_18332 = cljs.core.name(attr);
            var G__18319_18333 = "";
            goog.style.setStyle(G__18317_18331, G__18318_18332, G__18319_18333);
          } else {
            obj.style.removeProperty(cljs.core.name(attr));
          }
          var G__18334 = cljs.core.next(seq__18310__$1);
          var G__18335 = null;
          var G__18336 = 0;
          var G__18337 = 0;
          seq__18310 = G__18334;
          chunk__18311 = G__18335;
          count__18312 = G__18336;
          i__18313 = G__18337;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("");
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds();
};
enfocus.core.pix_round = function pix_round(step) {
  if (step < 0) {
    var G__18340 = step;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18340) : Math.floor.call(null, G__18340);
  } else {
    var G__18341 = step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__18341) : Math.ceil.call(null, G__18341);
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if (cljs.core.truth_(elem)) {
      if (cljs.core.map_QMARK_(ats)) {
        var seq__18354_18360 = cljs.core.seq(ats);
        var chunk__18355_18361 = null;
        var count__18356_18362 = 0;
        var i__18357_18363 = 0;
        while (true) {
          if (i__18357_18363 < count__18356_18362) {
            var vec__18358_18364 = chunk__18355_18361.cljs$core$IIndexed$_nth$arity$2(null, i__18357_18363);
            var k_18365 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18358_18364, 0, null);
            var v_18366 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18358_18364, 1, null);
            add_map_attrs.cljs$core$IFn$_invoke$arity$3(elem, k_18365, v_18366);
            var G__18367 = seq__18354_18360;
            var G__18368 = chunk__18355_18361;
            var G__18369 = count__18356_18362;
            var G__18370 = i__18357_18363 + 1;
            seq__18354_18360 = G__18367;
            chunk__18355_18361 = G__18368;
            count__18356_18362 = G__18369;
            i__18357_18363 = G__18370;
            continue;
          } else {
            var temp__4126__auto___18371 = cljs.core.seq(seq__18354_18360);
            if (temp__4126__auto___18371) {
              var seq__18354_18372__$1 = temp__4126__auto___18371;
              if (cljs.core.chunked_seq_QMARK_(seq__18354_18372__$1)) {
                var c__4530__auto___18373 = cljs.core.chunk_first(seq__18354_18372__$1);
                var G__18374 = cljs.core.chunk_rest(seq__18354_18372__$1);
                var G__18375 = c__4530__auto___18373;
                var G__18376 = cljs.core.count(c__4530__auto___18373);
                var G__18377 = 0;
                seq__18354_18360 = G__18374;
                chunk__18355_18361 = G__18375;
                count__18356_18362 = G__18376;
                i__18357_18363 = G__18377;
                continue;
              } else {
                var vec__18359_18378 = cljs.core.first(seq__18354_18372__$1);
                var k_18379 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18359_18378, 0, null);
                var v_18380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18359_18378, 1, null);
                add_map_attrs.cljs$core$IFn$_invoke$arity$3(elem, k_18379, v_18380);
                var G__18381 = cljs.core.next(seq__18354_18372__$1);
                var G__18382 = null;
                var G__18383 = 0;
                var G__18384 = 0;
                seq__18354_18360 = G__18381;
                chunk__18355_18361 = G__18382;
                count__18356_18362 = G__18383;
                i__18357_18363 = G__18384;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return elem;
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name(k), v);
    return elem;
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_map_attrs.cljs$core$IFn$_invoke$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$core$IFn$_invoke$arity$3 = add_map_attrs__3;
  return add_map_attrs;
}();
enfocus.core.tpl_load_cnt = function() {
  var G__18385 = 0;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18385) : cljs.core.atom.call(null, G__18385);
}();
enfocus.core.tpl_cache = function() {
  var G__18386 = cljs.core.PersistentArrayMap.EMPTY;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18386) : cljs.core.atom.call(null, G__18386);
}();
enfocus.core.hide_style = (new cljs.core.PersistentArrayMap(null, 1, ["style", "display: none; width: 0px; height: 0px"], null)).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div = function() {
    var G__18401 = "div";
    var G__18402 = enfocus.core.hide_style;
    return goog.dom.createDom(G__18401, G__18402);
  }();
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child.nodeType, 11)) {
    var G__18403_18415 = div;
    var G__18404_18416 = child;
    goog.dom.appendChild(G__18403_18415, G__18404_18416);
  } else {
    enfocus.core.log_debug(cljs.core.count(domina.nodes(child)));
    var seq__18405_18417 = cljs.core.seq(domina.nodes(child));
    var chunk__18406_18418 = null;
    var count__18407_18419 = 0;
    var i__18408_18420 = 0;
    while (true) {
      if (i__18408_18420 < count__18407_18419) {
        var node_18421 = chunk__18406_18418.cljs$core$IIndexed$_nth$arity$2(null, i__18408_18420);
        var G__18409_18422 = div;
        var G__18410_18423 = node_18421;
        goog.dom.appendChild(G__18409_18422, G__18410_18423);
        var G__18424 = seq__18405_18417;
        var G__18425 = chunk__18406_18418;
        var G__18426 = count__18407_18419;
        var G__18427 = i__18408_18420 + 1;
        seq__18405_18417 = G__18424;
        chunk__18406_18418 = G__18425;
        count__18407_18419 = G__18426;
        i__18408_18420 = G__18427;
        continue;
      } else {
        var temp__4126__auto___18428 = cljs.core.seq(seq__18405_18417);
        if (temp__4126__auto___18428) {
          var seq__18405_18429__$1 = temp__4126__auto___18428;
          if (cljs.core.chunked_seq_QMARK_(seq__18405_18429__$1)) {
            var c__4530__auto___18430 = cljs.core.chunk_first(seq__18405_18429__$1);
            var G__18431 = cljs.core.chunk_rest(seq__18405_18429__$1);
            var G__18432 = c__4530__auto___18430;
            var G__18433 = cljs.core.count(c__4530__auto___18430);
            var G__18434 = 0;
            seq__18405_18417 = G__18431;
            chunk__18406_18418 = G__18432;
            count__18407_18419 = G__18433;
            i__18408_18420 = G__18434;
            continue;
          } else {
            var node_18435 = cljs.core.first(seq__18405_18429__$1);
            var G__18411_18436 = div;
            var G__18412_18437 = node_18435;
            goog.dom.appendChild(G__18411_18436, G__18412_18437);
            var G__18438 = cljs.core.next(seq__18405_18429__$1);
            var G__18439 = null;
            var G__18440 = 0;
            var G__18441 = 0;
            seq__18405_18417 = G__18438;
            chunk__18406_18418 = G__18439;
            count__18407_18419 = G__18440;
            i__18408_18420 = G__18441;
            continue;
          }
        } else {
        }
      }
      break;
    }
  }
  var G__18413_18442 = function() {
    return goog.dom.getDocument();
  }().documentElement;
  var G__18414_18443 = div;
  goog.dom.appendChild(G__18413_18442, G__18414_18443);
  return div;
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child = div.childNodes;
  var frag = document.createDocumentFragment();
  var G__18447_18450 = frag;
  var G__18448_18451 = child;
  goog.dom.append(G__18447_18450, G__18448_18451);
  var G__18449_18452 = div;
  goog.dom.removeNode(G__18449_18452);
  return frag;
};
enfocus.core.last_element_child = function last_element_child(node) {
  var G__18454 = node;
  return goog.dom.getLastElementChild(G__18454);
};
enfocus.core.replace_ids = function() {
  var replace_ids = null;
  var replace_ids__1 = function(text) {
    return replace_ids.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("id"))), cljs.core.str("_")].join(""), text);
  };
  var replace_ids__2 = function(id_mask, text) {
    var re = new RegExp("(\x3c.*?\\sid\x3d['\"])(.*?)(['\"].*?\x3e)", "g");
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id_mask, text.replace(re, function(re) {
      return function(a, b, c, d) {
        return[cljs.core.str(b), cljs.core.str(id_mask), cljs.core.str(c), cljs.core.str(d)].join("");
      };
    }(re))], null);
  };
  replace_ids = function(id_mask, text) {
    switch(arguments.length) {
      case 1:
        return replace_ids__1.call(this, id_mask);
      case 2:
        return replace_ids__2.call(this, id_mask, text);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace_ids.cljs$core$IFn$_invoke$arity$1 = replace_ids__1;
  replace_ids.cljs$core$IFn$_invoke$arity$2 = replace_ids__2;
  return replace_ids;
}();
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes = function() {
    var G__18460 = nod;
    var G__18461 = "*[id]";
    return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$2 ? enfocus.core.css_select.cljs$core$IFn$_invoke$arity$2(G__18460, G__18461) : enfocus.core.css_select.call(null, G__18460, G__18461);
  }();
  var nod_col = enfocus.core.nodes__GT_coll(id_nodes);
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(id_nodes, nod_col) {
    return function(p1__18457_SHARP_) {
      var id = p1__18457_SHARP_.getAttribute("id");
      var rid = id.replace(sym, "");
      return p1__18457_SHARP_.setAttribute("id", rid);
    };
  }(id_nodes, nod_col), nod_col));
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key, id_mask) {
  if (function() {
    var G__18467 = enfocus.core.tpl_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18467) : cljs.core.deref.call(null, G__18467);
  }().call(null, dom_key) == null) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req = new goog.net.XhrIo;
    var callback = function(req) {
      return function(req__$1) {
        var text = req__$1.getResponseText();
        var vec__18468 = enfocus.core.replace_ids.cljs$core$IFn$_invoke$arity$2(id_mask, text);
        var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18468, 0, null);
        var txt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18468, 1, null);
        return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(enfocus.core.tpl_cache, cljs.core.assoc, dom_key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, txt], null));
      };
    }(req);
    var G__18469_18472 = req;
    var G__18470_18473 = goog.net.EventType.COMPLETE;
    var G__18471_18474 = function(G__18469_18472, G__18470_18473, req, callback) {
      return function() {
        callback(req);
        return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(enfocus.core.tpl_load_cnt, cljs.core.dec);
      };
    }(G__18469_18472, G__18470_18473, req, callback);
    goog.events.listen(G__18469_18472, G__18470_18473, G__18471_18474);
    return req.send(uri, "GET");
  } else {
    return null;
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa = enfocus.core.nodes__GT_coll(domina.html_to_dom(html));
  var frag = document.createDocumentFragment();
  enfocus.core.log_debug(cljs.core.count(dfa));
  var seq__18483_18491 = cljs.core.seq(dfa);
  var chunk__18484_18492 = null;
  var count__18485_18493 = 0;
  var i__18486_18494 = 0;
  while (true) {
    if (i__18486_18494 < count__18485_18493) {
      var df_18495 = chunk__18484_18492.cljs$core$IIndexed$_nth$arity$2(null, i__18486_18494);
      var G__18487_18496 = frag;
      var G__18488_18497 = df_18495;
      goog.dom.append(G__18487_18496, G__18488_18497);
      var G__18498 = seq__18483_18491;
      var G__18499 = chunk__18484_18492;
      var G__18500 = count__18485_18493;
      var G__18501 = i__18486_18494 + 1;
      seq__18483_18491 = G__18498;
      chunk__18484_18492 = G__18499;
      count__18485_18493 = G__18500;
      i__18486_18494 = G__18501;
      continue;
    } else {
      var temp__4126__auto___18502 = cljs.core.seq(seq__18483_18491);
      if (temp__4126__auto___18502) {
        var seq__18483_18503__$1 = temp__4126__auto___18502;
        if (cljs.core.chunked_seq_QMARK_(seq__18483_18503__$1)) {
          var c__4530__auto___18504 = cljs.core.chunk_first(seq__18483_18503__$1);
          var G__18505 = cljs.core.chunk_rest(seq__18483_18503__$1);
          var G__18506 = c__4530__auto___18504;
          var G__18507 = cljs.core.count(c__4530__auto___18504);
          var G__18508 = 0;
          seq__18483_18491 = G__18505;
          chunk__18484_18492 = G__18506;
          count__18485_18493 = G__18507;
          i__18486_18494 = G__18508;
          continue;
        } else {
          var df_18509 = cljs.core.first(seq__18483_18503__$1);
          var G__18489_18510 = frag;
          var G__18490_18511 = df_18509;
          goog.dom.append(G__18489_18510, G__18490_18511);
          var G__18512 = cljs.core.next(seq__18483_18503__$1);
          var G__18513 = null;
          var G__18514 = 0;
          var G__18515 = 0;
          seq__18483_18491 = G__18512;
          chunk__18484_18492 = G__18513;
          count__18485_18493 = G__18514;
          i__18486_18494 = G__18515;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return frag;
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod = function() {
    var G__18517 = enfocus.core.tpl_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18517) : cljs.core.deref.call(null, G__18517);
  }().call(null, uri);
  if (cljs.core.truth_(nod)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(nod), enfocus.core.html_to_dom(cljs.core.second(nod))], null);
  } else {
    return null;
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str = function() {
    var G__18525 = sel;
    return enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$1 ? enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$1(G__18525) : enfocus.core.create_sel_str.call(null, G__18525);
  }();
  var cache = function() {
    var G__18526 = enfocus.core.tpl_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18526) : cljs.core.deref.call(null, G__18526);
  }().call(null, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""));
  if (cljs.core.truth_(cache)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(cache), enfocus.core.html_to_dom(cljs.core.second(cache))], null);
  } else {
    var vec__18527 = enfocus.core.get_cached_dom(uri);
    var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18527, 0, null);
    var tdom = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18527, 1, null);
    var dom = enfocus.core.create_hidden_dom(tdom);
    var tsnip = domina.nodes(function() {
      var G__18528 = sym;
      var G__18529 = dom;
      var G__18530 = sel;
      return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3 ? enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3(G__18528, G__18529, G__18530) : enfocus.core.css_select.call(null, G__18528, G__18529, G__18530);
    }());
    var html_snip = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__18527, sym, tdom, dom, tsnip, sel_str, cache) {
      return function(p1__18518_SHARP_) {
        return p1__18518_SHARP_.outerHTML;
      };
    }(vec__18527, sym, tdom, dom, tsnip, sel_str, cache), tsnip));
    enfocus.core.remove_node_return_child(dom);
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str)].join(""), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, html_snip], null));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym, enfocus.core.html_to_dom(html_snip)], null);
  }
};
enfocus.core.extr_multi_node = function() {
  var extr_multi_node = null;
  var extr_multi_node__1 = function(func) {
    return extr_multi_node.cljs$core$IFn$_invoke$arity$2(func, null);
  };
  var extr_multi_node__2 = function(func, filt) {
    var trans = function trans(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll(pnodes);
      var result = cljs.core.map.cljs$core$IFn$_invoke$arity$2(func, pnod_col);
      var result__$1 = cljs.core.truth_(filt) ? cljs.core.filter.cljs$core$IFn$_invoke$arity$2(filt, result) : result;
      if (cljs.core.count(result__$1) <= 1) {
        return cljs.core.first(result__$1);
      } else {
        return result__$1;
      }
    };
    if (typeof enfocus.core.t18549 !== "undefined") {
    } else {
      enfocus.core.t18549 = function(trans, filt, func, extr_multi_node, meta18550) {
        this.trans = trans;
        this.filt = filt;
        this.func = func;
        this.extr_multi_node = extr_multi_node;
        this.meta18550 = meta18550;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393217;
      };
      enfocus.core.t18549.prototype.call = function(trans) {
        return function() {
          var G__18565 = null;
          var G__18565__2 = function(self__, nodes) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18553 = nodes;
            var G__18554 = null;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18553, G__18554) : self__.trans.call(null, G__18553, G__18554);
          };
          var G__18565__3 = function(self__, nodes, chain) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18555 = nodes;
            var G__18556 = chain;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18555, G__18556) : self__.trans.call(null, G__18555, G__18556);
          };
          G__18565 = function(self__, nodes, chain) {
            switch(arguments.length) {
              case 2:
                return G__18565__2.call(this, self__, nodes);
              case 3:
                return G__18565__3.call(this, self__, nodes, chain);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18565.cljs$core$IFn$_invoke$arity$2 = G__18565__2;
          G__18565.cljs$core$IFn$_invoke$arity$3 = G__18565__3;
          return G__18565;
        }();
      }(trans);
      enfocus.core.t18549.prototype.apply = function(trans) {
        return function(self__, args18552) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18552)));
        };
      }(trans);
      enfocus.core.t18549.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
        return function(nodes) {
          var self__ = this;
          var _ = this;
          var G__18557 = nodes;
          var G__18558 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18557, G__18558) : self__.trans.call(null, G__18557, G__18558);
        };
      }(trans);
      enfocus.core.t18549.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
        return function(nodes, chain) {
          var self__ = this;
          var _ = this;
          var G__18559 = nodes;
          var G__18560 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18559, G__18560) : self__.trans.call(null, G__18559, G__18560);
        };
      }(trans);
      enfocus.core.t18549.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t18549.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
        return function(_, nodes) {
          var self__ = this;
          var ___$1 = this;
          var G__18561 = nodes;
          var G__18562 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18561, G__18562) : self__.trans.call(null, G__18561, G__18562);
        };
      }(trans);
      enfocus.core.t18549.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
        return function(_, nodes, chain) {
          var self__ = this;
          var ___$1 = this;
          var G__18563 = nodes;
          var G__18564 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18563, G__18564) : self__.trans.call(null, G__18563, G__18564);
        };
      }(trans);
      enfocus.core.t18549.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
        return function(_18551) {
          var self__ = this;
          var _18551__$1 = this;
          return self__.meta18550;
        };
      }(trans);
      enfocus.core.t18549.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
        return function(_18551, meta18550__$1) {
          var self__ = this;
          var _18551__$1 = this;
          return new enfocus.core.t18549(self__.trans, self__.filt, self__.func, self__.extr_multi_node, meta18550__$1);
        };
      }(trans);
      enfocus.core.t18549.cljs$lang$type = true;
      enfocus.core.t18549.cljs$lang$ctorStr = "enfocus.core/t18549";
      enfocus.core.t18549.cljs$lang$ctorPrWriter = function(trans) {
        return function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
          return cljs.core._write(writer__4331__auto__, "enfocus.core/t18549");
        };
      }(trans);
      enfocus.core.__GT_t18549 = function(trans) {
        return function __GT_t18549(trans__$1, filt__$1, func__$1, extr_multi_node__$1, meta18550) {
          return new enfocus.core.t18549(trans__$1, filt__$1, func__$1, extr_multi_node__$1, meta18550);
        };
      }(trans);
    }
    return new enfocus.core.t18549(trans, filt, func, extr_multi_node, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 56, cljs.core.constant$keyword$9, 237, cljs.core.constant$keyword$10, 8, cljs.core.constant$keyword$11, 231, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/enfocus/core.cljs"], null));
  };
  extr_multi_node = function(func, filt) {
    switch(arguments.length) {
      case 1:
        return extr_multi_node__1.call(this, func);
      case 2:
        return extr_multi_node__2.call(this, func, filt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  extr_multi_node.cljs$core$IFn$_invoke$arity$1 = extr_multi_node__1;
  extr_multi_node.cljs$core$IFn$_invoke$arity$2 = extr_multi_node__2;
  return extr_multi_node;
}();
enfocus.core.multi_node_chain = function() {
  var multi_node_chain = null;
  var multi_node_chain__1 = function(func) {
    var trans = function(nodes, chain) {
      var val = function() {
        var G__18602 = nodes;
        return func.cljs$core$IFn$_invoke$arity$1 ? func.cljs$core$IFn$_invoke$arity$1(G__18602) : func.call(null, G__18602);
      }();
      if (cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(chain, nodes);
      } else {
        return val;
      }
    };
    if (typeof enfocus.core.t18603 !== "undefined") {
    } else {
      enfocus.core.t18603 = function(trans, func, multi_node_chain, meta18604) {
        this.trans = trans;
        this.func = func;
        this.multi_node_chain = multi_node_chain;
        this.meta18604 = meta18604;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393217;
      };
      enfocus.core.t18603.prototype.call = function(trans) {
        return function() {
          var G__18637 = null;
          var G__18637__2 = function(self__, nodes) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18607 = nodes;
            var G__18608 = null;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18607, G__18608) : self__.trans.call(null, G__18607, G__18608);
          };
          var G__18637__3 = function(self__, nodes, chain) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18609 = nodes;
            var G__18610 = chain;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18609, G__18610) : self__.trans.call(null, G__18609, G__18610);
          };
          G__18637 = function(self__, nodes, chain) {
            switch(arguments.length) {
              case 2:
                return G__18637__2.call(this, self__, nodes);
              case 3:
                return G__18637__3.call(this, self__, nodes, chain);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18637.cljs$core$IFn$_invoke$arity$2 = G__18637__2;
          G__18637.cljs$core$IFn$_invoke$arity$3 = G__18637__3;
          return G__18637;
        }();
      }(trans);
      enfocus.core.t18603.prototype.apply = function(trans) {
        return function(self__, args18606) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18606)));
        };
      }(trans);
      enfocus.core.t18603.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
        return function(nodes) {
          var self__ = this;
          var _ = this;
          var G__18611 = nodes;
          var G__18612 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18611, G__18612) : self__.trans.call(null, G__18611, G__18612);
        };
      }(trans);
      enfocus.core.t18603.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
        return function(nodes, chain) {
          var self__ = this;
          var _ = this;
          var G__18613 = nodes;
          var G__18614 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18613, G__18614) : self__.trans.call(null, G__18613, G__18614);
        };
      }(trans);
      enfocus.core.t18603.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t18603.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
        return function(_, nodes) {
          var self__ = this;
          var ___$1 = this;
          var G__18615 = nodes;
          var G__18616 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18615, G__18616) : self__.trans.call(null, G__18615, G__18616);
        };
      }(trans);
      enfocus.core.t18603.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
        return function(_, nodes, chain) {
          var self__ = this;
          var ___$1 = this;
          var G__18617 = nodes;
          var G__18618 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18617, G__18618) : self__.trans.call(null, G__18617, G__18618);
        };
      }(trans);
      enfocus.core.t18603.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
        return function(_18605) {
          var self__ = this;
          var _18605__$1 = this;
          return self__.meta18604;
        };
      }(trans);
      enfocus.core.t18603.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
        return function(_18605, meta18604__$1) {
          var self__ = this;
          var _18605__$1 = this;
          return new enfocus.core.t18603(self__.trans, self__.func, self__.multi_node_chain, meta18604__$1);
        };
      }(trans);
      enfocus.core.t18603.cljs$lang$type = true;
      enfocus.core.t18603.cljs$lang$ctorStr = "enfocus.core/t18603";
      enfocus.core.t18603.cljs$lang$ctorPrWriter = function(trans) {
        return function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
          return cljs.core._write(writer__4331__auto__, "enfocus.core/t18603");
        };
      }(trans);
      enfocus.core.__GT_t18603 = function(trans) {
        return function __GT_t18603(trans__$1, func__$1, multi_node_chain__$1, meta18604) {
          return new enfocus.core.t18603(trans__$1, func__$1, multi_node_chain__$1, meta18604);
        };
      }(trans);
    }
    return new enfocus.core.t18603(trans, func, multi_node_chain, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 56, cljs.core.constant$keyword$9, 252, cljs.core.constant$keyword$10, 8, cljs.core.constant$keyword$11, 246, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/enfocus/core.cljs"], null));
  };
  var multi_node_chain__2 = function(values, func) {
    var trans = function(nodes, chain) {
      var vnodes = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(p1__18566_SHARP_) {
        return domina.nodes(p1__18566_SHARP_);
      }, cljs.core.array_seq([values], 0));
      var val = function() {
        var G__18619 = nodes;
        var G__18620 = vnodes;
        return func.cljs$core$IFn$_invoke$arity$2 ? func.cljs$core$IFn$_invoke$arity$2(G__18619, G__18620) : func.call(null, G__18619, G__18620);
      }();
      if (cljs.core.truth_(chain)) {
        return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(chain, nodes);
      } else {
        return val;
      }
    };
    if (typeof enfocus.core.t18621 !== "undefined") {
    } else {
      enfocus.core.t18621 = function(trans, func, values, multi_node_chain, meta18622) {
        this.trans = trans;
        this.func = func;
        this.values = values;
        this.multi_node_chain = multi_node_chain;
        this.meta18622 = meta18622;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393217;
      };
      enfocus.core.t18621.prototype.call = function(trans) {
        return function() {
          var G__18638 = null;
          var G__18638__2 = function(self__, nodes) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18625 = nodes;
            var G__18626 = null;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18625, G__18626) : self__.trans.call(null, G__18625, G__18626);
          };
          var G__18638__3 = function(self__, nodes, chain) {
            var self__ = this;
            var self____$1 = this;
            var _ = self____$1;
            var G__18627 = nodes;
            var G__18628 = chain;
            return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18627, G__18628) : self__.trans.call(null, G__18627, G__18628);
          };
          G__18638 = function(self__, nodes, chain) {
            switch(arguments.length) {
              case 2:
                return G__18638__2.call(this, self__, nodes);
              case 3:
                return G__18638__3.call(this, self__, nodes, chain);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18638.cljs$core$IFn$_invoke$arity$2 = G__18638__2;
          G__18638.cljs$core$IFn$_invoke$arity$3 = G__18638__3;
          return G__18638;
        }();
      }(trans);
      enfocus.core.t18621.prototype.apply = function(trans) {
        return function(self__, args18624) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args18624)));
        };
      }(trans);
      enfocus.core.t18621.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
        return function(nodes) {
          var self__ = this;
          var _ = this;
          var G__18629 = nodes;
          var G__18630 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18629, G__18630) : self__.trans.call(null, G__18629, G__18630);
        };
      }(trans);
      enfocus.core.t18621.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
        return function(nodes, chain) {
          var self__ = this;
          var _ = this;
          var G__18631 = nodes;
          var G__18632 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18631, G__18632) : self__.trans.call(null, G__18631, G__18632);
        };
      }(trans);
      enfocus.core.t18621.prototype.enfocus$core$ITransform$ = true;
      enfocus.core.t18621.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
        return function(_, nodes) {
          var self__ = this;
          var ___$1 = this;
          var G__18633 = nodes;
          var G__18634 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18633, G__18634) : self__.trans.call(null, G__18633, G__18634);
        };
      }(trans);
      enfocus.core.t18621.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
        return function(_, nodes, chain) {
          var self__ = this;
          var ___$1 = this;
          var G__18635 = nodes;
          var G__18636 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__18635, G__18636) : self__.trans.call(null, G__18635, G__18636);
        };
      }(trans);
      enfocus.core.t18621.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
        return function(_18623) {
          var self__ = this;
          var _18623__$1 = this;
          return self__.meta18622;
        };
      }(trans);
      enfocus.core.t18621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
        return function(_18623, meta18622__$1) {
          var self__ = this;
          var _18623__$1 = this;
          return new enfocus.core.t18621(self__.trans, self__.func, self__.values, self__.multi_node_chain, meta18622__$1);
        };
      }(trans);
      enfocus.core.t18621.cljs$lang$type = true;
      enfocus.core.t18621.cljs$lang$ctorStr = "enfocus.core/t18621";
      enfocus.core.t18621.cljs$lang$ctorPrWriter = function(trans) {
        return function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
          return cljs.core._write(writer__4331__auto__, "enfocus.core/t18621");
        };
      }(trans);
      enfocus.core.__GT_t18621 = function(trans) {
        return function __GT_t18621(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta18622) {
          return new enfocus.core.t18621(trans__$1, func__$1, values__$1, multi_node_chain__$1, meta18622);
        };
      }(trans);
    }
    return new enfocus.core.t18621(trans, func, values, multi_node_chain, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 56, cljs.core.constant$keyword$9, 264, cljs.core.constant$keyword$10, 8, cljs.core.constant$keyword$11, 258, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/enfocus/core.cljs"], null));
  };
  multi_node_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return multi_node_chain__1.call(this, values);
      case 2:
        return multi_node_chain__2.call(this, values, func);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_node_chain.cljs$core$IFn$_invoke$arity$1 = multi_node_chain__1;
  multi_node_chain.cljs$core$IFn$_invoke$arity$2 = multi_node_chain__2;
  return multi_node_chain;
}();
enfocus.core.content = function() {
  var content__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18639_SHARP_, p2__18640_SHARP_) {
      domina.destroy_children_BANG_(p1__18639_SHARP_);
      return domina.append_BANG_(p1__18639_SHARP_, p2__18640_SHARP_);
    });
  };
  var content = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18641__i = 0, G__18641__a = new Array(arguments.length - 0);
      while (G__18641__i < G__18641__a.length) {
        G__18641__a[G__18641__i] = arguments[G__18641__i + 0];
        ++G__18641__i;
      }
      values = new cljs.core.IndexedSeq(G__18641__a, 0);
    }
    return content__delegate.call(this, values);
  };
  content.cljs$lang$maxFixedArity = 0;
  content.cljs$lang$applyTo = function(arglist__18642) {
    var values = cljs.core.seq(arglist__18642);
    return content__delegate(values);
  };
  content.cljs$core$IFn$_invoke$arity$variadic = content__delegate;
  return content;
}();
enfocus.core.html_content = function html_content(txt) {
  return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18643_SHARP_) {
    return domina.set_html_BANG_(p1__18643_SHARP_, txt);
  });
};
enfocus.core.set_attr = function() {
  var set_attr__delegate = function(values) {
    var pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, values);
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(pairs) {
      return function(p1__18644_SHARP_) {
        var seq__18651 = cljs.core.seq(pairs);
        var chunk__18652 = null;
        var count__18653 = 0;
        var i__18654 = 0;
        while (true) {
          if (i__18654 < count__18653) {
            var vec__18655 = chunk__18652.cljs$core$IIndexed$_nth$arity$2(null, i__18654);
            var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18655, 0, null);
            var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18655, 1, null);
            domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(p1__18644_SHARP_, name, cljs.core.array_seq([value], 0));
            var G__18657 = seq__18651;
            var G__18658 = chunk__18652;
            var G__18659 = count__18653;
            var G__18660 = i__18654 + 1;
            seq__18651 = G__18657;
            chunk__18652 = G__18658;
            count__18653 = G__18659;
            i__18654 = G__18660;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq(seq__18651);
            if (temp__4126__auto__) {
              var seq__18651__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_(seq__18651__$1)) {
                var c__4530__auto__ = cljs.core.chunk_first(seq__18651__$1);
                var G__18661 = cljs.core.chunk_rest(seq__18651__$1);
                var G__18662 = c__4530__auto__;
                var G__18663 = cljs.core.count(c__4530__auto__);
                var G__18664 = 0;
                seq__18651 = G__18661;
                chunk__18652 = G__18662;
                count__18653 = G__18663;
                i__18654 = G__18664;
                continue;
              } else {
                var vec__18656 = cljs.core.first(seq__18651__$1);
                var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18656, 0, null);
                var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18656, 1, null);
                domina.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(p1__18644_SHARP_, name, cljs.core.array_seq([value], 0));
                var G__18665 = cljs.core.next(seq__18651__$1);
                var G__18666 = null;
                var G__18667 = 0;
                var G__18668 = 0;
                seq__18651 = G__18665;
                chunk__18652 = G__18666;
                count__18653 = G__18667;
                i__18654 = G__18668;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(pairs));
  };
  var set_attr = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18669__i = 0, G__18669__a = new Array(arguments.length - 0);
      while (G__18669__i < G__18669__a.length) {
        G__18669__a[G__18669__i] = arguments[G__18669__i + 0];
        ++G__18669__i;
      }
      values = new cljs.core.IndexedSeq(G__18669__a, 0);
    }
    return set_attr__delegate.call(this, values);
  };
  set_attr.cljs$lang$maxFixedArity = 0;
  set_attr.cljs$lang$applyTo = function(arglist__18670) {
    var values = cljs.core.seq(arglist__18670);
    return set_attr__delegate(values);
  };
  set_attr.cljs$core$IFn$_invoke$arity$variadic = set_attr__delegate;
  return set_attr;
}();
enfocus.core.remove_attr = function() {
  var remove_attr__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18671_SHARP_) {
      var seq__18676 = cljs.core.seq(values);
      var chunk__18677 = null;
      var count__18678 = 0;
      var i__18679 = 0;
      while (true) {
        if (i__18679 < count__18678) {
          var name = chunk__18677.cljs$core$IIndexed$_nth$arity$2(null, i__18679);
          domina.remove_attr_BANG_(p1__18671_SHARP_, name);
          var G__18680 = seq__18676;
          var G__18681 = chunk__18677;
          var G__18682 = count__18678;
          var G__18683 = i__18679 + 1;
          seq__18676 = G__18680;
          chunk__18677 = G__18681;
          count__18678 = G__18682;
          i__18679 = G__18683;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18676);
          if (temp__4126__auto__) {
            var seq__18676__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18676__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18676__$1);
              var G__18684 = cljs.core.chunk_rest(seq__18676__$1);
              var G__18685 = c__4530__auto__;
              var G__18686 = cljs.core.count(c__4530__auto__);
              var G__18687 = 0;
              seq__18676 = G__18684;
              chunk__18677 = G__18685;
              count__18678 = G__18686;
              i__18679 = G__18687;
              continue;
            } else {
              var name = cljs.core.first(seq__18676__$1);
              domina.remove_attr_BANG_(p1__18671_SHARP_, name);
              var G__18688 = cljs.core.next(seq__18676__$1);
              var G__18689 = null;
              var G__18690 = 0;
              var G__18691 = 0;
              seq__18676 = G__18688;
              chunk__18677 = G__18689;
              count__18678 = G__18690;
              i__18679 = G__18691;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    });
  };
  var remove_attr = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18692__i = 0, G__18692__a = new Array(arguments.length - 0);
      while (G__18692__i < G__18692__a.length) {
        G__18692__a[G__18692__i] = arguments[G__18692__i + 0];
        ++G__18692__i;
      }
      values = new cljs.core.IndexedSeq(G__18692__a, 0);
    }
    return remove_attr__delegate.call(this, values);
  };
  remove_attr.cljs$lang$maxFixedArity = 0;
  remove_attr.cljs$lang$applyTo = function(arglist__18693) {
    var values = cljs.core.seq(arglist__18693);
    return remove_attr__delegate(values);
  };
  remove_attr.cljs$core$IFn$_invoke$arity$variadic = remove_attr__delegate;
  return remove_attr;
}();
enfocus.core.set_prop = function() {
  var set_prop__delegate = function(forms) {
    return function(node) {
      var h = cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(p__18698) {
        var vec__18699 = p__18698;
        var n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18699, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18699, 1, null);
        return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.name(n));
      }, cljs.core.array_seq([cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, forms)], 0));
      var G__18700 = node;
      var G__18701 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.js_obj, h);
      return goog.dom.setProperties(G__18700, G__18701);
    };
  };
  var set_prop = function(var_args) {
    var forms = null;
    if (arguments.length > 0) {
      var G__18702__i = 0, G__18702__a = new Array(arguments.length - 0);
      while (G__18702__i < G__18702__a.length) {
        G__18702__a[G__18702__i] = arguments[G__18702__i + 0];
        ++G__18702__i;
      }
      forms = new cljs.core.IndexedSeq(G__18702__a, 0);
    }
    return set_prop__delegate.call(this, forms);
  };
  set_prop.cljs$lang$maxFixedArity = 0;
  set_prop.cljs$lang$applyTo = function(arglist__18703) {
    var forms = cljs.core.seq(arglist__18703);
    return set_prop__delegate(forms);
  };
  set_prop.cljs$core$IFn$_invoke$arity$variadic = set_prop__delegate;
  return set_prop;
}();
enfocus.core.has_class = function has_class(el, cls) {
  var G__18706 = el;
  var G__18707 = cls;
  return goog.dom.classes.hasClass(G__18706, G__18707);
};
enfocus.core.add_class = function() {
  var add_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18708_SHARP_) {
      var seq__18713 = cljs.core.seq(values);
      var chunk__18714 = null;
      var count__18715 = 0;
      var i__18716 = 0;
      while (true) {
        if (i__18716 < count__18715) {
          var val = chunk__18714.cljs$core$IIndexed$_nth$arity$2(null, i__18716);
          domina.add_class_BANG_(p1__18708_SHARP_, val);
          var G__18717 = seq__18713;
          var G__18718 = chunk__18714;
          var G__18719 = count__18715;
          var G__18720 = i__18716 + 1;
          seq__18713 = G__18717;
          chunk__18714 = G__18718;
          count__18715 = G__18719;
          i__18716 = G__18720;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18713);
          if (temp__4126__auto__) {
            var seq__18713__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18713__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18713__$1);
              var G__18721 = cljs.core.chunk_rest(seq__18713__$1);
              var G__18722 = c__4530__auto__;
              var G__18723 = cljs.core.count(c__4530__auto__);
              var G__18724 = 0;
              seq__18713 = G__18721;
              chunk__18714 = G__18722;
              count__18715 = G__18723;
              i__18716 = G__18724;
              continue;
            } else {
              var val = cljs.core.first(seq__18713__$1);
              domina.add_class_BANG_(p1__18708_SHARP_, val);
              var G__18725 = cljs.core.next(seq__18713__$1);
              var G__18726 = null;
              var G__18727 = 0;
              var G__18728 = 0;
              seq__18713 = G__18725;
              chunk__18714 = G__18726;
              count__18715 = G__18727;
              i__18716 = G__18728;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    });
  };
  var add_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18729__i = 0, G__18729__a = new Array(arguments.length - 0);
      while (G__18729__i < G__18729__a.length) {
        G__18729__a[G__18729__i] = arguments[G__18729__i + 0];
        ++G__18729__i;
      }
      values = new cljs.core.IndexedSeq(G__18729__a, 0);
    }
    return add_class__delegate.call(this, values);
  };
  add_class.cljs$lang$maxFixedArity = 0;
  add_class.cljs$lang$applyTo = function(arglist__18730) {
    var values = cljs.core.seq(arglist__18730);
    return add_class__delegate(values);
  };
  add_class.cljs$core$IFn$_invoke$arity$variadic = add_class__delegate;
  return add_class;
}();
enfocus.core.remove_class = function() {
  var remove_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18731_SHARP_) {
      var seq__18736 = cljs.core.seq(values);
      var chunk__18737 = null;
      var count__18738 = 0;
      var i__18739 = 0;
      while (true) {
        if (i__18739 < count__18738) {
          var val = chunk__18737.cljs$core$IIndexed$_nth$arity$2(null, i__18739);
          domina.remove_class_BANG_(p1__18731_SHARP_, val);
          var G__18740 = seq__18736;
          var G__18741 = chunk__18737;
          var G__18742 = count__18738;
          var G__18743 = i__18739 + 1;
          seq__18736 = G__18740;
          chunk__18737 = G__18741;
          count__18738 = G__18742;
          i__18739 = G__18743;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18736);
          if (temp__4126__auto__) {
            var seq__18736__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18736__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18736__$1);
              var G__18744 = cljs.core.chunk_rest(seq__18736__$1);
              var G__18745 = c__4530__auto__;
              var G__18746 = cljs.core.count(c__4530__auto__);
              var G__18747 = 0;
              seq__18736 = G__18744;
              chunk__18737 = G__18745;
              count__18738 = G__18746;
              i__18739 = G__18747;
              continue;
            } else {
              var val = cljs.core.first(seq__18736__$1);
              domina.remove_class_BANG_(p1__18731_SHARP_, val);
              var G__18748 = cljs.core.next(seq__18736__$1);
              var G__18749 = null;
              var G__18750 = 0;
              var G__18751 = 0;
              seq__18736 = G__18748;
              chunk__18737 = G__18749;
              count__18738 = G__18750;
              i__18739 = G__18751;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    });
  };
  var remove_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18752__i = 0, G__18752__a = new Array(arguments.length - 0);
      while (G__18752__i < G__18752__a.length) {
        G__18752__a[G__18752__i] = arguments[G__18752__i + 0];
        ++G__18752__i;
      }
      values = new cljs.core.IndexedSeq(G__18752__a, 0);
    }
    return remove_class__delegate.call(this, values);
  };
  remove_class.cljs$lang$maxFixedArity = 0;
  remove_class.cljs$lang$applyTo = function(arglist__18753) {
    var values = cljs.core.seq(arglist__18753);
    return remove_class__delegate(values);
  };
  remove_class.cljs$core$IFn$_invoke$arity$variadic = remove_class__delegate;
  return remove_class;
}();
enfocus.core.set_class = function() {
  var set_class__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18754_SHARP_) {
      return domina.set_classes_BANG_(p1__18754_SHARP_, values);
    });
  };
  var set_class = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18755__i = 0, G__18755__a = new Array(arguments.length - 0);
      while (G__18755__i < G__18755__a.length) {
        G__18755__a[G__18755__i] = arguments[G__18755__i + 0];
        ++G__18755__i;
      }
      values = new cljs.core.IndexedSeq(G__18755__a, 0);
    }
    return set_class__delegate.call(this, values);
  };
  set_class.cljs$lang$maxFixedArity = 0;
  set_class.cljs$lang$applyTo = function(arglist__18756) {
    var values = cljs.core.seq(arglist__18756);
    return set_class__delegate(values);
  };
  set_class.cljs$core$IFn$_invoke$arity$variadic = set_class__delegate;
  return set_class;
}();
enfocus.core.do__GT_ = function() {
  var do__GT___delegate = function(forms) {
    return function(pnod) {
      var seq__18761 = cljs.core.seq(forms);
      var chunk__18762 = null;
      var count__18763 = 0;
      var i__18764 = 0;
      while (true) {
        if (i__18764 < count__18763) {
          var fun = chunk__18762.cljs$core$IIndexed$_nth$arity$2(null, i__18764);
          enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(fun, pnod);
          var G__18765 = seq__18761;
          var G__18766 = chunk__18762;
          var G__18767 = count__18763;
          var G__18768 = i__18764 + 1;
          seq__18761 = G__18765;
          chunk__18762 = G__18766;
          count__18763 = G__18767;
          i__18764 = G__18768;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18761);
          if (temp__4126__auto__) {
            var seq__18761__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18761__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18761__$1);
              var G__18769 = cljs.core.chunk_rest(seq__18761__$1);
              var G__18770 = c__4530__auto__;
              var G__18771 = cljs.core.count(c__4530__auto__);
              var G__18772 = 0;
              seq__18761 = G__18769;
              chunk__18762 = G__18770;
              count__18763 = G__18771;
              i__18764 = G__18772;
              continue;
            } else {
              var fun = cljs.core.first(seq__18761__$1);
              enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(fun, pnod);
              var G__18773 = cljs.core.next(seq__18761__$1);
              var G__18774 = null;
              var G__18775 = 0;
              var G__18776 = 0;
              seq__18761 = G__18773;
              chunk__18762 = G__18774;
              count__18763 = G__18775;
              i__18764 = G__18776;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  };
  var do__GT_ = function(var_args) {
    var forms = null;
    if (arguments.length > 0) {
      var G__18777__i = 0, G__18777__a = new Array(arguments.length - 0);
      while (G__18777__i < G__18777__a.length) {
        G__18777__a[G__18777__i] = arguments[G__18777__i + 0];
        ++G__18777__i;
      }
      forms = new cljs.core.IndexedSeq(G__18777__a, 0);
    }
    return do__GT___delegate.call(this, forms);
  };
  do__GT_.cljs$lang$maxFixedArity = 0;
  do__GT_.cljs$lang$applyTo = function(arglist__18778) {
    var forms = cljs.core.seq(arglist__18778);
    return do__GT___delegate(forms);
  };
  do__GT_.cljs$core$IFn$_invoke$arity$variadic = do__GT___delegate;
  return do__GT_;
}();
enfocus.core.append = function() {
  var append__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18779_SHARP_, p2__18780_SHARP_) {
      return domina.append_BANG_(p1__18779_SHARP_, p2__18780_SHARP_);
    });
  };
  var append = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18781__i = 0, G__18781__a = new Array(arguments.length - 0);
      while (G__18781__i < G__18781__a.length) {
        G__18781__a[G__18781__i] = arguments[G__18781__i + 0];
        ++G__18781__i;
      }
      values = new cljs.core.IndexedSeq(G__18781__a, 0);
    }
    return append__delegate.call(this, values);
  };
  append.cljs$lang$maxFixedArity = 0;
  append.cljs$lang$applyTo = function(arglist__18782) {
    var values = cljs.core.seq(arglist__18782);
    return append__delegate(values);
  };
  append.cljs$core$IFn$_invoke$arity$variadic = append__delegate;
  return append;
}();
enfocus.core.prepend = function() {
  var prepend__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18783_SHARP_, p2__18784_SHARP_) {
      return domina.prepend_BANG_(p1__18783_SHARP_, p2__18784_SHARP_);
    });
  };
  var prepend = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18785__i = 0, G__18785__a = new Array(arguments.length - 0);
      while (G__18785__i < G__18785__a.length) {
        G__18785__a[G__18785__i] = arguments[G__18785__i + 0];
        ++G__18785__i;
      }
      values = new cljs.core.IndexedSeq(G__18785__a, 0);
    }
    return prepend__delegate.call(this, values);
  };
  prepend.cljs$lang$maxFixedArity = 0;
  prepend.cljs$lang$applyTo = function(arglist__18786) {
    var values = cljs.core.seq(arglist__18786);
    return prepend__delegate(values);
  };
  prepend.cljs$core$IFn$_invoke$arity$variadic = prepend__delegate;
  return prepend;
}();
enfocus.core.before = function() {
  var before__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18787_SHARP_, p2__18788_SHARP_) {
      return domina.insert_before_BANG_(p1__18787_SHARP_, p2__18788_SHARP_);
    });
  };
  var before = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18789__i = 0, G__18789__a = new Array(arguments.length - 0);
      while (G__18789__i < G__18789__a.length) {
        G__18789__a[G__18789__i] = arguments[G__18789__i + 0];
        ++G__18789__i;
      }
      values = new cljs.core.IndexedSeq(G__18789__a, 0);
    }
    return before__delegate.call(this, values);
  };
  before.cljs$lang$maxFixedArity = 0;
  before.cljs$lang$applyTo = function(arglist__18790) {
    var values = cljs.core.seq(arglist__18790);
    return before__delegate(values);
  };
  before.cljs$core$IFn$_invoke$arity$variadic = before__delegate;
  return before;
}();
enfocus.core.after = function() {
  var after__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18791_SHARP_, p2__18792_SHARP_) {
      return domina.insert_after_BANG_(p1__18791_SHARP_, p2__18792_SHARP_);
    });
  };
  var after = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18793__i = 0, G__18793__a = new Array(arguments.length - 0);
      while (G__18793__i < G__18793__a.length) {
        G__18793__a[G__18793__i] = arguments[G__18793__i + 0];
        ++G__18793__i;
      }
      values = new cljs.core.IndexedSeq(G__18793__a, 0);
    }
    return after__delegate.call(this, values);
  };
  after.cljs$lang$maxFixedArity = 0;
  after.cljs$lang$applyTo = function(arglist__18794) {
    var values = cljs.core.seq(arglist__18794);
    return after__delegate(values);
  };
  after.cljs$core$IFn$_invoke$arity$variadic = after__delegate;
  return after;
}();
enfocus.core.substitute = function() {
  var substitute__delegate = function(values) {
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$2(values, function(p1__18795_SHARP_, p2__18796_SHARP_) {
      return domina.swap_content_BANG_(p1__18795_SHARP_, p2__18796_SHARP_);
    });
  };
  var substitute = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18797__i = 0, G__18797__a = new Array(arguments.length - 0);
      while (G__18797__i < G__18797__a.length) {
        G__18797__a[G__18797__i] = arguments[G__18797__i + 0];
        ++G__18797__i;
      }
      values = new cljs.core.IndexedSeq(G__18797__a, 0);
    }
    return substitute__delegate.call(this, values);
  };
  substitute.cljs$lang$maxFixedArity = 0;
  substitute.cljs$lang$applyTo = function(arglist__18798) {
    var values = cljs.core.seq(arglist__18798);
    return substitute__delegate(values);
  };
  substitute.cljs$core$IFn$_invoke$arity$variadic = substitute__delegate;
  return substitute;
}();
enfocus.core.remove_node = function remove_node() {
  return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18799_SHARP_) {
    return domina.detach_BANG_(p1__18799_SHARP_);
  });
};
enfocus.core.wrap = function wrap(elm, mattr) {
  return function(pnod) {
    var elem = function() {
      var G__18805 = cljs.core.name(elm);
      return goog.dom.createElement(G__18805);
    }();
    enfocus.core.add_map_attrs.cljs$core$IFn$_invoke$arity$2(elem, mattr);
    var G__18806_18810 = elem;
    var G__18807_18811 = enfocus.core.content.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([pnod.cloneNode(true)], 0));
    enfocus.core.at.cljs$core$IFn$_invoke$arity$2 ? enfocus.core.at.cljs$core$IFn$_invoke$arity$2(G__18806_18810, G__18807_18811) : enfocus.core.at.call(null, G__18806_18810, G__18807_18811);
    var G__18808 = pnod;
    var G__18809 = enfocus.core.do__GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([enfocus.core.after.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([elem], 0)), enfocus.core.remove_node()], 0));
    return enfocus.core.at.cljs$core$IFn$_invoke$arity$2 ? enfocus.core.at.cljs$core$IFn$_invoke$arity$2(G__18808, G__18809) : enfocus.core.at.call(null, G__18808, G__18809);
  };
};
enfocus.core.unwrap = function unwrap() {
  return function(pnod) {
    var frag = document.createDocumentFragment();
    var G__18816_18820 = frag;
    var G__18817_18821 = pnod.childNodes;
    goog.dom.append(G__18816_18820, G__18817_18821);
    var G__18818 = frag;
    var G__18819 = pnod;
    return goog.dom.replaceNode(G__18818, G__18819);
  };
};
enfocus.core.set_style = function() {
  var set_style__delegate = function(values) {
    var pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, values);
    return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(pairs) {
      return function(p1__18822_SHARP_) {
        var seq__18829 = cljs.core.seq(pairs);
        var chunk__18830 = null;
        var count__18831 = 0;
        var i__18832 = 0;
        while (true) {
          if (i__18832 < count__18831) {
            var vec__18833 = chunk__18830.cljs$core$IIndexed$_nth$arity$2(null, i__18832);
            var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18833, 0, null);
            var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18833, 1, null);
            domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(p1__18822_SHARP_, name, cljs.core.array_seq([value], 0));
            var G__18835 = seq__18829;
            var G__18836 = chunk__18830;
            var G__18837 = count__18831;
            var G__18838 = i__18832 + 1;
            seq__18829 = G__18835;
            chunk__18830 = G__18836;
            count__18831 = G__18837;
            i__18832 = G__18838;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq(seq__18829);
            if (temp__4126__auto__) {
              var seq__18829__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_(seq__18829__$1)) {
                var c__4530__auto__ = cljs.core.chunk_first(seq__18829__$1);
                var G__18839 = cljs.core.chunk_rest(seq__18829__$1);
                var G__18840 = c__4530__auto__;
                var G__18841 = cljs.core.count(c__4530__auto__);
                var G__18842 = 0;
                seq__18829 = G__18839;
                chunk__18830 = G__18840;
                count__18831 = G__18841;
                i__18832 = G__18842;
                continue;
              } else {
                var vec__18834 = cljs.core.first(seq__18829__$1);
                var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18834, 0, null);
                var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18834, 1, null);
                domina.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(p1__18822_SHARP_, name, cljs.core.array_seq([value], 0));
                var G__18843 = cljs.core.next(seq__18829__$1);
                var G__18844 = null;
                var G__18845 = 0;
                var G__18846 = 0;
                seq__18829 = G__18843;
                chunk__18830 = G__18844;
                count__18831 = G__18845;
                i__18832 = G__18846;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(pairs));
  };
  var set_style = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18847__i = 0, G__18847__a = new Array(arguments.length - 0);
      while (G__18847__i < G__18847__a.length) {
        G__18847__a[G__18847__i] = arguments[G__18847__i + 0];
        ++G__18847__i;
      }
      values = new cljs.core.IndexedSeq(G__18847__a, 0);
    }
    return set_style__delegate.call(this, values);
  };
  set_style.cljs$lang$maxFixedArity = 0;
  set_style.cljs$lang$applyTo = function(arglist__18848) {
    var values = cljs.core.seq(arglist__18848);
    return set_style__delegate(values);
  };
  set_style.cljs$core$IFn$_invoke$arity$variadic = set_style__delegate;
  return set_style;
}();
enfocus.core.remove_style = function() {
  var remove_style__delegate = function(values) {
    return function(pnod) {
      return enfocus.core.style_remove(pnod, values);
    };
  };
  var remove_style = function(var_args) {
    var values = null;
    if (arguments.length > 0) {
      var G__18849__i = 0, G__18849__a = new Array(arguments.length - 0);
      while (G__18849__i < G__18849__a.length) {
        G__18849__a[G__18849__i] = arguments[G__18849__i + 0];
        ++G__18849__i;
      }
      values = new cljs.core.IndexedSeq(G__18849__a, 0);
    }
    return remove_style__delegate.call(this, values);
  };
  remove_style.cljs$lang$maxFixedArity = 0;
  remove_style.cljs$lang$applyTo = function(arglist__18850) {
    var values = cljs.core.seq(arglist__18850);
    return remove_style__delegate(values);
  };
  remove_style.cljs$core$IFn$_invoke$arity$variadic = remove_style__delegate;
  return remove_style;
}();
enfocus.core.focus = function focus() {
  return function(node) {
    return node.focus();
  };
};
enfocus.core.blur = function blur() {
  return function(node) {
    return node.blur();
  };
};
enfocus.core.set_data = function set_data(ky, val) {
  return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function(p1__18851_SHARP_) {
    return domina.set_data_BANG_(p1__18851_SHARP_, ky, val);
  });
};
enfocus.core.delay = function() {
  var delay__delegate = function(ttime, funcs) {
    return function(pnod) {
      return enfocus.core.setTimeout(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(enfocus.core.at, pnod, funcs);
      }, ttime);
    };
  };
  var delay = function(ttime, var_args) {
    var funcs = null;
    if (arguments.length > 1) {
      var G__18852__i = 0, G__18852__a = new Array(arguments.length - 1);
      while (G__18852__i < G__18852__a.length) {
        G__18852__a[G__18852__i] = arguments[G__18852__i + 1];
        ++G__18852__i;
      }
      funcs = new cljs.core.IndexedSeq(G__18852__a, 0);
    }
    return delay__delegate.call(this, ttime, funcs);
  };
  delay.cljs$lang$maxFixedArity = 1;
  delay.cljs$lang$applyTo = function(arglist__18853) {
    var ttime = cljs.core.first(arglist__18853);
    var funcs = cljs.core.rest(arglist__18853);
    return delay__delegate(ttime, funcs);
  };
  delay.cljs$core$IFn$_invoke$arity$variadic = delay__delegate;
  return delay;
}();
enfocus.core.replace_vars = function replace_vars(vars) {
  var rep_str = function rep_str(text) {
    return clojure.string.replace(text, /\$\{\s*(\S+)\s*}/, function(p1__18855_SHARP_, p2__18854_SHARP_) {
      var G__18881 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(p2__18854_SHARP_);
      return vars.cljs$core$IFn$_invoke$arity$1 ? vars.cljs$core$IFn$_invoke$arity$1(G__18881) : vars.call(null, G__18881);
    });
  };
  return function rep_node(pnod) {
    if (cljs.core.truth_(pnod.attributes)) {
      var seq__18892_18900 = cljs.core.seq(cljs.core.range.cljs$core$IFn$_invoke$arity$1(pnod.attributes.length));
      var chunk__18893_18901 = null;
      var count__18894_18902 = 0;
      var i__18895_18903 = 0;
      while (true) {
        if (i__18895_18903 < count__18894_18902) {
          var idx_18904 = chunk__18893_18901.cljs$core$IIndexed$_nth$arity$2(null, i__18895_18903);
          var attr_18905 = pnod.attributes.item(idx_18904);
          if (cljs.core.truth_(attr_18905.specified)) {
            attr_18905.value = rep_str(attr_18905.value);
          } else {
          }
          var G__18906 = seq__18892_18900;
          var G__18907 = chunk__18893_18901;
          var G__18908 = count__18894_18902;
          var G__18909 = i__18895_18903 + 1;
          seq__18892_18900 = G__18906;
          chunk__18893_18901 = G__18907;
          count__18894_18902 = G__18908;
          i__18895_18903 = G__18909;
          continue;
        } else {
          var temp__4126__auto___18910 = cljs.core.seq(seq__18892_18900);
          if (temp__4126__auto___18910) {
            var seq__18892_18911__$1 = temp__4126__auto___18910;
            if (cljs.core.chunked_seq_QMARK_(seq__18892_18911__$1)) {
              var c__4530__auto___18912 = cljs.core.chunk_first(seq__18892_18911__$1);
              var G__18913 = cljs.core.chunk_rest(seq__18892_18911__$1);
              var G__18914 = c__4530__auto___18912;
              var G__18915 = cljs.core.count(c__4530__auto___18912);
              var G__18916 = 0;
              seq__18892_18900 = G__18913;
              chunk__18893_18901 = G__18914;
              count__18894_18902 = G__18915;
              i__18895_18903 = G__18916;
              continue;
            } else {
              var idx_18917 = cljs.core.first(seq__18892_18911__$1);
              var attr_18918 = pnod.attributes.item(idx_18917);
              if (cljs.core.truth_(attr_18918.specified)) {
                attr_18918.value = rep_str(attr_18918.value);
              } else {
              }
              var G__18919 = cljs.core.next(seq__18892_18911__$1);
              var G__18920 = null;
              var G__18921 = 0;
              var G__18922 = 0;
              seq__18892_18900 = G__18919;
              chunk__18893_18901 = G__18920;
              count__18894_18902 = G__18921;
              i__18895_18903 = G__18922;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pnod.nodeType, 3)) {
      return pnod.nodeValue = rep_str(pnod.nodeValue);
    } else {
      var seq__18896 = cljs.core.seq(enfocus.core.nodes__GT_coll(pnod.childNodes));
      var chunk__18897 = null;
      var count__18898 = 0;
      var i__18899 = 0;
      while (true) {
        if (i__18899 < count__18898) {
          var cnode = chunk__18897.cljs$core$IIndexed$_nth$arity$2(null, i__18899);
          rep_node(cnode);
          var G__18923 = seq__18896;
          var G__18924 = chunk__18897;
          var G__18925 = count__18898;
          var G__18926 = i__18899 + 1;
          seq__18896 = G__18923;
          chunk__18897 = G__18924;
          count__18898 = G__18925;
          i__18899 = G__18926;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18896);
          if (temp__4126__auto__) {
            var seq__18896__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18896__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18896__$1);
              var G__18927 = cljs.core.chunk_rest(seq__18896__$1);
              var G__18928 = c__4530__auto__;
              var G__18929 = cljs.core.count(c__4530__auto__);
              var G__18930 = 0;
              seq__18896 = G__18927;
              chunk__18897 = G__18928;
              count__18898 = G__18929;
              i__18899 = G__18930;
              continue;
            } else {
              var cnode = cljs.core.first(seq__18896__$1);
              rep_node(cnode);
              var G__18931 = cljs.core.next(seq__18896__$1);
              var G__18932 = null;
              var G__18933 = 0;
              var G__18934 = 0;
              seq__18896 = G__18931;
              chunk__18897 = G__18932;
              count__18898 = G__18933;
              i__18899 = G__18934;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  };
};
enfocus.core.exists_in_QMARK_ = function exists_in_QMARK_(col_or_val, val) {
  if (cljs.core.coll_QMARK_(col_or_val)) {
    return cljs.core.some(cljs.core.PersistentHashSet.fromArray([val], true), col_or_val);
  } else {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(col_or_val, val);
  }
};
enfocus.core.set_form_input = function set_form_input(val) {
  return function(el) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(el.type, "checkbox") || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(el.type, "radio")) {
      return el.checked = enfocus.core.exists_in_QMARK_(val, el.value);
    } else {
      var nval = cljs.core.coll_QMARK_(val) && !(typeof val === "string") ? cljs.core.vec(val) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(el.type, "select-multiple") ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [val], null) : val;
      var G__18937 = el;
      var G__18938 = cljs.core.clj__GT_js(nval);
      return goog.dom.forms.setValue(G__18937, G__18938);
    }
  };
};
enfocus.core.set_form = function set_form(value_map) {
  return function(form_node) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form_node.nodeName, "FORM")) {
      var seq__18945 = cljs.core.seq(cljs.core.range.cljs$core$IFn$_invoke$arity$1(form_node.length));
      var chunk__18946 = null;
      var count__18947 = 0;
      var i__18948 = 0;
      while (true) {
        if (i__18948 < count__18947) {
          var idx = chunk__18946.cljs$core$IIndexed$_nth$arity$2(null, i__18948);
          var el_18951 = form_node.elements[idx];
          var ky_18952 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(el_18951.name);
          var val_18953 = function() {
            var G__18949 = value_map;
            return ky_18952.cljs$core$IFn$_invoke$arity$1 ? ky_18952.cljs$core$IFn$_invoke$arity$1(G__18949) : ky_18952.call(null, G__18949);
          }();
          if (cljs.core.contains_QMARK_(value_map, ky_18952)) {
            var val_18954__$1 = cljs.core.truth_(val_18953) ? val_18953 : "";
            enfocus.core.set_form_input(val_18954__$1).call(null, el_18951);
          } else {
          }
          var G__18955 = seq__18945;
          var G__18956 = chunk__18946;
          var G__18957 = count__18947;
          var G__18958 = i__18948 + 1;
          seq__18945 = G__18955;
          chunk__18946 = G__18956;
          count__18947 = G__18957;
          i__18948 = G__18958;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__18945);
          if (temp__4126__auto__) {
            var seq__18945__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__18945__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__18945__$1);
              var G__18959 = cljs.core.chunk_rest(seq__18945__$1);
              var G__18960 = c__4530__auto__;
              var G__18961 = cljs.core.count(c__4530__auto__);
              var G__18962 = 0;
              seq__18945 = G__18959;
              chunk__18946 = G__18960;
              count__18947 = G__18961;
              i__18948 = G__18962;
              continue;
            } else {
              var idx = cljs.core.first(seq__18945__$1);
              var el_18963 = form_node.elements[idx];
              var ky_18964 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(el_18963.name);
              var val_18965 = function() {
                var G__18950 = value_map;
                return ky_18964.cljs$core$IFn$_invoke$arity$1 ? ky_18964.cljs$core$IFn$_invoke$arity$1(G__18950) : ky_18964.call(null, G__18950);
              }();
              if (cljs.core.contains_QMARK_(value_map, ky_18964)) {
                var val_18966__$1 = cljs.core.truth_(val_18965) ? val_18965 : "";
                enfocus.core.set_form_input(val_18966__$1).call(null, el_18963);
              } else {
              }
              var G__18967 = cljs.core.next(seq__18945__$1);
              var G__18968 = null;
              var G__18969 = 0;
              var G__18970 = 0;
              seq__18945 = G__18967;
              chunk__18946 = G__18968;
              count__18947 = G__18969;
              i__18948 = G__18970;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  };
};
enfocus.core.html = function html(node_spec) {
  if (typeof node_spec === "string") {
    return document.createTextNode(node_spec);
  } else {
    if (cljs.core.vector_QMARK_(node_spec)) {
      var vec__18980 = node_spec;
      var tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18980, 0, null);
      var vec__18981 = cljs.core.nthnext(vec__18980, 1);
      var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18981, 0, null);
      var ms = cljs.core.nthnext(vec__18981, 1);
      var more = vec__18981;
      var vec__18982 = cljs.core.name(tag).split(/(?=[#.])/);
      var tag_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18982, 0, null);
      var segments = cljs.core.nthnext(vec__18982, 1);
      var id = cljs.core.some(function(vec__18980, tag, vec__18981, m, ms, more, vec__18982, tag_name, segments) {
        return function(seg) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("#", seg.charAt(0))) {
            return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(seg, 1);
          } else {
            return null;
          }
        };
      }(vec__18980, tag, vec__18981, m, ms, more, vec__18982, tag_name, segments), segments);
      var classes = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(function(vec__18980, tag, vec__18981, m, ms, more, vec__18982, tag_name, segments, id) {
        return function(seg) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(".", seg.charAt(0))) {
            return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(seg, 1);
          } else {
            return null;
          }
        };
      }(vec__18980, tag, vec__18981, m, ms, more, vec__18982, tag_name, segments, id), segments);
      var attrs = cljs.core.map_QMARK_(m) ? m : cljs.core.PersistentArrayMap.EMPTY;
      var attrs__$1 = cljs.core.truth_(id) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(attrs, cljs.core.constant$keyword$22, id) : attrs;
      var attrs__$2 = !cljs.core.empty_QMARK_(classes) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(attrs__$1, cljs.core.constant$keyword$23, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose(" ", classes))) : attrs__$1;
      var content = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(html, cljs.core.map_QMARK_(m) ? ms : more));
      var node = document.createElement(tag_name);
      var seq__18983_18989 = cljs.core.seq(attrs__$2);
      var chunk__18984_18990 = null;
      var count__18985_18991 = 0;
      var i__18986_18992 = 0;
      while (true) {
        if (i__18986_18992 < count__18985_18991) {
          var vec__18987_18993 = chunk__18984_18990.cljs$core$IIndexed$_nth$arity$2(null, i__18986_18992);
          var key_18994 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18987_18993, 0, null);
          var val_18995 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18987_18993, 1, null);
          node.setAttribute(cljs.core.name(key_18994), val_18995);
          var G__18996 = seq__18983_18989;
          var G__18997 = chunk__18984_18990;
          var G__18998 = count__18985_18991;
          var G__18999 = i__18986_18992 + 1;
          seq__18983_18989 = G__18996;
          chunk__18984_18990 = G__18997;
          count__18985_18991 = G__18998;
          i__18986_18992 = G__18999;
          continue;
        } else {
          var temp__4126__auto___19000 = cljs.core.seq(seq__18983_18989);
          if (temp__4126__auto___19000) {
            var seq__18983_19001__$1 = temp__4126__auto___19000;
            if (cljs.core.chunked_seq_QMARK_(seq__18983_19001__$1)) {
              var c__4530__auto___19002 = cljs.core.chunk_first(seq__18983_19001__$1);
              var G__19003 = cljs.core.chunk_rest(seq__18983_19001__$1);
              var G__19004 = c__4530__auto___19002;
              var G__19005 = cljs.core.count(c__4530__auto___19002);
              var G__19006 = 0;
              seq__18983_18989 = G__19003;
              chunk__18984_18990 = G__19004;
              count__18985_18991 = G__19005;
              i__18986_18992 = G__19006;
              continue;
            } else {
              var vec__18988_19007 = cljs.core.first(seq__18983_19001__$1);
              var key_19008 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18988_19007, 0, null);
              var val_19009 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18988_19007, 1, null);
              node.setAttribute(cljs.core.name(key_19008), val_19009);
              var G__19010 = cljs.core.next(seq__18983_19001__$1);
              var G__19011 = null;
              var G__19012 = 0;
              var G__19013 = 0;
              seq__18983_18989 = G__19010;
              chunk__18984_18990 = G__19011;
              count__18985_18991 = G__19012;
              i__18986_18992 = G__19013;
              continue;
            }
          } else {
          }
        }
        break;
      }
      if (cljs.core.truth_(content)) {
        return domina.append_BANG_(node, content);
      } else {
        return null;
      }
    } else {
      if (cljs.core.sequential_QMARK_(node_spec)) {
        return cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(html, node_spec));
      } else {
        return document.createTextNode([cljs.core.str(node_spec)].join(""));
      }
    }
  }
};
enfocus.core.get_attr = function get_attr(attr) {
  return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(function(pnod) {
    return pnod.getAttribute(cljs.core.name(attr));
  });
};
enfocus.core.get_text = function get_text() {
  return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(function(pnod) {
    var G__19015 = pnod;
    return goog.dom.getTextContent(G__19015);
  });
};
enfocus.core.get_data = function() {
  var get_data = null;
  var get_data__1 = function(ky) {
    return get_data.cljs$core$IFn$_invoke$arity$2(ky, false);
  };
  var get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(function(node) {
      return domina.get_data.cljs$core$IFn$_invoke$arity$3(node, ky, bubble);
    });
  };
  get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return get_data__1.call(this, ky);
      case 2:
        return get_data__2.call(this, ky, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$1 = get_data__1;
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  return get_data;
}();
enfocus.core.get_prop = function get_prop(prop) {
  return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(function(pnod) {
    return pnod[cljs.core.name(prop)];
  });
};
enfocus.core.merge_form_val = function merge_form_val(form_map, ky, val) {
  var mval = function() {
    var G__19019 = ky;
    return form_map.cljs$core$IFn$_invoke$arity$1 ? form_map.cljs$core$IFn$_invoke$arity$1(G__19019) : form_map.call(null, G__19019);
  }();
  if (cljs.core.truth_(val)) {
    if (cljs.core.coll_QMARK_(mval) && cljs.core.coll_QMARK_(val)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(form_map, ky, cljs.core.into.cljs$core$IFn$_invoke$arity$2(mval, val));
    } else {
      if (cljs.core.coll_QMARK_(mval)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(form_map, ky, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(mval, val));
      } else {
        if (cljs.core.truth_(mval)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(form_map, ky, cljs.core.PersistentHashSet.fromArray([mval, val], true));
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(form_map, ky, val);
        }
      }
    }
  } else {
    return form_map;
  }
};
enfocus.core.read_form_input = function read_form_input() {
  var trans = function(nodes, chain) {
    var nod_col = enfocus.core.nodes__GT_coll(nodes);
    var result = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(nod_col) {
      return function(p1__19021_SHARP_, p2__19020_SHARP_) {
        var vals = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(function() {
          var G__19039 = p2__19020_SHARP_;
          return goog.dom.forms.getValue(G__19039);
        }());
        if (!(typeof vals === "string") && cljs.core.coll_QMARK_(vals)) {
          return cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__19021_SHARP_, vals);
        } else {
          if (cljs.core.truth_(vals)) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19021_SHARP_, vals);
          } else {
            return p1__19021_SHARP_;
          }
        }
      };
    }(nod_col), cljs.core.PersistentHashSet.EMPTY, nod_col);
    if (cljs.core.empty_QMARK_(result)) {
      return null;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(result)) && cljs.core.not((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["checkbox", null, "select-multiple", null], null), null)).call(null, cljs.core.first(nod_col).type))) {
        return cljs.core.first(result);
      } else {
        return result;
      }
    }
  };
  if (typeof enfocus.core.t19040 !== "undefined") {
  } else {
    enfocus.core.t19040 = function(trans, read_form_input, meta19041) {
      this.trans = trans;
      this.read_form_input = read_form_input;
      this.meta19041 = meta19041;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393217;
    };
    enfocus.core.t19040.prototype.call = function(trans) {
      return function() {
        var G__19056 = null;
        var G__19056__2 = function(self__, nodes) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var G__19044 = nodes;
          var G__19045 = null;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19044, G__19045) : self__.trans.call(null, G__19044, G__19045);
        };
        var G__19056__3 = function(self__, nodes, chain) {
          var self__ = this;
          var self____$1 = this;
          var _ = self____$1;
          var G__19046 = nodes;
          var G__19047 = chain;
          return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19046, G__19047) : self__.trans.call(null, G__19046, G__19047);
        };
        G__19056 = function(self__, nodes, chain) {
          switch(arguments.length) {
            case 2:
              return G__19056__2.call(this, self__, nodes);
            case 3:
              return G__19056__3.call(this, self__, nodes, chain);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19056.cljs$core$IFn$_invoke$arity$2 = G__19056__2;
        G__19056.cljs$core$IFn$_invoke$arity$3 = G__19056__3;
        return G__19056;
      }();
    }(trans);
    enfocus.core.t19040.prototype.apply = function(trans) {
      return function(self__, args19043) {
        var self__ = this;
        var self____$1 = this;
        return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19043)));
      };
    }(trans);
    enfocus.core.t19040.prototype.cljs$core$IFn$_invoke$arity$1 = function(trans) {
      return function(nodes) {
        var self__ = this;
        var _ = this;
        var G__19048 = nodes;
        var G__19049 = null;
        return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19048, G__19049) : self__.trans.call(null, G__19048, G__19049);
      };
    }(trans);
    enfocus.core.t19040.prototype.cljs$core$IFn$_invoke$arity$2 = function(trans) {
      return function(nodes, chain) {
        var self__ = this;
        var _ = this;
        var G__19050 = nodes;
        var G__19051 = chain;
        return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19050, G__19051) : self__.trans.call(null, G__19050, G__19051);
      };
    }(trans);
    enfocus.core.t19040.prototype.enfocus$core$ITransform$ = true;
    enfocus.core.t19040.prototype.enfocus$core$ITransform$apply_transform$arity$2 = function(trans) {
      return function(_, nodes) {
        var self__ = this;
        var ___$1 = this;
        var G__19052 = nodes;
        var G__19053 = null;
        return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19052, G__19053) : self__.trans.call(null, G__19052, G__19053);
      };
    }(trans);
    enfocus.core.t19040.prototype.enfocus$core$ITransform$apply_transform$arity$3 = function(trans) {
      return function(_, nodes, chain) {
        var self__ = this;
        var ___$1 = this;
        var G__19054 = nodes;
        var G__19055 = chain;
        return self__.trans.cljs$core$IFn$_invoke$arity$2 ? self__.trans.cljs$core$IFn$_invoke$arity$2(G__19054, G__19055) : self__.trans.call(null, G__19054, G__19055);
      };
    }(trans);
    enfocus.core.t19040.prototype.cljs$core$IMeta$_meta$arity$1 = function(trans) {
      return function(_19042) {
        var self__ = this;
        var _19042__$1 = this;
        return self__.meta19041;
      };
    }(trans);
    enfocus.core.t19040.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(trans) {
      return function(_19042, meta19041__$1) {
        var self__ = this;
        var _19042__$1 = this;
        return new enfocus.core.t19040(self__.trans, self__.read_form_input, meta19041__$1);
      };
    }(trans);
    enfocus.core.t19040.cljs$lang$type = true;
    enfocus.core.t19040.cljs$lang$ctorStr = "enfocus.core/t19040";
    enfocus.core.t19040.cljs$lang$ctorPrWriter = function(trans) {
      return function(this__4330__auto__, writer__4331__auto__, opt__4332__auto__) {
        return cljs.core._write(writer__4331__auto__, "enfocus.core/t19040");
      };
    }(trans);
    enfocus.core.__GT_t19040 = function(trans) {
      return function __GT_t19040(trans__$1, read_form_input__$1, meta19041) {
        return new enfocus.core.t19040(trans__$1, read_form_input__$1, meta19041);
      };
    }(trans);
  }
  return new enfocus.core.t19040(trans, read_form_input, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8, 53, cljs.core.constant$keyword$9, 590, cljs.core.constant$keyword$10, 5, cljs.core.constant$keyword$11, 584, cljs.core.constant$keyword$12, "/home/donatas/projects/text-utils/rat/target/base+system+user+dev/cljsbuild-compiler-0/enfocus/core.cljs"], null));
};
enfocus.core.read_form = function read_form() {
  return enfocus.core.extr_multi_node.cljs$core$IFn$_invoke$arity$1(function(node) {
    var inputs = node.elements;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(inputs) {
      return function(p1__19058_SHARP_, p2__19057_SHARP_) {
        if (!cljs.core.empty_QMARK_(inputs.item(p2__19057_SHARP_).name)) {
          return enfocus.core.merge_form_val(p1__19058_SHARP_, cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(inputs.item(p2__19057_SHARP_).name), enfocus.core.read_form_input().call(null, inputs.item(p2__19057_SHARP_)));
        } else {
          return p1__19058_SHARP_;
        }
      };
    }(inputs), cljs.core.PersistentArrayMap.EMPTY, cljs.core.range.cljs$core$IFn$_invoke$arity$1(inputs.length));
  });
};
enfocus.core.reg_filt = function() {
  var G__19059 = cljs.core.PersistentArrayMap.EMPTY;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19059) : cljs.core.atom.call(null, G__19059);
}();
enfocus.core.filter = function filter(tst, trans) {
  return enfocus.core.multi_node_chain.cljs$core$IFn$_invoke$arity$1(function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.cljs$core$IFn$_invoke$arity$2(pnodes, null);
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col = enfocus.core.nodes__GT_coll(pnodes);
      var ttest = tst instanceof cljs.core.Keyword ? function() {
        var G__19067 = enfocus.core.reg_filt;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19067) : cljs.core.deref.call(null, G__19067);
      }().call(null, tst) : tst;
      var res = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(ttest, pnod_col);
      if (chain == null) {
        return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(trans, res);
      } else {
        return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$3(trans, res, chain);
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    filt.cljs$core$IFn$_invoke$arity$1 = filt__1;
    filt.cljs$core$IFn$_invoke$arity$2 = filt__2;
    return filt;
  }());
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(enfocus.core.reg_filt, cljs.core.assoc, ky, func);
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected;
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked;
};
enfocus.core.register_filter(cljs.core.constant$keyword$24, enfocus.core.selected_options);
enfocus.core.register_filter(cljs.core.constant$keyword$25, enfocus.core.checked_radio_checkbox);
enfocus.core.match_QMARK_ = function match_QMARK_(selector) {
  return function(node) {
    if (cljs.core.truth_(node["matches"])) {
      return node.matches(selector);
    } else {
      if (cljs.core.truth_(node["matchesSelector"])) {
        return node.matchesSelector(selector);
      } else {
        if (cljs.core.truth_(node["msMatchesSelector"])) {
          return node.msMatchesSelector(selector);
        } else {
          if (cljs.core.truth_(node["mozMatchesSelector"])) {
            return node.mozMatchesSelector(selector);
          } else {
            if (cljs.core.truth_(node["webkitMatchesSelector"])) {
              return node.webkitMatchesSelector(selector);
            } else {
              return cljs.core.some(cljs.core.PersistentHashSet.fromArray([node], true), enfocus.core.nodes__GT_coll(enfocus.core.select.cljs$core$IFn$_invoke$arity$1(node)));
            }
          }
        }
      }
    }
  };
};
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.cljs$core$IFn$_invoke$arity$2("", css_sel);
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__19068_SHARP_) {
      if (p1__19068_SHARP_ instanceof cljs.core.Symbol) {
        var G__19073 = p1__19068_SHARP_;
        return enfocus.core.css_syms.cljs$core$IFn$_invoke$arity$1 ? enfocus.core.css_syms.cljs$core$IFn$_invoke$arity$1(G__19073) : enfocus.core.css_syms.call(null, G__19073);
      } else {
        if (p1__19068_SHARP_ instanceof cljs.core.Keyword) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name(p1__19068_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("");
        } else {
          if (cljs.core.vector_QMARK_(p1__19068_SHARP_)) {
            return create_sel_str.cljs$core$IFn$_invoke$arity$1(p1__19068_SHARP_);
          } else {
            if (typeof p1__19068_SHARP_ === "string") {
              return p1__19068_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }, css_sel));
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_sel_str.cljs$core$IFn$_invoke$arity$1 = create_sel_str__1;
  create_sel_str.cljs$core$IFn$_invoke$arity$2 = create_sel_str__2;
  return create_sel_str;
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.cljs$core$IFn$_invoke$arity$3("", document, css_sel);
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.cljs$core$IFn$_invoke$arity$3("", dom_node, css_sel);
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    var sel = clojure.string.trim(enfocus.enlive.syntax.convert(enfocus.core.create_sel_str.cljs$core$IFn$_invoke$arity$2(id_mask_sym, css_sel)));
    var ret = domina.css.sel.cljs$core$IFn$_invoke$arity$2(dom_node, sel);
    return ret;
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css_select.cljs$core$IFn$_invoke$arity$1 = css_select__1;
  css_select.cljs$core$IFn$_invoke$arity$2 = css_select__2;
  css_select.cljs$core$IFn$_invoke$arity$3 = css_select__3;
  return css_select;
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3743__auto__ = func;
  if (cljs.core.truth_(or__3743__auto__)) {
    return or__3743__auto__;
  } else {
    return enfocus.core.remove_node;
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    var cnt = cljs.core.count(trans);
    var sel_QMARK_ = function() {
      var and__3731__auto__ = !(node == null);
      if (and__3731__auto__) {
        var G__19090 = node;
        if (G__19090) {
          var bit__4424__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3743__auto__ = bit__4424__auto__;
            if (cljs.core.truth_(or__3743__auto__)) {
              return or__3743__auto__;
            } else {
              return G__19090.enfocus$core$ISelector$;
            }
          }())) {
            return true;
          } else {
            if (!G__19090.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(enfocus.core.ISelector, G__19090);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(enfocus.core.ISelector, G__19090);
        }
      } else {
        return and__3731__auto__;
      }
    }();
    if (!sel_QMARK_ && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cnt)) {
      return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(cljs.core.first(trans), node);
    } else {
      var vec__19091 = sel_QMARK_ ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(trans, node)), document) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, trans), node);
      var node__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19091, 0, null);
      var trans__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19091, 1, null);
      var seq__19092 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, trans__$1));
      var chunk__19093 = null;
      var count__19094 = 0;
      var i__19095 = 0;
      while (true) {
        if (i__19095 < count__19094) {
          var vec__19096 = chunk__19093.cljs$core$IIndexed$_nth$arity$2(null, i__19095);
          var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19096, 0, null);
          var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19096, 1, null);
          enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(enfocus.core.nil_t(t), enfocus.core.select.cljs$core$IFn$_invoke$arity$3(sel, node__$1, id_mask));
          var G__19098 = seq__19092;
          var G__19099 = chunk__19093;
          var G__19100 = count__19094;
          var G__19101 = i__19095 + 1;
          seq__19092 = G__19098;
          chunk__19093 = G__19099;
          count__19094 = G__19100;
          i__19095 = G__19101;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__19092);
          if (temp__4126__auto__) {
            var seq__19092__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__19092__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__19092__$1);
              var G__19102 = cljs.core.chunk_rest(seq__19092__$1);
              var G__19103 = c__4530__auto__;
              var G__19104 = cljs.core.count(c__4530__auto__);
              var G__19105 = 0;
              seq__19092 = G__19102;
              chunk__19093 = G__19103;
              count__19094 = G__19104;
              i__19095 = G__19105;
              continue;
            } else {
              var vec__19097 = cljs.core.first(seq__19092__$1);
              var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19097, 0, null);
              var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19097, 1, null);
              enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(enfocus.core.nil_t(t), enfocus.core.select.cljs$core$IFn$_invoke$arity$3(sel, node__$1, id_mask));
              var G__19106 = cljs.core.next(seq__19092__$1);
              var G__19107 = null;
              var G__19108 = 0;
              var G__19109 = 0;
              seq__19092 = G__19106;
              chunk__19093 = G__19107;
              count__19094 = G__19108;
              i__19095 = G__19109;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if (arguments.length > 2) {
      var G__19110__i = 0, G__19110__a = new Array(arguments.length - 2);
      while (G__19110__i < G__19110__a.length) {
        G__19110__a[G__19110__i] = arguments[G__19110__i + 2];
        ++G__19110__i;
      }
      trans = new cljs.core.IndexedSeq(G__19110__a, 0);
    }
    return i_at__delegate.call(this, id_mask, node, trans);
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__19111) {
    var id_mask = cljs.core.first(arglist__19111);
    arglist__19111 = cljs.core.next(arglist__19111);
    var node = cljs.core.first(arglist__19111);
    var trans = cljs.core.rest(arglist__19111);
    return i_at__delegate(id_mask, node, trans);
  };
  i_at.cljs$core$IFn$_invoke$arity$variadic = i_at__delegate;
  return i_at;
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(enfocus.core.i_at, "", node, trans);
  };
  var at = function(node, var_args) {
    var trans = null;
    if (arguments.length > 1) {
      var G__19112__i = 0, G__19112__a = new Array(arguments.length - 1);
      while (G__19112__i < G__19112__a.length) {
        G__19112__a[G__19112__i] = arguments[G__19112__i + 1];
        ++G__19112__i;
      }
      trans = new cljs.core.IndexedSeq(G__19112__a, 0);
    }
    return at__delegate.call(this, node, trans);
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__19113) {
    var node = cljs.core.first(arglist__19113);
    var trans = cljs.core.rest(arglist__19113);
    return at__delegate(node, trans);
  };
  at.cljs$core$IFn$_invoke$arity$variadic = at__delegate;
  return at;
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    var cnt = cljs.core.count(trans);
    var sel_QMARK_ = function() {
      var G__19118 = node;
      if (G__19118) {
        var bit__4424__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3743__auto__ = bit__4424__auto__;
          if (cljs.core.truth_(or__3743__auto__)) {
            return or__3743__auto__;
          } else {
            return G__19118.enfocus$core$ISelector$;
          }
        }())) {
          return true;
        } else {
          if (!G__19118.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(enfocus.core.ISelector, G__19118);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(enfocus.core.ISelector, G__19118);
      }
    }();
    if (sel_QMARK_ && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cnt)) {
      return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(cljs.core.first(trans), enfocus.core.select.cljs$core$IFn$_invoke$arity$1(node));
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cnt)) {
        return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(cljs.core.first(trans), node);
      } else {
        var vec__19119 = sel_QMARK_ ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(trans, node)), document) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, trans), node);
        var node__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19119, 0, null);
        var trans__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19119, 1, null);
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(vec__19119, node__$1, trans__$1, cnt, sel_QMARK_) {
          return function(p__19120) {
            var vec__19121 = p__19120;
            var ky = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19121, 0, null);
            var sel = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19121, 1, null);
            var ext = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19121, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ky, enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(ext, enfocus.core.select.cljs$core$IFn$_invoke$arity$3(sel, node__$1, ""))], null);
          };
        }(vec__19119, node__$1, trans__$1, cnt, sel_QMARK_), cljs.core.array_seq([cljs.core.partition.cljs$core$IFn$_invoke$arity$2(3, trans__$1)], 0)));
      }
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if (arguments.length > 1) {
      var G__19122__i = 0, G__19122__a = new Array(arguments.length - 1);
      while (G__19122__i < G__19122__a.length) {
        G__19122__a[G__19122__i] = arguments[G__19122__i + 1];
        ++G__19122__i;
      }
      trans = new cljs.core.IndexedSeq(G__19122__a, 0);
    }
    return from__delegate.call(this, node, trans);
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__19123) {
    var node = cljs.core.first(arglist__19123);
    var trans = cljs.core.rest(arglist__19123);
    return from__delegate(node, trans);
  };
  from.cljs$core$IFn$_invoke$arity$variadic = from__delegate;
  return from;
}();
enfocus.core.xpath = function xpath(path) {
  return function(root, id_mask) {
    if (cljs.core.empty_QMARK_(id_mask)) {
      return domina.xpath.xpath.cljs$core$IFn$_invoke$arity$2(root, path);
    } else {
      var tmp = path.replace("@ID\x3d'", [cljs.core.str("@ID\x3d'"), cljs.core.str(id_mask)].join(""));
      var mpath = path.replace("@id\x3d'", [cljs.core.str("@id\x3d'"), cljs.core.str(id_mask)].join(""));
      return domina.xpath.xpath.cljs$core$IFn$_invoke$arity$2(root, mpath);
    }
  };
};
enfocus.core.this_node = function this_node(root, id_mask) {
  return root;
};
if (cljs.core.truth_(typeof Text != "undefined")) {
  Text.prototype.domina$DomContent$ = true;
  Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
    var content__$1 = this;
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content__$1], null);
  };
  Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
    var content__$1 = this;
    return content__$1;
  };
} else {
}
enfocus.core.ISelector["null"] = true;
enfocus.core.select["null"] = function() {
  var G__19126 = null;
  var G__19126__1 = function(this$) {
    return cljs.core.List.EMPTY;
  };
  var G__19126__2 = function(this$, root) {
    return cljs.core.List.EMPTY;
  };
  var G__19126__3 = function(this$, root, id_mask) {
    return cljs.core.List.EMPTY;
  };
  G__19126 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__19126__1.call(this, this$);
      case 2:
        return G__19126__2.call(this, this$, root);
      case 3:
        return G__19126__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19126.cljs$core$IFn$_invoke$arity$1 = G__19126__1;
  G__19126.cljs$core$IFn$_invoke$arity$2 = G__19126__2;
  G__19126.cljs$core$IFn$_invoke$arity$3 = G__19126__3;
  return G__19126;
}();
enfocus.core.ISelector["string"] = true;
enfocus.core.select["string"] = function() {
  var G__19127 = null;
  var G__19127__1 = function(this$) {
    return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$, document, "");
  };
  var G__19127__2 = function(this$, root) {
    return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$, root, "");
  };
  var G__19127__3 = function(this$, root, id_mask) {
    return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3(id_mask, root, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$], null));
  };
  G__19127 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__19127__1.call(this, this$);
      case 2:
        return G__19127__2.call(this, this$, root);
      case 3:
        return G__19127__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19127.cljs$core$IFn$_invoke$arity$1 = G__19127__1;
  G__19127.cljs$core$IFn$_invoke$arity$2 = G__19127__2;
  G__19127.cljs$core$IFn$_invoke$arity$3 = G__19127__3;
  return G__19127;
}();
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$ = true;
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$1 = function(this$) {
  var this$__$1 = this;
  return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$__$1, document, "");
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$2 = function(this$, root) {
  var this$__$1 = this;
  return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$__$1, root, "");
};
cljs.core.PersistentVector.prototype.enfocus$core$ISelector$select$arity$3 = function(this$, root, id_mask) {
  var this$__$1 = this;
  return enfocus.core.css_select.cljs$core$IFn$_invoke$arity$3(id_mask, root, this$__$1);
};
enfocus.core.ISelector["function"] = true;
enfocus.core.select["function"] = function() {
  var G__19128 = null;
  var G__19128__1 = function(this$) {
    return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$, document, "");
  };
  var G__19128__2 = function(this$, root) {
    return enfocus.core.select.cljs$core$IFn$_invoke$arity$3(this$, root, "");
  };
  var G__19128__3 = function(this$, root, id_mask) {
    var G__19124 = root;
    var G__19125 = id_mask;
    return this$.cljs$core$IFn$_invoke$arity$2 ? this$.cljs$core$IFn$_invoke$arity$2(G__19124, G__19125) : this$.call(null, G__19124, G__19125);
  };
  G__19128 = function(this$, root, id_mask) {
    switch(arguments.length) {
      case 1:
        return G__19128__1.call(this, this$);
      case 2:
        return G__19128__2.call(this, this$, root);
      case 3:
        return G__19128__3.call(this, this$, root, id_mask);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19128.cljs$core$IFn$_invoke$arity$1 = G__19128__1;
  G__19128.cljs$core$IFn$_invoke$arity$2 = G__19128__2;
  G__19128.cljs$core$IFn$_invoke$arity$3 = G__19128__3;
  return G__19128;
}();
enfocus.core.ITransform["null"] = true;
enfocus.core.apply_transform["null"] = function() {
  var G__19129 = null;
  var G__19129__2 = function(trans, nodes) {
    return nodes;
  };
  var G__19129__3 = function(trans, nodes, chain) {
    return nodes;
  };
  G__19129 = function(trans, nodes, chain) {
    switch(arguments.length) {
      case 2:
        return G__19129__2.call(this, trans, nodes);
      case 3:
        return G__19129__3.call(this, trans, nodes, chain);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19129.cljs$core$IFn$_invoke$arity$2 = G__19129__2;
  G__19129.cljs$core$IFn$_invoke$arity$3 = G__19129__3;
  return G__19129;
}();
enfocus.core.ITransform["function"] = true;
enfocus.core.apply_transform["function"] = function() {
  var G__19130 = null;
  var G__19130__2 = function(trans, nodes) {
    return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(trans, enfocus.core.nodes__GT_coll(nodes)));
  };
  var G__19130__3 = function(trans, nodes, chain) {
    var pnod_col = enfocus.core.nodes__GT_coll(nodes);
    var val = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(trans, pnod_col));
    if (cljs.core.truth_(chain)) {
      return enfocus.core.apply_transform.cljs$core$IFn$_invoke$arity$2(chain, nodes);
    } else {
      return val;
    }
  };
  G__19130 = function(trans, nodes, chain) {
    switch(arguments.length) {
      case 2:
        return G__19130__2.call(this, trans, nodes);
      case 3:
        return G__19130__3.call(this, trans, nodes, chain);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19130.cljs$core$IFn$_invoke$arity$2 = G__19130__2;
  G__19130.cljs$core$IFn$_invoke$arity$3 = G__19130__3;
  return G__19130;
}();
goog.provide("enfocus.events");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("enfocus.core");
goog.require("goog.dom");
goog.require("goog.events");
enfocus.events.view_port_monitor = function() {
  var G__19274 = null;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19274) : cljs.core.atom.call(null, G__19274);
}();
enfocus.events.get_vp_monitor = function get_vp_monitor() {
  if (cljs.core.truth_(function() {
    var G__19278 = enfocus.events.view_port_monitor;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19278) : cljs.core.deref.call(null, G__19278);
  }())) {
    var G__19279 = enfocus.events.view_port_monitor;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19279) : cljs.core.deref.call(null, G__19279);
  } else {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(enfocus.events.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor;
    });
    var G__19280 = enfocus.events.view_port_monitor;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19280) : cljs.core.deref.call(null, G__19280);
  }
};
enfocus.events.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj = new Object;
  obj.listen = function(obj) {
    return function(elm, func, opt_cap, opt_scope, opt_handler) {
      var callback = function() {
        var G__19298 = func;
        return enfocus.events.mouse_enter_leave.cljs$core$IFn$_invoke$arity$1 ? enfocus.events.mouse_enter_leave.cljs$core$IFn$_invoke$arity$1(G__19298) : enfocus.events.mouse_enter_leave.call(null, G__19298);
      }();
      callback.listen = func;
      callback.scope = opt_scope;
      if (cljs.core.truth_(opt_handler)) {
        return opt_handler.listen(elm, cljs.core.name(event), callback);
      } else {
        var G__19299 = elm;
        var G__19300 = cljs.core.name(event);
        var G__19301 = callback;
        return goog.events.listen(G__19299, G__19300, G__19301);
      }
    };
  }(obj);
  obj.unlisten = function(obj) {
    return function(elm, func, opt_cap, opt_scope, opt_handler) {
      var listeners = function() {
        var G__19302 = elm;
        var G__19303 = cljs.core.name(event);
        var G__19304 = false;
        return goog.events.getListeners(G__19302, G__19303, G__19304);
      }();
      var seq__19305_19315 = cljs.core.seq(listeners);
      var chunk__19306_19316 = null;
      var count__19307_19317 = 0;
      var i__19308_19318 = 0;
      while (true) {
        if (i__19308_19318 < count__19307_19317) {
          var obj_19319__$1 = chunk__19306_19316.cljs$core$IIndexed$_nth$arity$2(null, i__19308_19318);
          var listener_19320 = obj_19319__$1.listener;
          if ((cljs.core.not(func) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(listener_19320.listen, func)) && (cljs.core.not(opt_scope) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(listener_19320.scope, opt_scope))) {
            if (cljs.core.truth_(opt_handler)) {
              opt_handler.unlisten(elm, cljs.core.name(event), listener_19320);
            } else {
              var G__19309_19321 = elm;
              var G__19310_19322 = cljs.core.name(event);
              var G__19311_19323 = listener_19320;
              goog.events.unlisten(G__19309_19321, G__19310_19322, G__19311_19323);
            }
          } else {
          }
          var G__19324 = seq__19305_19315;
          var G__19325 = chunk__19306_19316;
          var G__19326 = count__19307_19317;
          var G__19327 = i__19308_19318 + 1;
          seq__19305_19315 = G__19324;
          chunk__19306_19316 = G__19325;
          count__19307_19317 = G__19326;
          i__19308_19318 = G__19327;
          continue;
        } else {
          var temp__4126__auto___19328 = cljs.core.seq(seq__19305_19315);
          if (temp__4126__auto___19328) {
            var seq__19305_19329__$1 = temp__4126__auto___19328;
            if (cljs.core.chunked_seq_QMARK_(seq__19305_19329__$1)) {
              var c__4530__auto___19330 = cljs.core.chunk_first(seq__19305_19329__$1);
              var G__19331 = cljs.core.chunk_rest(seq__19305_19329__$1);
              var G__19332 = c__4530__auto___19330;
              var G__19333 = cljs.core.count(c__4530__auto___19330);
              var G__19334 = 0;
              seq__19305_19315 = G__19331;
              chunk__19306_19316 = G__19332;
              count__19307_19317 = G__19333;
              i__19308_19318 = G__19334;
              continue;
            } else {
              var obj_19335__$1 = cljs.core.first(seq__19305_19329__$1);
              var listener_19336 = obj_19335__$1.listener;
              if ((cljs.core.not(func) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(listener_19336.listen, func)) && (cljs.core.not(opt_scope) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(listener_19336.scope, opt_scope))) {
                if (cljs.core.truth_(opt_handler)) {
                  opt_handler.unlisten(elm, cljs.core.name(event), listener_19336);
                } else {
                  var G__19312_19337 = elm;
                  var G__19313_19338 = cljs.core.name(event);
                  var G__19314_19339 = listener_19336;
                  goog.events.unlisten(G__19312_19337, G__19313_19338, G__19314_19339);
                }
              } else {
              }
              var G__19340 = cljs.core.next(seq__19305_19329__$1);
              var G__19341 = null;
              var G__19342 = 0;
              var G__19343 = 0;
              seq__19305_19315 = G__19340;
              chunk__19306_19316 = G__19341;
              count__19307_19317 = G__19342;
              i__19308_19318 = G__19343;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return listeners;
    };
  }(obj);
  return obj;
};
enfocus.events.wrapper_register = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.constant$keyword$26, enfocus.events.gen_enter_leave_wrapper(cljs.core.constant$keyword$28), cljs.core.constant$keyword$27, enfocus.events.gen_enter_leave_wrapper(cljs.core.constant$keyword$29)], null);
enfocus.events.listen = function listen(event, func) {
  var wrapper = function() {
    var G__19354 = event;
    return enfocus.events.wrapper_register.cljs$core$IFn$_invoke$arity$1 ? enfocus.events.wrapper_register.cljs$core$IFn$_invoke$arity$1(G__19354) : enfocus.events.wrapper_register.call(null, G__19354);
  }();
  return function(wrapper) {
    return function(pnod) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$30, event) && window === pnod) {
        var G__19355 = enfocus.events.get_vp_monitor();
        var G__19356 = "resize";
        var G__19357 = func;
        return goog.events.listen(G__19355, G__19356, G__19357);
      } else {
        if (wrapper == null) {
          var G__19358 = pnod;
          var G__19359 = cljs.core.name(event);
          var G__19360 = func;
          return goog.events.listen(G__19358, G__19359, G__19360);
        } else {
          var G__19361 = pnod;
          var G__19362 = wrapper;
          var G__19363 = func;
          return goog.events.listenWithWrapper(G__19361, G__19362, G__19363);
        }
      }
    };
  }(wrapper);
};
enfocus.events.remove_listeners = function() {
  var remove_listeners__delegate = function(event_list) {
    var get_name = function(p1__19364_SHARP_) {
      return cljs.core.name(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__19364_SHARP_, cljs.core.constant$keyword$26) ? cljs.core.constant$keyword$28 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__19364_SHARP_, cljs.core.constant$keyword$27) ? cljs.core.constant$keyword$29 : p1__19364_SHARP_);
    };
    return function(get_name) {
      return function(pnod) {
        var seq__19373 = cljs.core.seq(event_list);
        var chunk__19374 = null;
        var count__19375 = 0;
        var i__19376 = 0;
        while (true) {
          if (i__19376 < count__19375) {
            var ev = chunk__19374.cljs$core$IIndexed$_nth$arity$2(null, i__19376);
            var G__19377_19381 = pnod;
            var G__19378_19382 = get_name(ev);
            goog.events.removeAll(G__19377_19381, G__19378_19382);
            var G__19383 = seq__19373;
            var G__19384 = chunk__19374;
            var G__19385 = count__19375;
            var G__19386 = i__19376 + 1;
            seq__19373 = G__19383;
            chunk__19374 = G__19384;
            count__19375 = G__19385;
            i__19376 = G__19386;
            continue;
          } else {
            var temp__4126__auto__ = cljs.core.seq(seq__19373);
            if (temp__4126__auto__) {
              var seq__19373__$1 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_(seq__19373__$1)) {
                var c__4530__auto__ = cljs.core.chunk_first(seq__19373__$1);
                var G__19387 = cljs.core.chunk_rest(seq__19373__$1);
                var G__19388 = c__4530__auto__;
                var G__19389 = cljs.core.count(c__4530__auto__);
                var G__19390 = 0;
                seq__19373 = G__19387;
                chunk__19374 = G__19388;
                count__19375 = G__19389;
                i__19376 = G__19390;
                continue;
              } else {
                var ev = cljs.core.first(seq__19373__$1);
                var G__19379_19391 = pnod;
                var G__19380_19392 = get_name(ev);
                goog.events.removeAll(G__19379_19391, G__19380_19392);
                var G__19393 = cljs.core.next(seq__19373__$1);
                var G__19394 = null;
                var G__19395 = 0;
                var G__19396 = 0;
                seq__19373 = G__19393;
                chunk__19374 = G__19394;
                count__19375 = G__19395;
                i__19376 = G__19396;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(get_name);
  };
  var remove_listeners = function(var_args) {
    var event_list = null;
    if (arguments.length > 0) {
      var G__19397__i = 0, G__19397__a = new Array(arguments.length - 0);
      while (G__19397__i < G__19397__a.length) {
        G__19397__a[G__19397__i] = arguments[G__19397__i + 0];
        ++G__19397__i;
      }
      event_list = new cljs.core.IndexedSeq(G__19397__a, 0);
    }
    return remove_listeners__delegate.call(this, event_list);
  };
  remove_listeners.cljs$lang$maxFixedArity = 0;
  remove_listeners.cljs$lang$applyTo = function(arglist__19398) {
    var event_list = cljs.core.seq(arglist__19398);
    return remove_listeners__delegate(event_list);
  };
  remove_listeners.cljs$core$IFn$_invoke$arity$variadic = remove_listeners__delegate;
  return remove_listeners;
}();
enfocus.events.unlisten = function() {
  var unlisten = null;
  var unlisten__1 = function(event) {
    return enfocus.events.remove_listeners.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([event], 0));
  };
  var unlisten__2 = function(event, func) {
    var wrapper = function() {
      var G__19406 = event;
      return enfocus.events.wrapper_register.cljs$core$IFn$_invoke$arity$1 ? enfocus.events.wrapper_register.cljs$core$IFn$_invoke$arity$1(G__19406) : enfocus.events.wrapper_register.call(null, G__19406);
    }();
    return function(wrapper) {
      return function(pnod) {
        if (wrapper == null) {
          var G__19407 = pnod;
          var G__19408 = cljs.core.name(event);
          var G__19409 = func;
          return goog.events.unlisten(G__19407, G__19408, G__19409);
        } else {
          var G__19410 = pnod;
          var G__19411 = wrapper;
          var G__19412 = func;
          return goog.events.unlistenWithWrapper(G__19410, G__19411, G__19412);
        }
      };
    }(wrapper);
  };
  unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return unlisten__1.call(this, event);
      case 2:
        return unlisten__2.call(this, event, func);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$1 = unlisten__1;
  unlisten.cljs$core$IFn$_invoke$arity$2 = unlisten__2;
  return unlisten;
}();
enfocus.events.get_node_chain = function get_node_chain(top, node) {
  if (node == null || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(node, top)) {
    return cljs.core.List.EMPTY;
  } else {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(get_node_chain(top, node.parentNode), node);
  }
};
enfocus.events.create_event = function create_event(cur, cur_event) {
  var event = function() {
    var G__19416 = cur_event;
    return goog.object.clone(G__19416);
  }();
  event.currentTarget = cur;
  return event;
};
enfocus.events.listen_live = function listen_live(event, selector, func) {
  return function(node) {
    return enfocus.core.at.cljs$core$IFn$_invoke$arity$variadic(node, cljs.core.array_seq([enfocus.events.listen(event, function(p1__19417_SHARP_) {
      var seq__19424 = cljs.core.seq(enfocus.events.get_node_chain(node, p1__19417_SHARP_.target));
      var chunk__19425 = null;
      var count__19426 = 0;
      var i__19427 = 0;
      while (true) {
        if (i__19427 < count__19426) {
          var el = chunk__19425.cljs$core$IIndexed$_nth$arity$2(null, i__19427);
          enfocus.core.at.cljs$core$IFn$_invoke$arity$variadic(el, cljs.core.array_seq([enfocus.core.filter(enfocus.core.match_QMARK_(selector), function(seq__19424, chunk__19425, count__19426, i__19427, el) {
            return function(node__$1) {
              var event_copy = enfocus.events.create_event(el, p1__19417_SHARP_);
              var G__19428_19430 = event_copy;
              func.cljs$core$IFn$_invoke$arity$1 ? func.cljs$core$IFn$_invoke$arity$1(G__19428_19430) : func.call(null, G__19428_19430);
              if (cljs.core.truth_(event_copy.defaultPrevented)) {
                p1__19417_SHARP_.preventDefault();
              } else {
              }
              if (cljs.core.truth_(event_copy.propagationStopped)) {
                return p1__19417_SHARP_.stopPropagation();
              } else {
                return null;
              }
            };
          }(seq__19424, chunk__19425, count__19426, i__19427, el))], 0));
          var G__19431 = seq__19424;
          var G__19432 = chunk__19425;
          var G__19433 = count__19426;
          var G__19434 = i__19427 + 1;
          seq__19424 = G__19431;
          chunk__19425 = G__19432;
          count__19426 = G__19433;
          i__19427 = G__19434;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq(seq__19424);
          if (temp__4126__auto__) {
            var seq__19424__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__19424__$1)) {
              var c__4530__auto__ = cljs.core.chunk_first(seq__19424__$1);
              var G__19435 = cljs.core.chunk_rest(seq__19424__$1);
              var G__19436 = c__4530__auto__;
              var G__19437 = cljs.core.count(c__4530__auto__);
              var G__19438 = 0;
              seq__19424 = G__19435;
              chunk__19425 = G__19436;
              count__19426 = G__19437;
              i__19427 = G__19438;
              continue;
            } else {
              var el = cljs.core.first(seq__19424__$1);
              enfocus.core.at.cljs$core$IFn$_invoke$arity$variadic(el, cljs.core.array_seq([enfocus.core.filter(enfocus.core.match_QMARK_(selector), function(seq__19424, chunk__19425, count__19426, i__19427, el, seq__19424__$1, temp__4126__auto__) {
                return function(node__$1) {
                  var event_copy = enfocus.events.create_event(el, p1__19417_SHARP_);
                  var G__19429_19439 = event_copy;
                  func.cljs$core$IFn$_invoke$arity$1 ? func.cljs$core$IFn$_invoke$arity$1(G__19429_19439) : func.call(null, G__19429_19439);
                  if (cljs.core.truth_(event_copy.defaultPrevented)) {
                    p1__19417_SHARP_.preventDefault();
                  } else {
                  }
                  if (cljs.core.truth_(event_copy.propagationStopped)) {
                    return p1__19417_SHARP_.stopPropagation();
                  } else {
                    return null;
                  }
                };
              }(seq__19424, chunk__19425, count__19426, i__19427, el, seq__19424__$1, temp__4126__auto__))], 0));
              var G__19440 = cljs.core.next(seq__19424__$1);
              var G__19441 = null;
              var G__19442 = 0;
              var G__19443 = 0;
              seq__19424 = G__19440;
              chunk__19425 = G__19441;
              count__19426 = G__19442;
              i__19427 = G__19443;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    })], 0));
  };
};
enfocus.events.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while (true) {
    if (cljs.core.not(child)) {
      return false;
    } else {
      if (parent === child) {
        return false;
      } else {
        if (child.parentNode === parent) {
          return true;
        } else {
          var G__19444 = parent;
          var G__19445 = child.parentNode;
          parent = G__19444;
          child = G__19445;
          continue;
        }
      }
    }
    break;
  }
};
enfocus.events.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re = e.relatedTarget;
    var this$ = e.currentTarget;
    if (!(re === this$) && !enfocus.events.child_of_QMARK_(this$, re)) {
      var G__19447 = e;
      return func.cljs$core$IFn$_invoke$arity$1 ? func.cljs$core$IFn$_invoke$arity$1(G__19447) : func.call(null, G__19447);
    } else {
      return null;
    }
  };
};
goog.provide("rat.core");
goog.require("cljs.core");
goog.require("enfocus.events");
goog.require("enfocus.core");
goog.require("jayq.core");
goog.require("clojure.string");
rat.core.state = cljs.core.atom.call(null, null);
rat.core.log = function log(id, status) {
  if (cljs.core.not.call(null, cljs.core.deref.call(null, rat.core.state))) {
    cljs.core.reset_BANG_.call(null, rat.core.state, status);
    return jayq.core.ajax.call(null, "/log", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "id", "id", -1388402092), id], null)], null));
  } else {
    return null;
  }
};
rat.core.check_answer = function check_answer(_) {
  var entered = enfocus.core.from.call(null, "#association", enfocus.core.get_prop.call(null, new cljs.core.Keyword(null, "value", "value", 305978217)));
  var correct = enfocus.core.from.call(null, "#correct", enfocus.core.get_prop.call(null, new cljs.core.Keyword(null, "value", "value", 305978217)));
  var words = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, clojure.string.split.call(null, correct, /,/));
  var guessed = cljs.core.contains_QMARK_.call(null, words, clojure.string.lower_case.call(null, entered));
  if (guessed) {
    rat.core.log.call(null, enfocus.core.from.call(null, "#id", enfocus.core.get_prop.call(null, new cljs.core.Keyword(null, "value", "value", 305978217))), "guessed");
  } else {
  }
  enfocus.core.at.call(null, "#show-answer", enfocus.core.set_style.call(null, new cljs.core.Keyword(null, "display", "display", 242065432), guessed ? "none" : "initial"));
  return enfocus.core.at.call(null, "#success", enfocus.core.set_style.call(null, new cljs.core.Keyword(null, "display", "display", 242065432), guessed ? "initial" : "none"));
};
rat.core.show_answer = function show_answer(_) {
  rat.core.log.call(null, enfocus.core.from.call(null, "#id", enfocus.core.get_prop.call(null, new cljs.core.Keyword(null, "value", "value", 305978217))), "gaveup");
  enfocus.core.at.call(null, "#answer-block", enfocus.core.set_style.call(null, new cljs.core.Keyword(null, "display", "display", 242065432), "table"));
  return enfocus.core.at.call(null, "#question-block", enfocus.core.set_style.call(null, new cljs.core.Keyword(null, "display", "display", 242065432), "none"));
};
rat.core.setup = function setup() {
  return enfocus.core.at.call(null, document, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#association"], null), enfocus.events.listen.call(null, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), rat.core.check_answer), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#show-answer"], null), enfocus.events.listen.call(null, new cljs.core.Keyword(null, "click", "click", 1912301393), rat.core.show_answer));
};
window.onload = rat.core.setup;
